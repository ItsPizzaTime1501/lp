{"version":3,"sources":["withRoot.js","components/tabs.js","components/appBar.js","utils/stableSort.js","components/profileTable.js","components/profileDialog.js","views/aboutView.js","components/recordsTable.js","views/recordsView.js","components/scoresTable.js","withContext.js","views/scoreboardView.js","theme.js","app.js","client.js","contextProvider.js","registerServiceWorker.js","index.js"],"names":["Component","SiteTabs","_this$props","this","props","currentTab","handleTabChange","react_default","a","createElement","Fragment","Tabs_default","value","onChange","variant","textColor","color","indicatorColor","Tab_default","label","React","AppBarWithDrawer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","open","showDrawer","setState","gotoPage","page","window","homepage","pageLinks","text","link","_this2","classes","onTabChange","list","className","List_default","ListItem_default","button","key","onClick","ListItemText_default","primary","Divider_default","map","item","index","concat","root","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","aria-label","Menu_default","Typography_default","tabs","SwipeableDrawer_default","onClose","onOpen","tabIndex","role","onKeyDown","withStyles","theme","paddingBottom","spacing","unit","width","marginLeft","marginRight","stableSort","array","order","orderBy","desc","b","cmp","el","sort","rows","id","numeric","sortable","ProfileTableHead","createSortHandler","property","event","onRequestSort","TableHead_default","TableRow_default","row","TableCell_default","align","padding","disablePadding","sortDirection","Tooltip_default","title","placement","enterDelay","TableSortLabel_default","active","direction","ProfileTable","rowsPerPage","handleRequestSort","_","_this3","handleChangePage","handleChangeRowsPerPage","target","data","_this$state","UnknownScoreInfo","disableFocusListener","disableTouchListener","Link_default","style","cursor","Table_default","aria-labelledby","profileTable_ProfileTableHead","rowCount","length","TableBody_default","slice","record","score","delta","wrDelta","hover","rel","href","name","TablePagination_default","rowsPerPageOptions","component","count","labelDisplayedRows","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","Transition","Slide_default","assign","ProfileDialog","gotoSteamProfile","opener","dialogOpen","handleClose","Dialog_default","fullScreen","TransitionComponent","Button_default","Avatar_default","src","avatar","flex","Close_default","Grid_default","container","gridView","xs","md","lg","Paper_default","entries","LinearProgress_default","profileTable","marginTop","AboutView","description","tooltip","idx","madeWithLink","detectedCheaters","help","cheaters","aboutBox","dense","export_date","RecordsTableHead","RecordsTable","ev","gotoYouTube","query","replace","wr","_this4","_this$props2","ExcludedMapsInfo","helpLink","recordsTable_RecordsTableHead","excluded","ties","PlayArrow_default","RecordsView","searchTerm","setSearchTerm","records","filter","x","toUpperCase","startsWith","parseInt","searchBox","FormGroup_default","Input_default","placeholder","inputProps","disableUnderline","recordsTable","filterRecords","marginBottom","ScoresTableHead","ScoresTable","handleClickOpen","scoresTable_ScoresTableHead","profile","getProfile","stats","getStats","rank","playerCell","avatar_link","clickLink","profile_name","percentage","display","alignItems","AppContext","createContext","withContext","Consumer","context","downloadBoard","boardType","dialogOpener","scoresTable","Theme","createMuiTheme","palette","light","teal","main","dark","secondary","typography","useNextVariants","App","_this$props$boards","boards","sp","coop","overall","currentProfile","cacheProfile","clearProfile","appBar","views","scoreboardView","recordsView","aboutView","profileDialog","PureComponent","withRoot","styles","CssBaseline_default","Client","baseApi","route","console","log","fetch","get","res","json","board","Error","ContextProvider","profiles","calcWrDelta","entry","Math","abs","findRecord","find","r","findProfile","p","_downloadBoard","asyncToGenerator","regenerator_default","mark","_callee","type","wrap","_context","prev","next","abrupt","sent","stop","_x","apply","arguments","api","perfectScores","playerCache","getProfiles","getRecords","initRecords","tied_records","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","mode","err","return","that","getBoard","_profile","_stats","round","prevState","objectSpread","defineProperty","profileId","getPlayer","player","_iterator3","_iteratorNormalCompletion3","_step3","push","sp_score","coop_score","overall_score","Provider","children","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","app","contextProvider","ReactDOM","render","document","querySelector","URL","process","origin","addEventListener","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c6c438e3.chunk.js","sourcesContent":["import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Theme from './theme';\n\nexport const withRoot = (Component) => (props) => (\n    <MuiThemeProvider theme={Theme}>\n        <CssBaseline />\n        <Component {...props} />\n    </MuiThemeProvider>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nclass SiteTabs extends React.Component {\n    static propTypes = {\n        currentTab: PropTypes.number.isRequired,\n        handleTabChange: PropTypes.func.isRequired,\n    };\n\n    render() {\n        const { currentTab, handleTabChange } = this.props;\n\n        return (\n            <>\n                <Tabs\n                    value={currentTab}\n                    onChange={handleTabChange}\n                    variant=\"scrollable\"\n                    textColor=\"inherit\"\n                    color=\"inherit\"\n                    indicatorColor=\"secondary\"\n                >\n                    <Tab label=\"Single Player\" />\n                    <Tab label=\"Cooperative\" />\n                    <Tab label=\"Overall\" />\n                    <Tab label=\"Records\" />\n                    <Tab label=\"About\" />\n                </Tabs>\n            </>\n        );\n    }\n}\n\nexport default SiteTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport SiteTabs from '../components/tabs';\n\nconst styles = theme => ({\n    root: {\n        paddingBottom: theme.spacing.unit * 14,\n    },\n    list: {\n        width: theme.spacing.unit * 25,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n});\n\nclass AppBarWithDrawer extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        currentTab: PropTypes.number.isRequired,\n        onTabChange: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n\n        this.homepage = 'https://nekzor.github.io/';\n        this.pageLinks = [\n            { text: 'Glitches', link: 'glitches.html' },\n            { text: 'Least Portals', link: 'lp' },\n            { text: 'Demo Parser', link: 'parser.html' }\n        ];\n    }\n\n    state = {\n        open: false,\n    };\n\n    showDrawer = (state) => () => {\n        this.setState({ open: state });\n    }\n\n    gotoPage = (page) => () => {\n        window.open(this.homepage + page, '_self');\n    }\n\n    render() {\n        const { classes, currentTab, onTabChange } = this.props;\n\n        const list = (\n            <div className={classes.list}>\n                <List>\n                    <ListItem button key={0} onClick={this.gotoPage(this.homepage + 'index.html')}>\n                        <ListItemText primary={'nekzor.github.io'} />\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    {this.pageLinks.map((item, index) => (\n                        <ListItem button key={index} onClick={this.gotoPage(`${item.link}`)}>\n                            <ListItemText primary={item.text} />\n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n        );\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"fixed\">\n                    <Toolbar>\n                        <IconButton onClick={this.showDrawer(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\">Least Portals</Typography>\n                    </Toolbar>\n                    <SiteTabs currentTab={currentTab} handleTabChange={onTabChange} />\n                </AppBar>\n                <SwipeableDrawer open={this.state.open} onClose={this.showDrawer(false)} onOpen={this.showDrawer(true)}>\n                    <div\n                        tabIndex={0}\n                        role=\"button\"\n                        onClick={this.showDrawer(false)}\n                        onKeyDown={this.showDrawer(false)}\n                    >\n                        {list}\n                    </div>\n                </SwipeableDrawer>\n            </div>\n        )\n    };\n}\n\nexport default withStyles(styles)(AppBarWithDrawer);\n","const stableSort = (array, order, orderBy) => {\n    let desc = (a, b) => {\n        if (b[orderBy] < a[orderBy]) return -1;\n        if (b[orderBy] > a[orderBy]) return 1;\n        return 0;\n    };\n\n    let cmp = (order === 'desc')\n        ? (a, b) => desc(a, b)\n        : (a, b) => -desc(a, b);\n    \n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map(el => el[0]);\n};\n\nexport default stableSort;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport stableSort from '../utils/stableSort';\n\nconst rows = [\n    { id: 'name', numeric: false, sortable: true, label: 'Map' },\n    { id: 'score', numeric: true, sortable: true, label: 'Portals' },\n    { id: 'wrDelta', numeric: true, sortable: true, label: 'ΔWR' },\n];\n\nclass ProfileTableHead extends React.Component {\n    static propTypes = {\n        onRequestSort: PropTypes.func.isRequired,\n        order: PropTypes.string.isRequired,\n        orderBy: PropTypes.string.isRequired,\n        rowCount: PropTypes.number.isRequired,\n    };\n\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { order, orderBy } = this.props;\n\n        return (\n            <TableHead>\n                <TableRow>\n                    {rows.map(\n                        row => (\n                            <TableCell\n                                key={row.id}\n                                align={row.numeric ? 'center' : 'center'}\n                                padding={row.disablePadding ? 'none' : 'default'}\n                                sortDirection={orderBy === row.id ? order : false}\n                            >\n                                {row.sortable === true &&\n                                    <Tooltip\n                                        title=\"Sort\"\n                                        placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                                        enterDelay={300}\n                                    >\n                                        <TableSortLabel\n                                            active={orderBy === row.id}\n                                            direction={order}\n                                            onClick={this.createSortHandler(row.id)}\n                                        >\n                                            {row.label}\n                                        </TableSortLabel>\n                                    </Tooltip>\n                                }\n                                {row.sortable === false && row.label}\n                            </TableCell>\n                        ),\n                        this,\n                    )}\n                </TableRow>\n            </TableHead>\n        );\n    }\n}\n\nclass ProfileTable extends React.Component {\n    static propTypes = {\n        data: PropTypes.array.isRequired,\n    };\n\n    state = {\n        order: 'asc',\n        orderBy: 'index',\n        page: 0,\n        rowsPerPage: 100,\n    };\n\n    handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    };\n\n    handleChangePage = (_, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    render() {\n        const { data } = this.props;\n        const { order, orderBy, rowsPerPage, page } = this.state;\n\n        const UnknownScoreInfo = () => (\n            <Tooltip\n                placement=\"right\"\n                title=\"Unknown score.\"\n                disableFocusListener\n                disableTouchListener\n            >\n                <Link style={{cursor: 'help'}}>n/a</Link>\n            </Tooltip>\n        );\n\n        return (\n            <>\n                <Table aria-labelledby=\"tableTitle\">\n                    <ProfileTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={this.handleRequestSort}\n                        rowCount={data.length}\n                    />\n                    <TableBody>\n                        {stableSort(data, order, orderBy)\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map(record => {\n                                let score = record.score != null\n                                    ? record.score\n                                    : <UnknownScoreInfo />;\n                                let delta = record.score != null\n                                    ? (record.wrDelta === 0)\n                                        ? '-'\n                                        : `+${record.wrDelta}`\n                                    : <UnknownScoreInfo />;\n\n                                return (\n                                    <TableRow hover tabIndex={-1} key={record.id}>\n                                        <TableCell align=\"center\">\n                                            <Link\n                                                target=\"_blank\"\n                                                rel=\"noopener\"\n                                                color=\"inherit\"\n                                                href={`https://steamcommunity.com/stats/Portal2/leaderboards/${record.id}`}\n                                            >\n                                                {record.name}\n                                            </Link>\n                                        </TableCell>\n                                        <TableCell align=\"center\">{score}</TableCell>\n                                        <TableCell align=\"center\">{delta}</TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 20, 50, 100]}\n                    component=\"div\"\n                    count={data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    labelDisplayedRows={() => ''}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </>\n        );\n    }\n}\n\nexport default ProfileTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport ProfileTable from './profileTable';\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    gridView: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    flex: {\n        flex: 1,\n    },\n});\n\nconst Transition = (props) => {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nclass ProfileDialog extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        dialogOpen: PropTypes.bool.isRequired,\n        handleClose: PropTypes.func.isRequired,\n        data: PropTypes.object.isRequired,\n    };\n\n    gotoSteamProfile = (id) => {\n        let tab = window.open(`https://steamcommunity.com/profiles/${id}`, '_blank');\n        tab.opener = null;\n    };\n\n    render() {\n        const { classes, dialogOpen, handleClose, data } = this.props;\n\n        return (\n            <>\n                <Dialog\n                    fullScreen\n                    open={dialogOpen}\n                    onClose={handleClose}\n                    TransitionComponent={Transition}\n                >\n                    <AppBar position=\"sticky\">\n                        <Toolbar>\n                            <Tooltip placement=\"bottom\" title=\"Open Steam profile\" disableFocusListener disableTouchListener>\n                                <Button color=\"inherit\" onClick={() => this.gotoSteamProfile(data.id)}>\n                                    <Avatar src={data.avatar} />\n                                </Button>\n                            </Tooltip>\n                            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                                &nbsp;&nbsp;&nbsp;{data.name}\n                            </Typography>\n                            <IconButton color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\n                                <CloseIcon />\n                            </IconButton>\n                        </Toolbar>\n                    </AppBar>\n                    <Grid container className={classes.gridView}>\n                        <Grid item xs={false} md={1} lg={3} />\n                        <Grid item xs={12} md={10} lg={6}>\n                            <Paper>\n                                {data.entries.length === 0 && <LinearProgress />}\n                                <ProfileTable data={data.entries} />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfileDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    help: {\n        cursor: 'help',\n    },\n    aboutBox: {\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nclass AboutView extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        data: PropTypes.object.isRequired,\n    };\n\n    constructor() {\n        super();\n\n        this.description = [\n            'This leaderboard includes all legit players who care about least portal records in Portal 2.',\n            '',\n            'How it works:',\n            '- Page generator fetches 5k entries per leaderboard due to the limit for one API call',\n            '- Some leaderboards are excluded because too many players are tied for 1st, 2nd rank etc.',\n            '- Users who tied the world record will be prioritized',\n            '- Cheaters with invalid scores will be ignored'\n        ];\n        this.tooltip = 'Automatic ban system catches users who cheated at least once.';\n    }\n\n    render() {\n        const { classes, data } = this.props;\n\n        const description = this.description.map((text, idx) => (\n            <ListItem key={idx}>\n                <Typography variant=\"body1\">\n                    {text}\n                </Typography>\n            </ListItem>\n        ));\n\n        const madeWithLink = <Link rel=\"noopener\" href=\"https://nekzor.github.io/SteamCommunity.Net\">SteamCommunity.Net</Link>;\n\n        const detectedCheaters = (\n            <Tooltip\n                placement=\"right\"\n                title={this.tooltip}\n                disableFocusListener\n                disableTouchListener\n            >\n                <Link className={classes.help}>{data.cheaters.length}</Link>\n            </Tooltip>\n        );\n\n        return (\n            <>\n                <Grid container>\n                    <Grid item xs={false} md={1} lg={3} />\n                    <Grid item xs={12} md={10} lg={6}>\n                        <Paper className={classes.aboutBox}>\n                            <List className={classes.list} dense>\n                                <ListItem><Typography component=\"h2\" variant=\"h5\">Who's the lp king?</Typography></ListItem>\n                                {description}\n                                <ListItem></ListItem>\n                                <ListItem><Typography variant=\"subtitle1\">Made with {madeWithLink}</Typography></ListItem>\n                                <ListItem><Typography variant=\"subtitle1\">Number of detected cheaters: {detectedCheaters}</Typography></ListItem>\n                                <ListItem><Typography variant=\"subtitle1\">Last Update: {data.export_date}</Typography></ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(AboutView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nconst rows = [\n    { id: 'name', numeric: false, sortable: true, label: 'Map' },\n    { id: 'wr', numeric: true, sortable: true, label: 'Portals' },\n    { id: 'ties', numeric: true, sortable: true, label: 'Ties' },\n    { id: 'video', numeric: true, sortable: false, label: 'Video' },\n];\n\nclass RecordsTableHead extends React.Component {\n    static propTypes = {\n        onRequestSort: PropTypes.func.isRequired,\n        order: PropTypes.string.isRequired,\n        orderBy: PropTypes.string.isRequired,\n        rowCount: PropTypes.number.isRequired,\n    };\n\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { order, orderBy } = this.props;\n\n        return (\n            <TableHead>\n                <TableRow>\n                    {rows.map(\n                        row => (\n                            <TableCell\n                                key={row.id}\n                                align={row.numeric ? 'center' : 'left'}\n                                padding={row.disablePadding ? 'none' : 'default'}\n                                sortDirection={orderBy === row.id ? order : false}\n                            >\n                                {row.sortable === true &&\n                                    <Tooltip\n                                        title=\"Sort\"\n                                        placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                                        enterDelay={300}\n                                    >\n                                        <TableSortLabel\n                                            active={orderBy === row.id}\n                                            direction={order}\n                                            onClick={this.createSortHandler(row.id)}\n                                        >\n                                            {row.label}\n                                        </TableSortLabel>\n                                    </Tooltip>\n                                }\n                                {row.sortable === false && row.label}\n                            </TableCell>\n                        ),\n                        this,\n                    )}\n                </TableRow>\n            </TableHead>\n        );\n    }\n}\n\nconst styles = _ => ({\n   helpLink: {\n       cursor: 'help'\n    },\n});\n\nclass RecordsTable extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        data: PropTypes.array.isRequired,\n    };\n\n    state = {\n        order: 'asc',\n        orderBy: 'index',\n        page: 0,\n        rowsPerPage: 10,\n    };\n\n    handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    };\n\n    handleChangePage = (_, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = (ev) => {\n        this.setState({ rowsPerPage: ev.target.value });\n    };\n\n    gotoYouTube = (record) => () => {\n        let query = `Portal+2+${record.name.replace(/ /g, '+')}+in+${record.wr}+Portals`;\n        let tab = window.open(`https://www.youtube.com/results?search_query=${query}`, '_blank');\n        tab.opener = null;\n    };\n\n    render() {\n        const { classes, data } = this.props;\n        const { order, orderBy, rowsPerPage, page } = this.state;\n\n        const ExcludedMapsInfo = () => (\n            <Tooltip\n                placement=\"right\"\n                title=\"Disabled tracking records for this map.\"\n                disableFocusListener\n                disableTouchListener\n            >\n                <Link className={classes.helpLink}>n/a</Link>\n            </Tooltip>\n        );\n\n        return (\n            <>\n                <Table aria-labelledby=\"tableTitle\">\n                    <RecordsTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={this.handleRequestSort}\n                        rowCount={data.length}\n                    />\n                    <TableBody>\n                        {stableSort(data, order, orderBy)\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map(record => {\n                                return (\n                                    <TableRow hover tabIndex={-1} key={record.id}>\n                                        <TableCell>\n                                            <Link\n                                                target=\"_blank\"\n                                                rel=\"noopener\"\n                                                color=\"inherit\"\n                                                href={`https://steamcommunity.com/stats/Portal2/leaderboards/${record.id}`}\n                                            >\n                                                {record.name}\n                                            </Link>\n                                        </TableCell>\n                                        <TableCell align=\"center\">{record.wr}</TableCell>\n                                        <TableCell align=\"center\">\n                                            {(record.excluded === true)\n                                                ? <ExcludedMapsInfo />\n                                                : record.ties\n                                            }\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            <Tooltip placement=\"right\" title=\"Search record on YouTube\" disableFocusListener disableTouchListener>\n                                                <IconButton color=\"primary\" onClick={this.gotoYouTube(record)}>\n                                                    <PlayArrow />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 20, 50, 100]}\n                    component=\"div\"\n                    count={data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    labelDisplayedRows={() => ''}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(RecordsTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport RecordsTable from '../components/recordsTable';\n\nconst styles = theme => ({\n    searchBox: {\n        padding: 10,\n        marginBottom: theme.spacing.unit * 3,\n    },\n});\n\nclass RecordsView extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        data: PropTypes.array.isRequired,\n    };\n\n    state = {\n        searchTerm: '',\n    };\n\n    filterRecords(records) {\n        return records.filter(x => {\n            return this.state.searchTerm.length === 0\n                || (x.name.toUpperCase().startsWith(this.state.searchTerm.toUpperCase()) || x.wr === parseInt(this.state.searchTerm));\n        });\n    }\n\n    setSearchTerm = (ev) => {\n        this.setState({ searchTerm: ev.target.value })\n    }\n\n    render() {\n        const { classes, data } = this.props;\n\n        return (\n            <>\n                <Grid container>\n                    <Grid item xs={false} md={1} lg={3} />\n                    <Grid item xs={12} md={10} lg={6}>\n                        <Paper className={classes.searchBox}>\n                            <FormGroup>\n                                <Input\n                                    placeholder=\"Search\"\n                                    inputProps={{ 'aria-label': 'Description' }}\n                                    onChange={this.setSearchTerm}\n                                    disableUnderline={true}\n                                />\n                            </FormGroup>\n                        </Paper>\n                        <Paper>\n                            <RecordsTable data={this.filterRecords(data)} />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(RecordsView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nconst rows = [\n    { id: 'rank', numeric: true, sortable: false, label: 'Rank' },\n    { id: 'name', numeric: false, sortable: false, label: 'Player' },\n    { id: 'score', numeric: true, sortable: true, label: 'Portals' },\n];\n\nclass ScoresTableHead extends React.Component {\n    static propTypes = {\n        onRequestSort: PropTypes.func.isRequired,\n        order: PropTypes.string.isRequired,\n        orderBy: PropTypes.string.isRequired,\n        rowCount: PropTypes.number.isRequired,\n    };\n\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { order, orderBy } = this.props;\n\n        return (\n            <TableHead>\n                <TableRow>\n                    {rows.map(\n                        row => (\n                            <TableCell\n                                key={row.id}\n                                align={row.numeric ? 'center' : 'left'}\n                                sortDirection={orderBy === row.id ? order : false}\n                            >\n                                {row.sortable === true &&\n                                    <Tooltip\n                                        title=\"Sort\"\n                                        placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                                        enterDelay={300}\n                                    >\n                                        <TableSortLabel\n                                            active={orderBy === row.id}\n                                            direction={order}\n                                            onClick={this.createSortHandler(row.id)}\n                                        >\n                                            {row.label}\n                                        </TableSortLabel>\n                                    </Tooltip>\n                                }\n                                {row.sortable === false && row.label}\n                            </TableCell>\n                        )\n                    )}\n                </TableRow>\n            </TableHead>\n        );\n    }\n}\n\nconst styles = _ => ({\n    playerCell: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    clickLink: {\n        cursor: 'pointer',\n    },\n});\n\nclass ScoresTable extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        handleClickOpen: PropTypes.func.isRequired,\n        data: PropTypes.array.isRequired,\n    };\n\n    state = {\n        order: 'asc',\n        orderBy: 'score',\n        page: 0,\n        rowsPerPage: 10,\n    };\n\n    handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    };\n\n    handleChangePage = (_, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = (ev) => {\n        this.setState({ rowsPerPage: ev.target.value });\n    };\n\n    render() {\n        const { classes, data, handleClickOpen } = this.props;\n        const { order, orderBy, rowsPerPage, page } = this.state;\n\n        return (\n            <>\n                <Table>\n                    <ScoresTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={this.handleRequestSort}\n                        rowCount={data.length}\n                    />\n                    <TableBody>\n                        {stableSort(data, order, orderBy)\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map(item => {\n                                let profile = item.getProfile();\n                                let stats = item.getStats();\n                                return (\n                                    <TableRow hover tabIndex={-1} key={item.id}>\n                                        <TableCell align=\"center\">{item.rank}</TableCell>\n                                        <TableCell>\n                                            <div className={classes.playerCell}>\n                                            <Avatar src={profile && profile.avatar_link} />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                            <Link className={classes.clickLink} onClick={() => handleClickOpen(item.id)} color=\"inherit\">\n                                                {(profile && profile.profile_name) || item.id}\n                                            </Link>\n                                            </div>\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title={`${stats.percentage}% (${item.score + stats.delta}+${stats.delta})`}\n                                                disableFocusListener\n                                                disableTouchListener\n                                            >\n                                                <div>{item.score}</div>\n                                            </Tooltip>\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 20, 50, 100]}\n                    component=\"div\"\n                    count={data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    labelDisplayedRows={() => ''}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(ScoresTable);\n","import React from 'react';\n\nexport const AppContext = React.createContext();\n\nexport const withContext = Component => props => (\n    <AppContext.Consumer>\n        {context => <Component {...context} {...props} />}\n    </AppContext.Consumer>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport ScoresTable from '../components/scoresTable';\nimport { withContext } from '../withContext';\n\nclass ScoreboardView extends React.Component {\n    static propTypes = {\n        downloadBoard: PropTypes.func.isRequired,\n        data: PropTypes.array.isRequired,\n        boardType: PropTypes.string.isRequired,\n        dialogOpener: PropTypes.func.isRequired,\n    };\n\n    async componentDidMount() {\n        if (this.props.data.length === 0) {\n            await this.props.downloadBoard(this.props.boardType);\n        }\n    }\n\n    render() {\n        const { data, dialogOpener } = this.props;\n\n        return (\n            <>\n                <Grid container>\n                    <Grid item xs={false} md={1} lg={3} />\n                    <Grid item xs={12} md={10} lg={6}>\n                        <Paper>\n                            {data.length === 0 && <LinearProgress />}\n                            <ScoresTable data={data} handleClickOpen={dialogOpener} />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nexport default withContext(ScoreboardView);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\n\nconst Theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: teal[300],\n            main: teal[500],\n            dark: teal[700],\n        },\n        secondary: {\n            light: '#fff',\n            main: '#fff',\n            dark: '#fff',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nexport default Theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { withStyles } from '@material-ui/core';\nimport AppBar from './components/appBar';\nimport ProfileDialog from './components/profileDialog';\nimport AboutView from './views/aboutView';\nimport RecordsView from './views/recordsView';\nimport ScoreboardView from './views/scoreboardView';\nimport { withContext } from './withContext';\nimport { withRoot } from './withRoot';\n\nconst styles = theme => ({\n    views: {\n        marginTop: theme.spacing.unit * 3,\n    },\n});\n\nclass App extends React.PureComponent {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        records: PropTypes.array.isRequired,\n        cacheProfile: PropTypes.func.isRequired,\n        clearProfile: PropTypes.func.isRequired,\n    };\n\n    state = {\n        currentTab: 0,\n    };\n\n    handleTabChange = (_, currentTab) => {\n        this.setState({ currentTab });\n    };\n\n    render() {\n        const {\n            classes,\n            boards: {\n                sp,\n                coop,\n                overall,\n            },\n            records,\n            stats,\n            currentProfile,\n            cacheProfile,\n            clearProfile,\n        } = this.props;\n\n        const { currentTab } = this.state;\n\n        return (\n            <>\n                <AppBar currentTab={currentTab} onTabChange={this.handleTabChange} />\n                {records.length !== 0\n                    ? <div className={classes.views}>\n                            {currentTab === 0 && <ScoreboardView data={sp} boardType=\"sp\" dialogOpener={cacheProfile} />}\n                            {currentTab === 1 && <ScoreboardView data={coop} boardType=\"coop\" dialogOpener={cacheProfile} />}\n                            {currentTab === 2 && <ScoreboardView data={overall} boardType=\"overall\" dialogOpener={cacheProfile} />}\n                            {currentTab === 3 && <RecordsView data={records} />}\n                            {currentTab === 4 && <AboutView data={stats} />}\n                        </div>\n                    : <LinearProgress />\n                }\n                {currentProfile &&\n                    <ProfileDialog\n                        dialogOpen={currentProfile !== null}\n                        handleClose={clearProfile}\n                        data={currentProfile}\n                    />\n                }\n            </>\n        );\n    }\n}\n\nexport default withRoot(withContext(withStyles(styles)(App)));\n","class Client {\n    constructor() {\n        this.baseApi = 'https://raw.githubusercontent.com/NeKzor/lp/api';\n    }\n    async get(route) {\n        console.log(`Fetching ${route}`);\n        return await fetch(this.baseApi + route + '.json');\n    }\n    async getProfiles() {\n        let res = await this.get('/profiles');\n        return await res.json();\n    }\n    async getRecords() {\n        let res = await this.get('/wrs');\n        return await res.json();\n    }\n    async getStats() {\n        let res = await this.get('/stats');\n        return await res.json();\n    }\n    async getBoard(board) {\n        if (board !== 'sp' && board !== 'coop' && board !== 'overall')\n            throw new Error('Invalid board!');\n        let res = await this.get(`/boards/${board}`);\n        return await res.json();\n    }\n    async getPlayer(id) {\n        let res = await this.get(`/players/${id}`);\n        return await res.json();\n    }\n}\n\nexport default Client;\n","import React from 'react';\nimport { AppContext } from './withContext';\nimport Client from './client.js';\n\nclass ContextProvider extends React.Component {\n    state = {\n        profiles: [],\n        records: [],\n        stats: [],\n        currentProfile: null,\n        boards: {\n            sp: [],\n            coop: [],\n            overall: [],\n        },\n        calcWrDelta: (entry) => Math.abs(this.state.findRecord(entry.id).wr - entry.score),\n        findRecord: (id) => this.state.records.find(r => r.id === id),\n        findProfile: (id) => this.state.profiles.find(p => p.id === id),\n        cacheProfile: (id) => this.cacheProfile(id),\n        clearProfile: () => this.setState({ currentProfile: null }),\n        downloadBoard: async (type) => await this.downloadBoard(type),\n    };\n\n    constructor() {\n        super();\n        this.api = new Client();\n        this.perfectScores = {\n            sp: 0,\n            coop: 0,\n            overall: 0,\n        };\n        this.playerCache = {};\n    }\n\n    async componentDidMount() {\n        // Boards depend on profiles (name, avatar) and on records (perfect score)\n        let profiles = await this.api.getProfiles();\n        let records = await this.api.getRecords();\n\n        // Records and About pages depend on stats (ties, number of cheaters, last update)\n        let stats = await this.api.getStats();\n\n        // Set ties to records page and calculate perfect score for each board\n        this.initRecords(stats.tied_records, records);\n\n        this.setState({ records, stats, profiles });\n    }\n\n    initRecords(ties, records) {\n        for (let record of records) {\n            record.ties = ties[record.id];\n            if (!record.excluded) {\n                if (record.mode === 1) {\n                    this.perfectScores.sp += record.wr;\n                } else if (record.mode === 2) {\n                    this.perfectScores.coop += record.wr;\n                }\n                this.perfectScores.overall += record.wr;\n            } else {\n                record.ties = 0;\n            }\n        }\n    }\n\n    async downloadBoard(type) {\n        let that = this;\n\n        let board = await this.api.getBoard(type);\n        for (let item of board) {\n            item.getProfile = function () {\n                if (this._profile === undefined) {\n                    this._profile = that.state.profiles.find(p => p.id === this.id);\n                }\n                return this._profile;\n            };\n            if (type === 'sp') {\n                item.getStats = function () {\n                    if (this._stats === undefined) {\n                        this._stats = {\n                            delta: that.perfectScores.sp - this.score,\n                            percentage: Math.round(that.perfectScores.sp / this.score * 100)\n                        };\n                    }\n                    return this._stats;\n                };\n            } else if (type === 'coop') {\n                item.getStats = function () {\n                    if (this._stats === undefined) {\n                        this._stats = {\n                            delta: that.perfectScores.coop - this.score,\n                            percentage: Math.round(that.perfectScores.coop / this.score * 100)\n                        };\n                    }\n                    return this._stats;\n                };\n            } else if (type === 'overall') {\n                item.getStats = function () {\n                    if (this._stats === undefined) {\n                        this._stats = {\n                            delta: that.perfectScores.overall - this.score,\n                            percentage: Math.round(that.perfectScores.overall / this.score * 100)\n                        };\n                    }\n                    return this._stats;\n                };\n            } else {\n                throw new Error('Invalid board type!');\n            }\n        }\n\n        this.setState((prevState) => ({\n            boards: {\n                ...prevState.boards,\n                [type]: board\n            }\n        }), () => console.log('Updated state:', this.state));\n    }\n\n    async cacheProfile(profileId) {\n        let currentProfile = this.playerCache[profileId];\n        if (currentProfile === undefined) {\n            let profile = this.state.findProfile(profileId);\n            currentProfile = {\n                id: profileId,\n                name: profile.profile_name,\n                avatar: profile.avatar_link,\n                sp: 0,\n                coop: 0,\n                overall: 0,\n                entries: []\n            };\n\n            this.setState({ currentProfile });\n\n            let player = await this.api.getPlayer(profileId);\n\n            let entries = [];\n            for (let entry of player.entries) {\n                entries.push({\n                    id: entry.id,\n                    name: this.state.findRecord(entry.id).name,\n                    score: entry.score,\n                    wrDelta: this.state.calcWrDelta(entry)\n                });\n            }\n\n            currentProfile = {\n                ...currentProfile,\n                sp: player.sp_score,\n                coop: player.coop_score,\n                overall: player.overall_score,\n                entries\n            };\n\n            this.setState({ currentProfile });\n\n            this.playerCache = {\n                ...this.playerCache,\n                [profileId]: currentProfile\n            };\n        } else {\n            console.log(`From cache: ${profileId}`);\n            this.setState({ currentProfile });\n        }\n    }\n\n    render() {\n        return (\n            <AppContext.Provider value={this.state}>\n                {this.props.children}\n            </AppContext.Provider>\n        );\n    }\n}\n\nexport default ContextProvider;\n","/* eslint-disable */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ',\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport ContextProvider from './contextProvider';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst app = (\n    <ContextProvider>\n        <App />\n    </ContextProvider>\n);\n\nReactDOM.render(app, document.querySelector('#root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}