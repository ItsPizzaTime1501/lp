{"version":3,"sources":["components/Tabs.js","components/AppBar.js","AppState.js","Hooks.js","views/AboutView.js","utils/stableSort.js","components/Showcase.js","components/RecordsTable.js","components/RecordChart.js","views/RecordsView.js","components/ProfileTable.js","components/RecordDeltaChart.js","components/ProfileDialog.js","components/ScoresTable.js","Api.js","views/ScoreboardView.js","views/NotFoundView.js","App.js","utils/registerServiceWorker.js","index.js"],"names":["SiteTabs","_ref","currentTab","react_default","a","createElement","Fragment","Tabs","value","variant","textColor","color","indicatorColor","Tab","label","component","Link","to","useStyles","makeStyles","theme","root","paddingBottom","spacing","list","width","menuButton","marginLeft","marginRight","pageLinks","text","link","gotoPage","page","window","open","AppBarWithDrawer","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setOpen","showDrawer","state","classes","className","List","ListItem","button","key","onClick","ListItemText","primary","Divider","map","item","index","concat","AppBar","position","Toolbar","IconButton","Menu_default","Typography","components_Tabs","SwipeableDrawer","onClose","onOpen","tabIndex","role","onKeyDown","inititalState","records","cheaters","darkMode","DarkMode","classCallCheck","this","enabled","localStorage","getItem","setItem","toString","AppReducer","action","data","console","log","expose","objectSpread","maps","toggle","Error","createContext","useIsMounted","ref","useRef","useEffect","current","help","cursor","aboutBox","padding","branches","repo","branch","noWrap","whiteSpace","MinTableCell","props","TableCell","assign","size","Padding","style","paddingTop","AboutView","isMounted","_React$useContext","useContext","AppState","_React$useContext$sta","dispatch","gitHub","setGitHub","anyErrors","err","error","undefined","Promise","all","fetch","then","results","res","json","sha","author","commit","message","date","catch","detectedCheaters","Tooltip","placement","title","disableFocusListener","disableTouchListener","length","Grid","container","xs","md","lg","Paper","AboutView_Padding","CircularProgress","progress","overflowX","Table","TableHead","TableRow","TableBody","idx","_branches$idx","AboutView_MinTableCell","align","rel","href","moment","from","html_url","login","name","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","stableSort","array","order","orderBy","desc","b","cmp","el","sort","card","margin","media","height","Showcase","id","avatar","Avatar","alt","player","src","Card","CardHeader","subheader","opener","enterDelay","CardMedia","image","split","rows","numeric","sortable","RecordsTableHead","onRequestSort","disablePadding","sortDirection","TableSortLabel","active","direction","property","event","helpLink","showcase","backgroundColor","palette","type","grey","RecordsTable","_ref2","rowsPerPage","setState","_React$useState3","_React$useState4","curRecord","setCurRecord","ExcludedMapsInfo","RecordsTable_RecordsTableHead","_","rowCount","record","hover","target","wr","excluded","ties","colSpan","border","Collapse","in","timeout","unmountOnExit","showcases","Hidden","smDown","components_Showcase","chartOptions","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","stroke","show","colors","yaxis","max","fill","opacity","tooltip","y","formatter","val","RecordChart","mode","sorted","filter","m","series","useTheme","options","xaxis","categories","labels","offsetY","fontSize","chart","background","common","white","react_apexcharts_min_default","searchBox","marginBottom","RecordsView","searchTerm","setSearchTerm","components_RecordChart","Input","placeholder","ev","disableUnderline","components_RecordsTable","x","toUpperCase","startsWith","parseInt","filterRecords","ProfileTableHead","ProfileTable","UnknownScoreInfo","ProfileTable_ProfileTableHead","score","delta","_id","RecordDeltaChart","Math","apply","toConsumableArray","tickAmount","stats","flex","paper","textAlign","Transition","forwardRef","Slide","ProfileStat","oldScore","percentage","gutterBottom","ProfileDialog","profile","handleClickClose","Dialog","fullScreen","TransitionComponent","Button","country","react_world_flags_default","code","top","Skeleton","Close_default","entries","ProfileDialog_ProfileStat","components_ProfileTable","components_RecordDeltaChart","LinearProgress","fa","add","faMedal","ScoresTableHead","playerCell","display","alignItems","clickLink","ScoresTable","handleClickOpen","ScoresTable_ScoresTableHead","rank","react_fontawesome_index_es","icon","scoreOld","src_Api","Api","baseApi","route","status","request","ok","board","ScoreboardView","boardType","profileId","setBoard","setProfile","_React$useState5","_React$useState6","dialogOpen","setDialogOpen","prepareProfile","_profile$entries","forEach","entry","find","abs","sc","player2","missing","push","getProfile","getBoard","components_ScoresTable","components_ProfileDialog","NotFoundView","views","marginTop","App","_React$useReducer","useReducer","_React$useReducer2","getRecords","useMemo","createMuiTheme","light","teal","main","dark","secondary","red","A400","typography","useNextVariants","context","tabs","ThemeProvider","CssBaseline","Provider","react_router_dom","basename","react_router","path","render","pathname","location","components_AppBar","findIndex","exact","views_ScoreboardView","params","match","Boolean","hostname","ReactDOM","src_App","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d275665.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nconst SiteTabs = ({ currentTab }) => {\n    return (\n        <>\n            <Tabs\n                value={currentTab !== -1 ? currentTab : 0}\n                variant=\"scrollable\"\n                textColor=\"inherit\"\n                color=\"inherit\"\n                indicatorColor=\"secondary\"\n            >\n                <Tab label=\"Single Player\" component={Link} to=\"/single-player\" />\n                <Tab label=\"Cooperative\" component={Link} to=\"/cooperative\" />\n                <Tab label=\"Overall\" component={Link} to=\"/overall\" />\n                <Tab label=\"Records\" component={Link} to=\"/records\" />\n                <Tab label=\"About\" component={Link} to=\"/about\" />\n            </Tabs>\n        </>\n    );\n};\n\nexport default SiteTabs;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SiteTabs from './Tabs';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: theme.spacing(14),\n    },\n    list: {\n        width: theme.spacing(25),\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n}));\n\nconst pageLinks = [\n    { text: 'Glitches', link: 'glitches.html' },\n    { text: 'Least Portals', link: 'lp' },\n    { text: 'Demo Parser', link: 'parser.html' },\n    { text: 'Cvars', link: 'cvars' },\n];\nconst homepage = 'https://nekzor.github.io/';\n\nconst gotoPage = (page) => () => {\n    window.open(homepage + page, '_self');\n};\n\nconst AppBarWithDrawer = ({ currentTab }) => {\n    const [open, setOpen] = React.useState(false);\n\n    const showDrawer = (state) => () => {\n        setOpen(state);\n    };\n\n    const classes = useStyles();\n\n    const list = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key={0} onClick={gotoPage('index.html')}>\n                    <ListItemText primary={'nekzor.github.io'} />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {pageLinks.map((item, index) => (\n                    <ListItem button key={index} onClick={gotoPage(`${item.link}`)}>\n                        <ListItemText primary={item.text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton onClick={showDrawer(true)} className={classes.menuButton} color=\"inherit\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        Least Portals\n                    </Typography>\n                </Toolbar>\n                <SiteTabs currentTab={currentTab} />\n            </AppBar>\n            <SwipeableDrawer open={open} onClose={showDrawer(false)} onOpen={showDrawer(true)}>\n                <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\n                    {list}\n                </div>\n            </SwipeableDrawer>\n        </div>\n    );\n};\n\nexport default AppBarWithDrawer;\n","import React from 'react';\n\nclass DarkMode {\n    constructor() {\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\n    }\n    toggle() {\n        this.enabled = !this.enabled;\n        localStorage.setItem('dark_mode', this.enabled.toString());\n        return this;\n    }\n}\n\nconst inititalState = {\n    records: [],\n    cheaters: [],\n    darkMode: new DarkMode(),\n};\n\nexport const AppReducer = [\n    (state, { action, data }) => {\n        console.log('[DISPATCH] ' + action);\n        switch (action) {\n            case 'setRecords':\n                window.expose = () => data.cheaters;\n                return {\n                    ...state,\n                    records: data.maps || [],\n                    cheaters: data.cheaters || [],\n                };\n            case 'toggleDarkMode':\n                return {\n                    ...state,\n                    darkMode: state.darkMode.toggle(),\n                };\n            default:\n                throw new Error('Unknown action type.');\n        }\n    },\n    inititalState,\n];\n\nexport default React.createContext(inititalState);\n","import React from 'react';\n\nexport const useIsMounted = () => {\n    const ref = React.useRef(false);\n    React.useEffect(() => {\n        ref.current = true;\n        return () => (ref.current = false);\n    }, []);\n    return ref;\n};\n\nexport const useRenders = (debug) => {\n    const ref = React.useRef(0);\n    console.log(debug + ' renders: ', ++ref.current);\n};\n\nexport const useTitle = (title) => {\n    React.useEffect(() => {\n        document.title = title + ' - ' + document.location.host;\n    }, [title]);\n};\n","import React from 'react';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    help: {\n        cursor: 'help',\n    },\n    aboutBox: {\n        padding: theme.spacing(3),\n    },\n}));\n\nconst branches = [\n    { repo: 'NeKzor/lp', branch: 'master' },\n    { repo: 'NeKzBot/lp', branch: 'api' },\n    { repo: 'NeKzor/lp', branch: 'gh-pages' },\n];\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />;\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\n\nconst AboutView = () => {\n    const isMounted = useIsMounted();\n\n    const {\n        state: { cheaters, darkMode },\n        dispatch,\n    } = React.useContext(AppState);\n\n    const [gitHub, setGitHub] = React.useState([]);\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        const anyErrors = (err) => {\n            console.error(err);\n            if (isMounted.current) {\n                setGitHub(undefined);\n            }\n        };\n\n        Promise.all(branches.map(({ repo, branch }) => fetch(`https://api.github.com/repos/${repo}/commits/${branch}`)))\n            .then((results) => {\n                Promise.all(results.map((res) => res.json()))\n                    .then((branches) => {\n                        if (isMounted.current) {\n                            setGitHub(\n                                branches.map((branch) => ({\n                                    sha: branch.sha,\n                                    author: branch.author ? branch.author : branch.commit.author,\n                                    message: branch.commit.message,\n                                    date: branch.commit.author.date,\n                                })),\n                            );\n                        }\n                    })\n                    .catch(anyErrors);\n            })\n            .catch(anyErrors);\n    }, [isMounted]);\n\n    const toggleDarkMode = () => {\n        dispatch({ action: 'toggleDarkMode' });\n    };\n\n    const detectedCheaters = (\n        <Tooltip\n            placement=\"right\"\n            title=\"Automatic ban system catches users who cheated at least once.\"\n            disableFocusListener\n            disableTouchListener\n        >\n            <Link className={classes.help}>{cheaters.length}</Link>\n        </Tooltip>\n    );\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={false} md={1} lg={3} />\n                <Grid item xs={12} md={10} lg={6}>\n                    <Paper className={classes.aboutBox}>\n                        <Typography component=\"h2\" variant=\"h3\">\n                            Who's the lp king?\n                        </Typography>\n                        <br />\n                        <Typography variant=\"body1\">\n                            This leaderboard includes all legit players who care about least portal records in Portal 2.\n                        </Typography>\n\n                        <Padding />\n\n                        <Typography component=\"h2\" variant=\"h5\">\n                            Ranking Requirements\n                        </Typography>\n                        <br />\n                        <Typography variant=\"body1\">- Be in top 5000 on every single player or cooperative leaderboard.</Typography>\n                        <Typography variant=\"body1\">- Tie as many records as possible or get at least very close to it.</Typography>\n                        <Typography variant=\"body1\">- Don't be one of the {detectedCheaters} cheaters.</Typography>\n\n                        <Padding />\n\n                        <Typography variant=\"h5\">Last Update</Typography>\n                        <br />\n                        {gitHub === undefined ? (\n                            <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\n                        ) : gitHub.length === 0 ? (\n                            <CircularProgress className={classes.progress} />\n                        ) : (\n                            <div style={{ overflowX: 'auto' }}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Branch</Typography>\n                                            </TableCell>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Date</Typography>\n                                            </TableCell>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Author</Typography>\n                                            </TableCell>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Commit</Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {gitHub.map((commit, idx) => {\n                                            const { repo, branch } = branches[idx];\n                                            return (\n                                                <TableRow tabIndex={-1} key={idx} style={noWrap}>\n                                                    <MinTableCell align=\"left\">\n                                                        <Link\n                                                            color=\"inherit\"\n                                                            rel=\"noopener\"\n                                                            href={`https://github.com/${repo}/tree/${branch}`}\n                                                        >\n                                                            {branch}\n                                                        </Link>\n                                                    </MinTableCell>\n                                                    <MinTableCell align=\"left\" style={noWrap}>\n                                                        <Tooltip title={moment(commit.date).toString()}>\n                                                            <span>{moment(commit.date).from()}</span>\n                                                        </Tooltip>\n                                                    </MinTableCell>\n                                                    <MinTableCell align=\"left\">\n                                                        {commit.author.html_url ? (\n                                                            <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\n                                                                {commit.author.login}\n                                                            </Link>\n                                                        ) : (\n                                                            commit.author.name || 'n/a'\n                                                        )}\n                                                    </MinTableCell>\n                                                    <MinTableCell align=\"left\" style={noWrap}>\n                                                        <Tooltip title={commit.message}>\n                                                            <Link\n                                                                color=\"inherit\"\n                                                                rel=\"noopener\"\n                                                                href={'https://github.com/NeKzor/lp/commit/' + commit.sha}\n                                                            >\n                                                                {commit.sha}\n                                                            </Link>\n                                                        </Tooltip>\n                                                    </MinTableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        )}\n\n                        <Padding />\n\n                        <Typography variant=\"h5\">Theme Settings</Typography>\n                        <br />\n                        <FormGroup row>\n                            <FormControlLabel\n                                control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\n                                label=\"Dark Mode\"\n                            />\n                        </FormGroup>\n\n                        <Padding />\n\n                        <Tooltip title=\"Source Code\">\n                            <Link rel=\"noopener\" href=\"https://github.com/NeKzor/lp\">\n                                github.com/NeKzor/lp\n                            </Link>\n                        </Tooltip>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default AboutView;\n","const stableSort = (array, order, orderBy) => {\n    let desc = (a, b) => {\n        if (b[orderBy] < a[orderBy]) return -1;\n        if (b[orderBy] > a[orderBy]) return 1;\n        return 0;\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\n\nexport default stableSort;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(2),\n    },\n    media: {\n        height: 190,\n    },\n}));\n\nconst watch = (id) => () => {\n    let tab = window.open(`https://youtu.be/${id}`, '_blank');\n    tab.opener = null;\n};\n\nconst Showcase = ({ data }) => {\n    const classes = useStyles();\n\n    const avatar = (\n        <Avatar alt={data.player.name} src={data.player.avatar}>\n            {!data.player.avatar ? data.player.name[0] : undefined}\n        </Avatar>\n    );\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader avatar={avatar} title={data.player.name} subheader={data.date} />\n            <Tooltip\n                title=\"Watch on YouTube\"\n                onClick={watch(data.media)}\n                style={{ cursor: 'pointer' }}\n                placement=\"top\"\n                enterDelay={1000}\n                disableFocusListener\n                disableTouchListener\n            >\n                <CardMedia className={classes.media} image={`https://i.ytimg.com/vi/${data.media.split('?')[0]}/sddefault.jpg`} />\n            </Tooltip>\n        </Card>\n    );\n};\n\nexport default Showcase;\n","import React from 'react';\nimport Collapse from '@material-ui/core/Collapse';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport stableSort from '../utils/stableSort';\nimport Showcase from './Showcase';\n\nconst rows = [\n    { id: 'index', numeric: false, sortable: true, label: 'Map' },\n    { id: 'wr', numeric: true, sortable: true, label: 'Portals' },\n    { id: 'ties', numeric: true, sortable: true, label: 'Ties' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map(\n                    (row) => (\n                        <TableCell\n                            key={row.id}\n                            align={row.numeric ? 'center' : 'left'}\n                            padding={row.disablePadding ? 'none' : 'default'}\n                            sortDirection={orderBy === row.id ? order : false}\n                        >\n                            {row.sortable === true && (\n                                <Tooltip title=\"Sort\" placement={row.numeric ? 'bottom-end' : 'bottom-start'} enterDelay={300}>\n                                    <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                        {row.label}\n                                    </TableSortLabel>\n                                </Tooltip>\n                            )}\n                            {row.sortable === false && row.label}\n                        </TableCell>\n                    ),\n                    this,\n                )}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        overflowX: 'auto',\n    },\n    helpLink: {\n        cursor: 'help',\n    },\n    showcase: {\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.grey['A400'] : theme.palette.grey['50'],\n        paddingBottom: 0,\n        paddingTop: 0,\n    },\n}));\n\nconst RecordsTable = ({ data }) => {\n    const [state, setState] = React.useState({\n        order: 'asc',\n        orderBy: 'index',\n        page: 0,\n        rowsPerPage: 100,\n    });\n    const [curRecord, setCurRecord] = React.useState(0);\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (state.orderBy === property && state.order === 'desc') {\n            order = 'asc';\n        }\n\n        setState({ order, orderBy });\n    };\n\n    const classes = useStyles();\n\n    const ExcludedMapsInfo = () => (\n        <Tooltip placement=\"right\" title=\"Disabled tracking records for this map.\" disableFocusListener disableTouchListener>\n            <Link className={classes.helpLink}>n/a</Link>\n        </Tooltip>\n    );\n\n    const handleRowClick = (id) => () => {\n        setCurRecord(curRecord !== id ? id : 0);\n    };\n\n    const { order, orderBy } = state;\n\n    return (\n        <div className={classes.root}>\n            <Table>\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.length} />\n                <TableBody>\n                    {stableSort(data, order, orderBy).map((record) => {\n                        return (\n                            <React.Fragment key={record.id}>\n                                <TableRow hover tabIndex={-1} onClick={handleRowClick(record.id)} style={{ cursor: 'pointer' }}>\n                                    <TableCell size=\"small\">\n                                        <Link\n                                            target=\"_blank\"\n                                            rel=\"noopener\"\n                                            color=\"inherit\"\n                                            href={`https://steamcommunity.com/stats/Portal2/leaderboards/${record.id}`}\n                                        >\n                                            {record.name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell size=\"small\" align=\"center\">\n                                        {record.wr}\n                                    </TableCell>\n                                    <TableCell size=\"small\" align=\"center\">\n                                        {record.excluded === true ? <ExcludedMapsInfo /> : record.ties}\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell\n                                        size=\"small\"\n                                        className={classes.showcase}\n                                        colSpan={3}\n                                        style={{ border: record.id !== curRecord ? 0 : undefined }}\n                                    >\n                                        <Collapse in={record.id === curRecord} timeout=\"auto\" unmountOnExit>\n                                            <Grid container>\n                                                {record.showcases.length === 1 && (\n                                                    <>\n                                                        <Hidden smDown>\n                                                            <Grid item md={2} lg={2} />\n                                                        </Hidden>\n                                                        <Grid item xs={12} md={8} lg={8}>\n                                                            <Showcase data={record.showcases[0]} />\n                                                        </Grid>\n                                                    </>\n                                                )}\n                                                {record.showcases.length > 1 &&\n                                                    record.showcases.map((showcase, idx) => (\n                                                        <Grid key={idx} item xs={12} md={6} lg={6}>\n                                                            <Showcase data={showcase} />\n                                                        </Grid>\n                                                    ))}\n                                            </Grid>\n                                        </Collapse>\n                                    </TableCell>\n                                </TableRow>\n                            </React.Fragment>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport ReactApexCharts from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\n\nconst chartOptions = {\n    plotOptions: {\n        bar: {\n            horizontal: false,\n            columnWidth: '100%',\n            endingShape: 'rounded',\n        },\n    },\n    dataLabels: {\n        enabled: false,\n    },\n    stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent'],\n    },\n    yaxis: {\n        title: {\n            text: 'Portals',\n        },\n        max: 12,\n    },\n    fill: {\n        opacity: 1,\n    },\n    tooltip: {\n        y: {\n            formatter: function(val) {\n                return val + ' portal' + (val === 1 ? '' : 's');\n            },\n        },\n    },\n};\n\nconst RecordChart = ({ data, mode, title, color }) => {\n    const sorted = data.filter((m) => m.mode === mode).sort((a, b) => a.index - b.index);\n\n    const series = [\n        {\n            name: 'World Record',\n            data: sorted.map((m) => m.wr),\n        },\n    ];\n\n    const theme = useTheme();\n\n    const options = {\n        ...chartOptions,\n        xaxis: {\n            categories: sorted.map((m) => m.name),\n            labels: {\n                show: false,\n            },\n        },\n        title: {\n            text: title,\n            align: 'center',\n            offsetY: 10,\n            style: {\n                fontSize: 24,\n            },\n        },\n        colors: [color],\n        chart: {\n            background: theme.palette.type === 'dark' ? theme.palette.grey['800'] : theme.palette.common.white,\n        },\n        theme: {\n            mode: theme.palette.type,\n        },\n    };\n\n    return <ReactApexCharts options={options} series={series} type=\"bar\" height=\"350\" />;\n};\n\nexport default RecordChart;\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordsTable from '../components/RecordsTable';\nimport RecordChart from '../components/RecordChart';\nimport AppState from '../AppState';\n\nconst useStyles = makeStyles((theme) => ({\n    searchBox: {\n        padding: 10,\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nconst RecordsView = () => {\n    const {\n        state: { records },\n    } = React.useContext(AppState);\n\n    const [searchTerm, setSearchTerm] = React.useState('');\n\n    const filterRecords = (records) => {\n        return records.filter((x) => {\n            return searchTerm.length === 0 || x.name.toUpperCase().startsWith(searchTerm.toUpperCase()) || x.wr === parseInt(searchTerm);\n        });\n    };\n\n    const handleInputChange = (ev) => {\n        setSearchTerm(ev.target.value);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={false} md={1} lg={3} />\n                <Grid item xs={12} md={10} lg={6}>\n                    <Paper style={{ paddingTop: '5px', marginBottom: '24px' }}>\n                        <RecordChart data={records} mode={1} title=\"Single Player\" color=\"#2E93fA\" />\n                    </Paper>\n                    <Paper style={{ paddingTop: '5px', marginBottom: '24px' }}>\n                        <RecordChart data={records} mode={2} title=\"Cooperative\" color=\"#FF9800\" />\n                    </Paper>\n                    <Paper className={classes.searchBox}>\n                        <FormGroup>\n                            <Input placeholder=\"Search\" onChange={handleInputChange} disableUnderline={true} />\n                        </FormGroup>\n                    </Paper>\n                    <Paper style={{ marginBottom: '50px' }}>\n                        <RecordsTable data={filterRecords(records)} />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default RecordsView;\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nconst rows = [\n    { id: 'index', numeric: false, sortable: true, label: 'Map' },\n    { id: 'score', numeric: true, sortable: true, label: 'Portals' },\n    { id: 'delta', numeric: true, sortable: true, label: 'ΔWR' },\n];\n\nconst ProfileTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map(\n                    (row) => (\n                        <TableCell\n                            key={row.id}\n                            align={row.numeric ? 'center' : 'center'}\n                            padding={row.disablePadding ? 'none' : 'default'}\n                            sortDirection={orderBy === row.id ? order : false}\n                        >\n                            {row.sortable === true && (\n                                <Tooltip title=\"Sort\" placement={row.numeric ? 'bottom-end' : 'bottom-start'} enterDelay={300}>\n                                    <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                        {row.label}\n                                    </TableSortLabel>\n                                </Tooltip>\n                            )}\n                            {row.sortable === false && row.label}\n                        </TableCell>\n                    ),\n                    this,\n                )}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst ProfileTable = ({ data }) => {\n    const [state, setState] = React.useState({\n        order: 'asc',\n        orderBy: 'index',\n    });\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (state.orderBy === property && state.order === 'desc') {\n            order = 'asc';\n        }\n\n        setState({ order, orderBy });\n    };\n\n    const classes = useStyles();\n    const { order, orderBy } = state;\n\n    const UnknownScoreInfo = () => (\n        <Tooltip placement=\"right\" title=\"Unknown score.\" disableFocusListener disableTouchListener>\n            <Link style={{ cursor: 'help' }}>n/a</Link>\n        </Tooltip>\n    );\n\n    return (\n        <div className={classes.root}>\n            <Table>\n                <ProfileTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.length} />\n                <TableBody>\n                    {stableSort(data, order, orderBy).map((record) => {\n                        let score =\n                            record.score !== undefined ? (\n                                record.showcase ? (\n                                    <Tooltip placement=\"right\" title=\"Watch on YouTube\" disableFocusListener disableTouchListener>\n                                        <Link target=\"_blank\" rel=\"noopener\" href={`https://youtu.be/${record.showcase.media}`}>\n                                            <b>{record.score}</b>\n                                        </Link>\n                                    </Tooltip>\n                                ) : (\n                                    record.score\n                                )\n                            ) : (\n                                <UnknownScoreInfo />\n                            );\n                        let delta = record.score !== undefined ? record.delta === 0 ? '' : `+${record.delta}` : <UnknownScoreInfo />;\n\n                        return (\n                            <TableRow hover tabIndex={-1} key={record._id}>\n                                <TableCell size=\"small\" align=\"center\">\n                                    <Link\n                                        target=\"_blank\"\n                                        rel=\"noopener\"\n                                        color=\"inherit\"\n                                        href={`https://steamcommunity.com/stats/Portal2/leaderboards/${record._id}`}\n                                    >\n                                        {record.name}\n                                    </Link>\n                                </TableCell>\n                                <TableCell size=\"small\" align=\"center\">\n                                    {score}\n                                </TableCell>\n                                <TableCell size=\"small\" align=\"center\">\n                                    {delta}\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default ProfileTable;\n","import React from 'react';\nimport ReactApexCharts from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\n\nconst chartOptions = {\n    plotOptions: {\n        bar: {\n            horizontal: false,\n            columnWidth: '100%',\n            endingShape: 'rounded',\n        },\n    },\n    dataLabels: {\n        enabled: false,\n    },\n    stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent'],\n    },\n    yaxis: {\n        title: {\n            text: 'Portals',\n        },\n    },\n    fill: {\n        opacity: 1,\n    },\n    tooltip: {\n        y: {\n            formatter: function(val) {\n                return val + ' portal' + (val === 1 ? '' : 's');\n            },\n        },\n    },\n};\n\nconst RecordDeltaChart = ({ data, mode, title, color }) => {\n    const sorted = data.filter((m) => m.mode === mode).sort((a, b) => a.index - b.index);\n    const max = Math.max(1, ...sorted.map((m) => m.score));\n\n    const series = [\n        {\n            name: 'WR Delta',\n            data: sorted.map((m) => m.delta),\n        },\n    ];\n\n    const theme = useTheme();\n\n    const options = {\n        ...chartOptions,\n        xaxis: {\n            categories: sorted.map((m) => m.name),\n            labels: {\n                show: false,\n            },\n        },\n        yaxis: {\n            ...chartOptions.yaxis,\n            max: max + (max % 2),\n            tickAmount: (max + (max % 2)) / 2,\n        },\n        title: {\n            text: title,\n            align: 'center',\n            offsetY: 10,\n            style: {\n                fontSize: 24,\n            },\n        },\n        colors: [color],\n        chart: {\n            background: theme.palette.type === 'dark' ? theme.palette.grey['800'] : theme.palette.common.white,\n        },\n        theme: {\n            mode: theme.palette.type,\n        },\n    };\n\n    return <ReactApexCharts options={options} series={series} type=\"bar\" height=\"350\" />;\n};\n\nexport default RecordDeltaChart;\n","import React from 'react';\nimport Flag from 'react-world-flags';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport ProfileTable from './ProfileTable';\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordDeltaChart from './RecordDeltaChart';\n\nconst useStyles = makeStyles((theme) => ({\n    stats: {\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        background: theme.palette.type === 'dark' ? theme.palette.grey['A400'] : theme.palette.grey['50'],\n    },\n    records: {\n        paddingTop: theme.spacing(3),\n        background: theme.palette.type === 'dark' ? theme.palette.grey['A400'] : theme.palette.grey['50'],\n    },\n    flex: {\n        flex: 1,\n    },\n    paper: {\n        padding: theme.spacing(5),\n        textAlign: 'center',\n    },\n}));\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Slide direction=\"up\" {...props} ref={ref} />;\n});\n\nconst gotoSteamProfile = (id) => {\n    let tab = window.open(`https://steamcommunity.com/profiles/${id}`, '_blank');\n    tab.opener = null;\n};\n\nconst ProfileStat = ({ title, type, data }) => {\n    const score = data[type];\n    const oldScore = data[type + 'Old'];\n    const delta = data.stats[type].delta;\n    const percentage = data.stats[type].percentage;\n    return (\n        <>\n            <Tooltip\n                placement=\"top\"\n                title={\n                    score === 0 ? (\n                        ''\n                    ) : (\n                        <div>\n                            {`${score - delta}+${delta}`}\n                            {score !== oldScore && (\n                                <>\n                                    <br />\n                                    {oldScore + ' 🠊 ' + score}\n                                </>\n                            )}\n                        </div>\n                    )\n                }\n                disableFocusListener\n                disableTouchListener\n            >\n                <Typography variant=\"h3\" gutterBottom>\n                    {percentage !== 0 ? percentage : 0}%\n                </Typography>\n            </Tooltip>\n            <Typography variant=\"subtitle1\" gutterBottom>\n                {title}\n            </Typography>\n        </>\n    );\n};\n\nconst ProfileDialog = ({ active, profile, handleClickClose }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Dialog fullScreen open={active} onClose={handleClickClose} TransitionComponent={Transition}>\n                <AppBar position=\"sticky\">\n                    <Toolbar>\n                        <Tooltip placement=\"bottom\" title=\"Open Steam profile\" disableFocusListener disableTouchListener>\n                            {profile ? (\n                                <>\n                                    <Button color=\"inherit\" onClick={() => gotoSteamProfile(profile._id)}>\n                                        <Avatar src={profile.avatar} />\n                                    </Button>\n                                    <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                                        &nbsp;&nbsp;&nbsp;{profile.name}\n                                        {profile.country && (\n                                            <>\n                                                &nbsp;&nbsp;&nbsp;\n                                                <Flag\n                                                    code={profile.country}\n                                                    style={{ position: 'relative', top: '2px' }}\n                                                    height=\"15\"\n                                                    alt={profile.country}\n                                                />\n                                            </>\n                                        )}\n                                    </Typography>\n                                </>\n                            ) : (\n                                <>\n                                    <Skeleton variant=\"circle\" width={40} height={40} />\n                                    <Skeleton style={{ marginLeft: '10px' }} variant=\"text\" width={200} />\n                                    <Typography className={classes.flex} />\n                                </>\n                            )}\n                        </Tooltip>\n                        <Tooltip placement=\"bottom\" title=\"Close profile\" disableFocusListener disableTouchListener>\n                            <IconButton color=\"inherit\" onClick={handleClickClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                </AppBar>\n                {profile ? (\n                    <>\n                        <Grid container className={classes.stats}>\n                            <Grid item xs={false} md={1} lg={3} />\n                            <Grid item xs={12} md={10} lg={6}>\n                                {profile.entries.length !== 0 && (\n                                    <Grid container spacing={10}>\n                                        <Grid item xs={12} md={4} lg={4}>\n                                            <Paper className={classes.paper}>\n                                                <ProfileStat title=\"Single Player\" type=\"sp\" data={profile} />\n                                            </Paper>\n                                        </Grid>\n                                        <Grid item xs={12} md={4} lg={4}>\n                                            <Paper className={classes.paper}>\n                                                <ProfileStat title=\"Cooperative\" type=\"mp\" data={profile} />\n                                            </Paper>\n                                        </Grid>\n                                        <Grid item xs={12} md={4} lg={4}>\n                                            <Paper className={classes.paper}>\n                                                <ProfileStat title=\"Overall\" type=\"overall\" data={profile} />\n                                            </Paper>\n                                        </Grid>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>\n                        <Grid container className={classes.records}>\n                            <Grid item xs={false} md={1} lg={3} />\n                            <Grid item xs={12} md={10} lg={6}>\n                                <Paper style={{ marginBottom: '50px' }}>\n                                    <ProfileTable data={profile.entries} />\n                                </Paper>\n                                <Paper style={{ paddingTop: '10px', marginBottom: '50px' }}>\n                                    <RecordDeltaChart data={profile.entries} mode={1} title=\"Single Player\" color=\"#2E93fA\" />\n                                </Paper>\n                                <Paper style={{ paddingTop: '10px', marginBottom: '50px' }}>\n                                    <RecordDeltaChart data={profile.entries} mode={2} title=\"Cooperative\" color=\"#FF9800\" />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </>\n                ) : profile === undefined ? (\n                    <LinearProgress />\n                ) : (\n                    <Grid style={{ height: '100%' }} container className={classes.records}>\n                        <Grid item xs={false} md={1} lg={2} />\n                        <Grid item xs={12} md={10} lg={9}>\n                            <Paper>\n                                <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }}>\n                                    Profile not found :(\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                )}\n            </Dialog>\n        </>\n    );\n};\n\nexport default ProfileDialog;\n","import React from 'react';\nimport Flag from 'react-world-flags';\nimport { library as fa } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMedal } from '@fortawesome/free-solid-svg-icons';\nimport Avatar from '@material-ui/core/Avatar';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nfa.add(faMedal);\n\nconst rows = [\n    { id: 'rank', numeric: true, sortable: false, label: 'Rank' },\n    { id: 'name', numeric: false, sortable: false, label: 'Player' },\n    { id: 'score', numeric: true, sortable: true, label: 'Portals' },\n];\n\nconst ScoresTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell key={row.id} align={row.numeric ? 'center' : 'left'} sortDirection={orderBy === row.id ? order : false}>\n                        {row.sortable === true && (\n                            <Tooltip title=\"Sort\" placement={row.numeric ? 'bottom-end' : 'bottom-start'} enterDelay={300}>\n                                <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        overflowX: 'auto',\n    },\n    playerCell: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    clickLink: {\n        cursor: 'pointer',\n    },\n}));\n\nconst ScoresTable = ({ data, handleClickOpen }) => {\n    const [state, setState] = React.useState({\n        order: 'asc',\n        orderBy: 'score',\n    });\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (state.orderBy === property && state.order === 'desc') {\n            order = 'asc';\n        }\n\n        setState({ order, orderBy });\n    };\n\n    const classes = useStyles();\n    const { order, orderBy } = state;\n\n    return (\n        <div className={classes.root}>\n            <Table>\n                <ScoresTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.length} />\n                <TableBody>\n                    {stableSort(data, order, orderBy).map((item) => {\n                        return (\n                            <TableRow hover tabIndex={-1} key={item._id}>\n                                <TableCell size=\"small\" align=\"center\">\n                                    {item.rank === 1 ? (\n                                        <FontAwesomeIcon title=\"Rank 1\" icon=\"medal\" color=\"#ffd700\" />\n                                    ) : item.rank === 2 ? (\n                                        <FontAwesomeIcon title=\"Rank 2\" icon=\"medal\" color=\"#C0C0C0\" />\n                                    ) : item.rank === 3 ? (\n                                        <FontAwesomeIcon title=\"Rank 3\" icon=\"medal\" color=\"#cd7f32\" />\n                                    ) : (\n                                        item.rank\n                                    )}\n                                </TableCell>\n                                <TableCell size=\"small\">\n                                    <div className={classes.playerCell}>\n                                        <Avatar src={item.avatar} />\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                        <Link className={classes.clickLink} onClick={handleClickOpen(item._id)} color=\"inherit\">\n                                            {item.name}\n                                        </Link>\n                                        {item.country && (\n                                            <>\n                                                &nbsp;&nbsp;&nbsp;\n                                                <Flag code={item.country} height=\"12\" alt={item.country} />\n                                            </>\n                                        )}\n                                    </div>\n                                </TableCell>\n                                <TableCell size=\"small\" align=\"center\">\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            <div>\n                                                {`${item.stats.percentage}% (${item.score - item.stats.delta}+${item.stats.delta})`}\n                                                {item.scoreOld !== item.score && (\n                                                    <>\n                                                        <br />\n                                                        {item.scoreOld + ' 🠊 ' + item.score}\n                                                    </>\n                                                )}\n                                            </div>\n                                        }\n                                        disableFocusListener\n                                        disableTouchListener\n                                    >\n                                        <div>{item.score}</div>\n                                    </Tooltip>\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default ScoresTable;\n","class Api {\n    constructor() {\n        this.baseApi =\n            process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : 'https://raw.githubusercontent.com/NeKzBot/lp/api';\n    }\n    async request(route) {\n        let res = await fetch(route);\n        console.log(`[GET] ${route} (${res.status})`);\n        return res;\n    }\n    async getRecords() {\n        let res = await this.request(`${this.baseApi}/records.json`);\n        return res.ok ? (await res.json()).data : {};\n    }\n    async getBoard(board) {\n        if (board !== 'sp' && board !== 'mp' && board !== 'overall') throw new Error('Invalid board!');\n\n        let res = await this.request(`${this.baseApi}/${board}.json`);\n        return res.ok ? (await res.json()).data : {};\n    }\n    async getProfile(id) {\n        let res = await this.request(`${this.baseApi}/profile/${id}.json`);\n        return res.ok ? (await res.json()).data : null;\n    }\n}\n\nexport default new Api();\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport ProfileDialog from '../components/ProfileDialog';\nimport ScoresTable from '../components/ScoresTable';\nimport Api from '../Api';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst ScoreboardView = ({ boardType, profileId }) => {\n    const isMounted = useIsMounted();\n\n    const [board, setBoard] = React.useState([]);\n    const [profile, setProfile] = React.useState(undefined);\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n\n    const {\n        state: { records },\n    } = React.useContext(AppState);\n\n    const prepareProfile = (profile) => {\n        if (profile) {\n            profile.entries.forEach((entry) => {\n                let map = records.find((record) => record.id === entry._id);\n                entry.name = map.name;\n                entry.index = map.index;\n                entry.delta = Math.abs(map.wr - entry.score);\n                entry.showcase = map.showcases.find((sc) => sc.player.id === profile._id || (sc.player2 && sc.player2.id === profile._id));\n            });\n\n            let missing = [];\n            records.forEach((record) => {\n                let entry = profile.entries.find((entry) => entry._id === record.id);\n                if (!entry) {\n                    missing.push({\n                        _id: record.id,\n                        name: record.name,\n                        index: record.index,\n                    });\n                }\n            });\n\n            profile.entries.push(...missing);\n        }\n        return profile;\n    };\n\n    React.useEffect(() => {\n        if (profile === undefined && profileId) {\n            setDialogOpen(true);\n\n            Api.getProfile(profileId)\n                .then((profile) => isMounted.current && setProfile(prepareProfile(profile)))\n                .catch((err) => console.error(err));\n        } else if (board.length === 0) {\n            Api.getBoard(boardType)\n                .then((board) => isMounted.current && setBoard(board))\n                .catch((err) => console.error(err));\n        }\n    }, []);\n\n    const handleProfileOpen = (id) => () => {\n        setDialogOpen(true);\n\n        Api.getProfile(id)\n            .then((profile) => isMounted.current && setProfile(prepareProfile(profile)))\n            .catch((err) => console.error(err));\n    };\n\n    const handleProfileClose = () => {\n        setDialogOpen(false);\n\n        if (board.length === 0) {\n            Api.getBoard(boardType)\n                .then((board) => isMounted.current && setBoard(board))\n                .catch((err) => console.error(err));\n        }\n    };\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={false} md={1} lg={3} />\n                <Grid item xs={12} md={10} lg={6}>\n                    <Paper style={{ marginBottom: '50px' }}>\n                        {board.length === 0 && <LinearProgress />}\n                        <ScoresTable data={board} handleClickOpen={handleProfileOpen} />\n                    </Paper>\n                </Grid>\n            </Grid>\n            <ProfileDialog active={dialogOpen} profile={profile} handleClickClose={handleProfileClose} />\n        </>\n    );\n};\n\nexport default ScoreboardView;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst NotFoundView = () => {\n    return (\n        <Grid container>\n            <Grid item xs={false} md={1} lg={2} />\n            <Grid item xs={12} md={10} lg={9}>\n                <Paper>\n                    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }}>\n                        Page not found :(\n                    </Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\nimport teal from '@material-ui/core/colors/teal';\nimport AppBar from './components/AppBar';\nimport AboutView from './views/AboutView';\nimport RecordsView from './views/RecordsView';\nimport ScoreboardView from './views/ScoreboardView';\nimport Api from './Api';\nimport AppState, { AppReducer } from './AppState';\nimport NotFoundView from './views/NotFoundView';\n\nconst useStyles = makeStyles((theme) => ({\n    views: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(...AppReducer);\n\n    React.useEffect(() => {\n        Api.getRecords()\n            .then((data) => dispatch({ action: 'setRecords', data }))\n            .catch((err) => console.error(err));\n    }, []);\n\n    const theme = React.useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                primary: {\n                    light: teal[300],\n                    main: teal[500],\n                    dark: teal[700],\n                },\n                secondary: {\n                    light: '#fff',\n                    main: '#fff',\n                    dark: '#fff',\n                },\n                error: {\n                    main: red.A400,\n                },\n                type: state.darkMode.enabled ? 'dark' : 'light',\n            },\n            typography: {\n                useNextVariants: true,\n            },\n        });\n    }, [state.darkMode.enabled]);\n\n    const classes = useStyles();\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n    const tabs = ['/single-player', '/cooperative', '/overall', '/records', '/about'];\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppState.Provider value={context}>\n                <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/lp' : '/'}>\n                    <Route\n                        path=\"/\"\n                        render={({ location: { pathname } }) => (\n                            <>\n                                <AppBar currentTab={tabs.findIndex((x) => x === pathname)} />\n                                {state.records.length !== 0 ? (\n                                    <div className={classes.views}>\n                                        <Switch>\n                                            <Redirect exact from=\"/\"     to=\"/single-player\" />\n                                            <Redirect exact from=\"/sp\"   to=\"/single-player\" />\n                                            <Redirect exact from=\"/mp\"   to=\"/cooperative\" />\n                                            <Redirect exact from=\"/coop\" to=\"/cooperative\" />\n                                            <Redirect exact from=\"/ov\"   to=\"/overall\" />\n                                            <Redirect exact from=\"/wrs\"  to=\"/records\" />\n                                            <Route exact path=\"/single-player\" component={() => <ScoreboardView boardType=\"sp\" />} />\n                                            <Route exact path=\"/cooperative\"   component={() => <ScoreboardView boardType=\"mp\" />} />\n                                            <Route exact path=\"/overall\"       component={() => <ScoreboardView boardType=\"overall\" />} />\n                                            <Route exact path=\"/records\"       component={RecordsView} />\n                                            <Route exact path=\"/about\"         component={AboutView} />\n                                            <Route\n                                                exact\n                                                from=\"/@/:id\"\n                                                component={({ match: { params } }) => (\n                                                    <ScoreboardView boardType=\"sp\" profileId={params.id} />\n                                                )}\n                                            />\n                                            <Route component={NotFoundView} />\n                                        </Switch>\n                                    </div>\n                                ) : (\n                                    <LinearProgress />\n                                )}\n                            </>\n                        )}\n                    />\n                </BrowserRouter>\n            </AppState.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/registerServiceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}