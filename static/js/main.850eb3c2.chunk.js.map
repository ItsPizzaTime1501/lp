{"version":3,"sources":["components/Tabs.js","components/AppBar.js","AppState.js","Hooks.js","views/AboutView.js","utils/stableSort.js","components/Showcase.js","components/RecordsTable.js","components/RecordChart.js","views/RecordsView.js","components/ScoresTable.js","Api.js","components/ProfileTable.js","components/RecordDeltaChart.js","components/ProfileDialog.js","views/ScoreboardView.js","views/NotFoundView.js","App.js","utils/registerServiceWorker.js","index.js"],"names":["SiteTabs","_ref","currentTab","handleTabChange","react_default","a","createElement","Fragment","Tabs","value","onChange","variant","textColor","color","indicatorColor","Tab","label","component","Link","to","useStyles","makeStyles","theme","root","paddingBottom","spacing","list","width","menuButton","marginLeft","marginRight","pageLinks","text","link","gotoPage","page","window","open","AppBarWithDrawer","onTabChange","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setOpen","showDrawer","state","classes","className","List","ListItem","button","key","onClick","ListItemText","primary","Divider","map","item","index","concat","AppBar","position","Toolbar","IconButton","Menu_default","Typography","components_Tabs","SwipeableDrawer","onClose","onOpen","tabIndex","role","onKeyDown","inititalState","records","cheaters","darkMode","DarkMode","classCallCheck","this","enabled","localStorage","getItem","setItem","toString","AppReducer","action","data","console","log","objectSpread","maps","toggle","Error","createContext","useIsMounted","ref","useRef","useEffect","current","help","cursor","aboutBox","padding","branches","noWrap","whiteSpace","MinTableCell","props","TableCell","assign","size","Padding","style","paddingTop","AboutView","isMounted","_React$useContext","useContext","AppState","_React$useContext$sta","dispatch","gitHub","setGitHub","anyErrors","err","error","undefined","Promise","all","branch","fetch","then","results","res","json","sha","author","message","commit","date","catch","detectedCheaters","Tooltip","placement","title","disableFocusListener","disableTouchListener","length","Grid","container","xs","md","lg","Paper","AboutView_Padding","CircularProgress","progress","overflowX","Table","TableHead","TableRow","TableBody","idx","AboutView_MinTableCell","align","rel","href","moment","from","html_url","login","FormGroup","row","FormControlLabel","control","Switch","checked","stableSort","array","order","orderBy","desc","b","cmp","el","sort","card","margin","media","height","Showcase","id","avatar","Avatar","alt","player","name","src","Card","CardHeader","subheader","opener","enterDelay","CardMedia","image","split","rows","numeric","sortable","RecordsTableHead","onRequestSort","disablePadding","sortDirection","TableSortLabel","active","direction","property","event","helpLink","showcase","backgroundColor","palette","type","grey","RecordsTable","_ref2","rowsPerPage","setState","_React$useState3","_React$useState4","curRecord","setCurRecord","ExcludedMapsInfo","RecordsTable_RecordsTableHead","_","rowCount","record","hover","target","wr","excluded","ties","colSpan","border","Collapse","in","timeout","unmountOnExit","showcases","Hidden","smDown","components_Showcase","chartOptions","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","stroke","show","colors","yaxis","max","fill","opacity","tooltip","y","formatter","val","RecordChart","mode","sorted","filter","m","series","useTheme","options","xaxis","categories","labels","offsetY","fontSize","chart","background","common","white","react_apexcharts_min_default","searchBox","marginBottom","RecordsView","searchTerm","setSearchTerm","components_RecordChart","Input","placeholder","ev","disableUnderline","components_RecordsTable","x","toUpperCase","startsWith","parseInt","filterRecords","fa","add","faMedal","ScoresTableHead","playerCell","display","alignItems","clickLink","ScoresTable","handleClickOpen","ScoresTable_ScoresTableHead","_id","rank","react_fontawesome_index_es","icon","country","react_world_flags_default","code","stats","percentage","score","delta","src_Api","Api","baseApi","route","status","request","ok","board","ProfileTableHead","ProfileTable","UnknownScoreInfo","ProfileTable_ProfileTableHead","RecordDeltaChart","Math","apply","toConsumableArray","tickAmount","flex","paper","textAlign","Transition","forwardRef","Slide","ProfileStat","gutterBottom","ProfileDialog","profile","handleClickClose","Dialog","fullScreen","TransitionComponent","Button","top","Skeleton","Close_default","entries","ProfileDialog_ProfileStat","sp","mp","overall","components_ProfileTable","components_RecordDeltaChart","LinearProgress","ScoreboardView","boardType","profileId","setBoard","setProfile","_React$useState5","_React$useState6","dialogOpen","setDialogOpen","prepareProfile","forEach","e","find","r","abs","sc","getProfile","getBoard","components_ScoresTable","components_ProfileDialog","NotFoundView","views","marginTop","App","_React$useReducer","useReducer","_React$useReducer2","getRecords","useMemo","createMuiTheme","light","teal","main","dark","secondary","red","A400","typography","useNextVariants","context","tabs","ThemeProvider","CssBaseline","Provider","react_router_dom","basename","react_router","path","render","pathname","location","components_AppBar","findIndex","exact","views_ScoreboardView","params","match","Boolean","hostname","ReactDOM","src_App","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.850eb3c2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nconst SiteTabs = ({ currentTab, handleTabChange }) => {\n    return (\n        <>\n            <Tabs\n                value={currentTab !== -1 ? currentTab : 0}\n                onChange={handleTabChange}\n                variant=\"scrollable\"\n                textColor=\"inherit\"\n                color=\"inherit\"\n                indicatorColor=\"secondary\"\n            >\n                <Tab label=\"Single Player\" component={Link} to=\"/single-player\" />\n                <Tab label=\"Cooperative\" component={Link} to=\"/cooperative\" />\n                <Tab label=\"Overall\" component={Link} to=\"/overall\" />\n                <Tab label=\"Records\" component={Link} to=\"/records\" />\n                <Tab label=\"About\" component={Link} to=\"/about\" />\n            </Tabs>\n        </>\n    );\n};\n\nexport default SiteTabs;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SiteTabs from './Tabs';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: theme.spacing(14),\n    },\n    list: {\n        width: theme.spacing(25),\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n}));\n\nconst pageLinks = [\n    { text: 'Glitches', link: 'glitches.html' },\n    { text: 'Least Portals', link: 'lp' },\n    { text: 'Demo Parser', link: 'parser.html' },\n    { text: 'Cvars', link: 'cvars' },\n];\nconst homepage = 'https://nekzor.github.io/';\n\nconst gotoPage = (page) => () => {\n    window.open(homepage + page, '_self');\n};\n\nconst AppBarWithDrawer = ({ currentTab, onTabChange }) => {\n    const [open, setOpen] = React.useState(false);\n\n    const showDrawer = (state) => () => {\n        setOpen(state);\n    };\n\n    const classes = useStyles();\n\n    const list = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key={0} onClick={gotoPage('index.html')}>\n                    <ListItemText primary={'nekzor.github.io'} />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {pageLinks.map((item, index) => (\n                    <ListItem button key={index} onClick={gotoPage(`${item.link}`)}>\n                        <ListItemText primary={item.text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton onClick={showDrawer(true)} className={classes.menuButton} color=\"inherit\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        Least Portals\n                    </Typography>\n                </Toolbar>\n                <SiteTabs currentTab={currentTab} handleTabChange={onTabChange} />\n            </AppBar>\n            <SwipeableDrawer open={open} onClose={showDrawer(false)} onOpen={showDrawer(true)}>\n                <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\n                    {list}\n                </div>\n            </SwipeableDrawer>\n        </div>\n    );\n};\n\nexport default AppBarWithDrawer;\n","import React from 'react';\n\nclass DarkMode {\n    constructor() {\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\n    }\n    toggle() {\n        this.enabled = !this.enabled;\n        localStorage.setItem('dark_mode', this.enabled.toString());\n        return this;\n    }\n}\n\nconst inititalState = {\n    records: [],\n    cheaters: [],\n    darkMode: new DarkMode(),\n};\n\nexport const AppReducer = [\n    (state, { action, data }) => {\n        console.log('[DISPATCH] ' + action);\n        switch (action) {\n            case 'setRecords':\n                return {\n                    ...state,\n                    records: data.maps || [],\n                    cheaters: data.cheaters || [],\n                };\n            case 'toggleDarkMode':\n                return {\n                    ...state,\n                    darkMode: state.darkMode.toggle(),\n                };\n            default:\n                throw new Error('Unknown action type.');\n        }\n    },\n    inititalState,\n];\n\nexport default React.createContext(inititalState);\n","import React from 'react';\n\nexport const useIsMounted = () => {\n    const ref = React.useRef(false);\n    React.useEffect(() => {\n        ref.current = true;\n        return () => (ref.current = false);\n    }, []);\n    return ref;\n};\n\nexport const useRenders = (debug) => {\n    const ref = React.useRef(0);\n    console.log(debug + ' renders: ', ++ref.current);\n};\n\nexport const useTitle = (title) => {\n    React.useEffect(() => {\n        document.title = title + ' - ' + document.location.host;\n    }, [title]);\n};\n","import React from 'react';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    help: {\n        cursor: 'help',\n    },\n    aboutBox: {\n        padding: theme.spacing(3),\n    },\n}));\n\nconst branches = ['master', 'api', 'gh-pages'];\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />;\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\n\nconst AboutView = () => {\n    const isMounted = useIsMounted();\n\n    const {\n        state: { cheaters, darkMode },\n        dispatch,\n    } = React.useContext(AppState);\n\n    const [gitHub, setGitHub] = React.useState([]);\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        const anyErrors = (err) => {\n            console.error(err);\n            if (isMounted.current) {\n                setGitHub(undefined);\n            }\n        };\n\n        Promise.all(branches.map((branch) => fetch('https://api.github.com/repos/NeKzor/lp/commits/' + branch)))\n            .then((results) => {\n                Promise.all(results.map((res) => res.json()))\n                    .then((branches) => {\n                        if (isMounted.current) {\n                            setGitHub(\n                                branches.map((branch) => ({\n                                    sha: branch.sha,\n                                    author: branch.author,\n                                    message: branch.commit.message,\n                                    date: branch.commit.author.date,\n                                })),\n                            );\n                        }\n                    })\n                    .catch(anyErrors);\n            })\n            .catch(anyErrors);\n    }, [isMounted]);\n\n    const toggleDarkMode = () => {\n        dispatch({ action: 'toggleDarkMode' });\n    };\n\n    const detectedCheaters = (\n        <Tooltip\n            placement=\"right\"\n            title=\"Automatic ban system catches users who cheated at least once.\"\n            disableFocusListener\n            disableTouchListener\n        >\n            <Link className={classes.help}>{cheaters.length}</Link>\n        </Tooltip>\n    );\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={false} md={1} lg={3} />\n                <Grid item xs={12} md={10} lg={6}>\n                    <Paper className={classes.aboutBox}>\n                        <Typography component=\"h2\" variant=\"h3\">\n                            Who's the lp king?\n                        </Typography>\n                        <br />\n                        <Typography variant=\"body1\">\n                            This leaderboard includes all legit players who care about least portal records in Portal 2.\n                        </Typography>\n\n                        <Padding />\n\n                        <Typography component=\"h2\" variant=\"h5\">\n                            Ranking Requirements\n                        </Typography>\n                        <br />\n                        <Typography variant=\"body1\">- Be in top 5000 on every single player or cooperative leaderboard.</Typography>\n                        <Typography variant=\"body1\">- Tie as many records as possible or get at least very close to it.</Typography>\n                        <Typography variant=\"body1\">- Don't be one of the {detectedCheaters} cheaters.</Typography>\n\n                        <Padding />\n\n                        <Typography variant=\"h5\">Last Update</Typography>\n                        <br />\n                        {gitHub === undefined ? (\n                            <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\n                        ) : gitHub.length === 0 ? (\n                            <CircularProgress className={classes.progress} />\n                        ) : (\n                            <div style={{ overflowX: 'auto' }}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Branch</Typography>\n                                            </TableCell>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Date</Typography>\n                                            </TableCell>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Author</Typography>\n                                            </TableCell>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Commit</Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {gitHub.map((commit, idx) => {\n                                            const branch = branches[idx];\n                                            return (\n                                                <TableRow tabIndex={-1} key={idx} style={noWrap}>\n                                                    <MinTableCell align=\"left\">\n                                                        <Link\n                                                            color=\"inherit\"\n                                                            rel=\"noopener\"\n                                                            href={'https://github.com/NeKzor/lp/tree/' + branch}\n                                                        >\n                                                            {branch}\n                                                        </Link>\n                                                    </MinTableCell>\n                                                    <MinTableCell align=\"left\" style={noWrap}>\n                                                        <Tooltip title={moment(commit.date).toString()}>\n                                                            <span>{moment(commit.date).from()}</span>\n                                                        </Tooltip>\n                                                    </MinTableCell>\n                                                    <MinTableCell align=\"left\">\n                                                        {commit.author ? (\n                                                            <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\n                                                                {commit.author.login}\n                                                            </Link>\n                                                        ) : (\n                                                            'n/a'\n                                                        )}\n                                                    </MinTableCell>\n                                                    <MinTableCell align=\"left\" style={noWrap}>\n                                                        <Tooltip title={commit.message}>\n                                                            <Link\n                                                                color=\"inherit\"\n                                                                rel=\"noopener\"\n                                                                href={'https://github.com/NeKzor/lp/commit/' + commit.sha}\n                                                            >\n                                                                {commit.sha}\n                                                            </Link>\n                                                        </Tooltip>\n                                                    </MinTableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        )}\n\n                        <Padding />\n\n                        <Typography variant=\"h5\">Theme Settings</Typography>\n                        <br />\n                        <FormGroup row>\n                            <FormControlLabel\n                                control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\n                                label=\"Dark Mode\"\n                            />\n                        </FormGroup>\n\n                        <Padding />\n\n                        <Tooltip title=\"Source Code\">\n                            <Link rel=\"noopener\" href=\"https://github.com/NeKzor/lp\">\n                                github.com/NeKzor/lp\n                            </Link>\n                        </Tooltip>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default AboutView;\n","const stableSort = (array, order, orderBy) => {\n    let desc = (a, b) => {\n        if (b[orderBy] < a[orderBy]) return -1;\n        if (b[orderBy] > a[orderBy]) return 1;\n        return 0;\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\n\nexport default stableSort;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(2),\n    },\n    media: {\n        height: 190,\n    },\n}));\n\nconst watch = (id) => () => {\n    let tab = window.open(`https://youtu.be/${id}`, '_blank');\n    tab.opener = null;\n};\n\nconst Showcase = ({ data }) => {\n    const classes = useStyles();\n\n    const avatar = (\n        <Avatar alt={data.player.name} src={data.player.avatar}>\n            {!data.player.avatar ? data.player.name[0] : undefined}\n        </Avatar>\n    );\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader avatar={avatar} title={data.player.name} subheader={data.date} />\n            <Tooltip\n                title=\"Watch on YouTube\"\n                onClick={watch(data.media)}\n                style={{ cursor: 'pointer' }}\n                placement=\"top\"\n                enterDelay={1000}\n                disableFocusListener\n                disableTouchListener\n            >\n                <CardMedia className={classes.media} image={`https://i.ytimg.com/vi/${data.media.split('?')[0]}/sddefault.jpg`} />\n            </Tooltip>\n        </Card>\n    );\n};\n\nexport default Showcase;\n","import React from 'react';\nimport Collapse from '@material-ui/core/Collapse';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport stableSort from '../utils/stableSort';\nimport Showcase from './Showcase';\n\nconst rows = [\n    { id: 'index', numeric: false, sortable: true, label: 'Map' },\n    { id: 'wr', numeric: true, sortable: true, label: 'Portals' },\n    { id: 'ties', numeric: true, sortable: true, label: 'Ties' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map(\n                    (row) => (\n                        <TableCell\n                            key={row.id}\n                            align={row.numeric ? 'center' : 'left'}\n                            padding={row.disablePadding ? 'none' : 'default'}\n                            sortDirection={orderBy === row.id ? order : false}\n                        >\n                            {row.sortable === true && (\n                                <Tooltip title=\"Sort\" placement={row.numeric ? 'bottom-end' : 'bottom-start'} enterDelay={300}>\n                                    <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                        {row.label}\n                                    </TableSortLabel>\n                                </Tooltip>\n                            )}\n                            {row.sortable === false && row.label}\n                        </TableCell>\n                    ),\n                    this,\n                )}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        overflowX: 'auto',\n    },\n    helpLink: {\n        cursor: 'help',\n    },\n    showcase: {\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.grey['A400'] : theme.palette.grey['50'],\n        paddingBottom: 0,\n        paddingTop: 0,\n    },\n}));\n\nconst RecordsTable = ({ data }) => {\n    const [state, setState] = React.useState({\n        order: 'asc',\n        orderBy: 'index',\n        page: 0,\n        rowsPerPage: 100,\n    });\n    const [curRecord, setCurRecord] = React.useState(0);\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (state.orderBy === property && state.order === 'desc') {\n            order = 'asc';\n        }\n\n        setState({ order, orderBy });\n    };\n\n    const classes = useStyles();\n\n    const ExcludedMapsInfo = () => (\n        <Tooltip placement=\"right\" title=\"Disabled tracking records for this map.\" disableFocusListener disableTouchListener>\n            <Link className={classes.helpLink}>n/a</Link>\n        </Tooltip>\n    );\n\n    const handleRowClick = (id) => () => {\n        setCurRecord(curRecord !== id ? id : 0);\n    };\n\n    const { order, orderBy } = state;\n\n    return (\n        <div className={classes.root}>\n            <Table>\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.length} />\n                <TableBody>\n                    {stableSort(data, order, orderBy).map((record) => {\n                        return (\n                            <React.Fragment key={record.id}>\n                                <TableRow hover tabIndex={-1} onClick={handleRowClick(record.id)} style={{ cursor: 'pointer' }}>\n                                    <TableCell size=\"small\">\n                                        <Link\n                                            target=\"_blank\"\n                                            rel=\"noopener\"\n                                            color=\"inherit\"\n                                            href={`https://steamcommunity.com/stats/Portal2/leaderboards/${record.id}`}\n                                        >\n                                            {record.name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell size=\"small\" align=\"center\">\n                                        {record.wr}\n                                    </TableCell>\n                                    <TableCell size=\"small\" align=\"center\">\n                                        {record.excluded === true ? <ExcludedMapsInfo /> : record.ties}\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell\n                                        size=\"small\"\n                                        className={classes.showcase}\n                                        colSpan={3}\n                                        style={{ border: record.id !== curRecord ? 0 : undefined }}\n                                    >\n                                        <Collapse in={record.id === curRecord} timeout=\"auto\" unmountOnExit>\n                                            <Grid container>\n                                                {record.showcases.length === 1 && (\n                                                    <>\n                                                        <Hidden smDown>\n                                                            <Grid item md={2} lg={2} />\n                                                        </Hidden>\n                                                        <Grid item xs={12} md={8} lg={8}>\n                                                            <Showcase data={record.showcases[0]} />\n                                                        </Grid>\n                                                    </>\n                                                )}\n                                                {record.showcases.length > 1 &&\n                                                    record.showcases.map((showcase, idx) => (\n                                                        <Grid key={idx} item xs={12} md={6} lg={6}>\n                                                            <Showcase data={showcase} />\n                                                        </Grid>\n                                                    ))}\n                                            </Grid>\n                                        </Collapse>\n                                    </TableCell>\n                                </TableRow>\n                            </React.Fragment>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport ReactApexCharts from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\n\nconst chartOptions = {\n    plotOptions: {\n        bar: {\n            horizontal: false,\n            columnWidth: '100%',\n            endingShape: 'rounded',\n        },\n    },\n    dataLabels: {\n        enabled: false,\n    },\n    stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent'],\n    },\n    yaxis: {\n        title: {\n            text: 'Portals',\n        },\n        max: 12,\n    },\n    fill: {\n        opacity: 1,\n    },\n    tooltip: {\n        y: {\n            formatter: function(val) {\n                return val + ' portal' + (val === 1 ? '' : 's');\n            },\n        },\n    },\n};\n\nconst RecordChart = ({ data, mode, title, color }) => {\n    const sorted = data.filter((m) => m.mode === mode).sort((a, b) => a.index - b.index);\n\n    const series = [\n        {\n            name: 'World Record',\n            data: sorted.map((m) => m.wr),\n        },\n    ];\n\n    const theme = useTheme();\n\n    const options = {\n        ...chartOptions,\n        xaxis: {\n            categories: sorted.map((m) => m.name),\n            labels: {\n                show: false,\n            },\n        },\n        title: {\n            text: title,\n            align: 'center',\n            offsetY: 10,\n            style: {\n                fontSize: 24,\n            },\n        },\n        colors: [color],\n        chart: {\n            background: theme.palette.type === 'dark' ? theme.palette.grey['800'] : theme.palette.common.white,\n        },\n        theme: {\n            mode: theme.palette.type,\n        },\n    };\n\n    return <ReactApexCharts options={options} series={series} type=\"bar\" height=\"350\" />;\n};\n\nexport default RecordChart;\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordsTable from '../components/RecordsTable';\nimport RecordChart from '../components/RecordChart';\nimport AppState from '../AppState';\n\nconst useStyles = makeStyles((theme) => ({\n    searchBox: {\n        padding: 10,\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nconst RecordsView = () => {\n    const {\n        state: { records },\n    } = React.useContext(AppState);\n\n    const [searchTerm, setSearchTerm] = React.useState('');\n\n    const filterRecords = (records) => {\n        return records.filter((x) => {\n            return searchTerm.length === 0 || x.name.toUpperCase().startsWith(searchTerm.toUpperCase()) || x.wr === parseInt(searchTerm);\n        });\n    };\n\n    const handleInputChange = (ev) => {\n        setSearchTerm(ev.target.value);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={false} md={1} lg={3} />\n                <Grid item xs={12} md={10} lg={6}>\n                    <Paper style={{ paddingTop: '5px', marginBottom: '24px' }}>\n                        <RecordChart data={records} mode={1} title=\"Single Player\" color=\"#2E93fA\" />\n                    </Paper>\n                    <Paper style={{ paddingTop: '5px', marginBottom: '24px' }}>\n                        <RecordChart data={records} mode={2} title=\"Cooperative\" color=\"#FF9800\" />\n                    </Paper>\n                    <Paper className={classes.searchBox}>\n                        <FormGroup>\n                            <Input placeholder=\"Search\" onChange={handleInputChange} disableUnderline={true} />\n                        </FormGroup>\n                    </Paper>\n                    <Paper style={{ marginBottom: '50px' }}>\n                        <RecordsTable data={filterRecords(records)} />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default RecordsView;\n","import React from 'react';\nimport Flag from 'react-world-flags';\nimport { library as fa } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMedal } from '@fortawesome/free-solid-svg-icons';\nimport Avatar from '@material-ui/core/Avatar';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nfa.add(faMedal);\n\nconst rows = [\n    { id: 'rank', numeric: true, sortable: false, label: 'Rank' },\n    { id: 'name', numeric: false, sortable: false, label: 'Player' },\n    { id: 'score', numeric: true, sortable: true, label: 'Portals' },\n];\n\nconst ScoresTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell key={row.id} align={row.numeric ? 'center' : 'left'} sortDirection={orderBy === row.id ? order : false}>\n                        {row.sortable === true && (\n                            <Tooltip title=\"Sort\" placement={row.numeric ? 'bottom-end' : 'bottom-start'} enterDelay={300}>\n                                <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        overflowX: 'auto',\n    },\n    playerCell: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    clickLink: {\n        cursor: 'pointer',\n    },\n}));\n\nconst ScoresTable = ({ data, handleClickOpen }) => {\n    const [state, setState] = React.useState({\n        order: 'asc',\n        orderBy: 'score',\n    });\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (state.orderBy === property && state.order === 'desc') {\n            order = 'asc';\n        }\n\n        setState({ order, orderBy });\n    };\n\n    const classes = useStyles();\n    const { order, orderBy } = state;\n\n    return (\n        <div className={classes.root}>\n            <Table>\n                <ScoresTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.length} />\n                <TableBody>\n                    {stableSort(data, order, orderBy).map((item) => {\n                        return (\n                            <TableRow hover tabIndex={-1} key={item._id}>\n                                <TableCell size=\"small\" align=\"center\">\n                                    {item.rank === 1 ? (\n                                        <FontAwesomeIcon title=\"Rank 1\" icon=\"medal\" color=\"#ffd700\" />\n                                    ) : item.rank === 2 ? (\n                                        <FontAwesomeIcon title=\"Rank 2\" icon=\"medal\" color=\"#C0C0C0\" />\n                                    ) : item.rank === 3 ? (\n                                        <FontAwesomeIcon title=\"Rank 3\" icon=\"medal\" color=\"#cd7f32\" />\n                                    ) : (\n                                        item.rank\n                                    )}\n                                </TableCell>\n                                <TableCell size=\"small\">\n                                    <div className={classes.playerCell}>\n                                        <Avatar src={item.avatar} />\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                        <Link className={classes.clickLink} onClick={handleClickOpen(item._id)} color=\"inherit\">\n                                            {item.name}\n                                        </Link>\n                                        {item.country && (\n                                            <>\n                                                &nbsp;&nbsp;&nbsp;\n                                                <Flag code={item.country} height=\"12\" alt={item.country} />\n                                            </>\n                                        )}\n                                    </div>\n                                </TableCell>\n                                <TableCell size=\"small\" align=\"center\">\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={`${item.stats.percentage}% (${item.score - item.stats.delta}+${item.stats.delta})`}\n                                        disableFocusListener\n                                        disableTouchListener\n                                    >\n                                        <div>{item.score}</div>\n                                    </Tooltip>\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default ScoresTable;\n","class Api {\n    constructor() {\n        this.baseApi = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : 'https://raw.githubusercontent.com/NeKzor/lp/api';\n    }\n    async request(route) {\n        let res = await fetch(route);\n        console.log(`[GET] ${route} (${res.status})`);\n        return res;\n    }\n    async getRecords() {\n        let res = await this.request(`${this.baseApi}/records.json`);\n        return res.ok ? (await res.json()).data : {};\n    }\n    async getBoard(board) {\n        if (board !== 'sp' && board !== 'mp' && board !== 'overall') throw new Error('Invalid board!');\n\n        let res = await this.request(`${this.baseApi}/${board}.json`);\n        return res.ok ? (await res.json()).data : {};\n    }\n    async getProfile(id) {\n        let res = await this.request(`${this.baseApi}/profile/${id}.json`);\n        return res.ok ? (await res.json()).data : null;\n    }\n}\n\nexport default new Api();\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nconst rows = [\n    { id: 'index', numeric: false, sortable: true, label: 'Map' },\n    { id: 'score', numeric: true, sortable: true, label: 'Portals' },\n    { id: 'delta', numeric: true, sortable: true, label: 'ΔWR' },\n];\n\nconst ProfileTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map(\n                    (row) => (\n                        <TableCell\n                            key={row.id}\n                            align={row.numeric ? 'center' : 'center'}\n                            padding={row.disablePadding ? 'none' : 'default'}\n                            sortDirection={orderBy === row.id ? order : false}\n                        >\n                            {row.sortable === true && (\n                                <Tooltip title=\"Sort\" placement={row.numeric ? 'bottom-end' : 'bottom-start'} enterDelay={300}>\n                                    <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                        {row.label}\n                                    </TableSortLabel>\n                                </Tooltip>\n                            )}\n                            {row.sortable === false && row.label}\n                        </TableCell>\n                    ),\n                    this,\n                )}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst ProfileTable = ({ data }) => {\n    const [state, setState] = React.useState({\n        order: 'asc',\n        orderBy: 'index',\n    });\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (state.orderBy === property && state.order === 'desc') {\n            order = 'asc';\n        }\n\n        setState({ order, orderBy });\n    };\n\n    const classes = useStyles();\n    const { order, orderBy } = state;\n\n    const UnknownScoreInfo = () => (\n        <Tooltip placement=\"right\" title=\"Unknown score.\" disableFocusListener disableTouchListener>\n            <Link style={{ cursor: 'help' }}>n/a</Link>\n        </Tooltip>\n    );\n\n    return (\n        <div className={classes.root}>\n            <Table>\n                <ProfileTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.length} />\n                <TableBody>\n                    {stableSort(data, order, orderBy).map((record) => {\n                        let score =\n                            record.score != null ? (\n                                record.showcase ? (\n                                    <Tooltip placement=\"right\" title=\"Watch on YouTube\" disableFocusListener disableTouchListener>\n                                        <Link target=\"_blank\" rel=\"noopener\" href={`https://youtu.be/${record.showcase.media}`}>\n                                            <b>{record.score}</b>\n                                        </Link>\n                                    </Tooltip>\n                                ) : (\n                                    record.score\n                                )\n                            ) : (\n                                <UnknownScoreInfo />\n                            );\n                        let delta = record.score != null ? record.delta === 0 ? '' : `+${record.delta}` : <UnknownScoreInfo />;\n\n                        return (\n                            <TableRow hover tabIndex={-1} key={record._id}>\n                                <TableCell size=\"small\" align=\"center\">\n                                    <Link\n                                        target=\"_blank\"\n                                        rel=\"noopener\"\n                                        color=\"inherit\"\n                                        href={`https://steamcommunity.com/stats/Portal2/leaderboards/${record._id}`}\n                                    >\n                                        {record.name}\n                                    </Link>\n                                </TableCell>\n                                <TableCell size=\"small\" align=\"center\">\n                                    {score}\n                                </TableCell>\n                                <TableCell size=\"small\" align=\"center\">\n                                    {delta}\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default ProfileTable;\n","import React from 'react';\nimport ReactApexCharts from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\n\nconst chartOptions = {\n    plotOptions: {\n        bar: {\n            horizontal: false,\n            columnWidth: '100%',\n            endingShape: 'rounded',\n        },\n    },\n    dataLabels: {\n        enabled: false,\n    },\n    stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent'],\n    },\n    yaxis: {\n        title: {\n            text: 'Portals',\n        },\n    },\n    fill: {\n        opacity: 1,\n    },\n    tooltip: {\n        y: {\n            formatter: function(val) {\n                return val + ' portal' + (val === 1 ? '' : 's');\n            },\n        },\n    },\n};\n\nconst RecordDeltaChart = ({ data, mode, title, color }) => {\n    const sorted = data.filter((m) => m.mode === mode).sort((a, b) => a.index - b.index);\n    const max = Math.max(...sorted.map((m) => m.score));\n\n    const series = [\n        {\n            name: 'WR Delta',\n            data: sorted.map((m) => m.delta),\n        },\n    ];\n\n    const theme = useTheme();\n\n    const options = {\n        ...chartOptions,\n        xaxis: {\n            categories: sorted.map((m) => m.name),\n            labels: {\n                show: false,\n            },\n        },\n        yaxis: {\n            ...chartOptions.yaxis,\n            max: max + (max % 2),\n            tickAmount: (max + (max % 2)) / 2,\n        },\n        title: {\n            text: title,\n            align: 'center',\n            offsetY: 10,\n            style: {\n                fontSize: 24,\n            },\n        },\n        colors: [color],\n        chart: {\n            background: theme.palette.type === 'dark' ? theme.palette.grey['800'] : theme.palette.common.white,\n        },\n        theme: {\n            mode: theme.palette.type,\n        },\n    };\n\n    return <ReactApexCharts options={options} series={series} type=\"bar\" height=\"350\" />;\n};\n\nexport default RecordDeltaChart;\n","import React from 'react';\nimport Flag from 'react-world-flags';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport ProfileTable from './ProfileTable';\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordDeltaChart from './RecordDeltaChart';\n\nconst useStyles = makeStyles((theme) => ({\n    stats: {\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        background: theme.palette.type === 'dark' ? theme.palette.grey['A400'] : theme.palette.grey['50'],\n    },\n    records: {\n        paddingTop: theme.spacing(3),\n        background: theme.palette.type === 'dark' ? theme.palette.grey['A400'] : theme.palette.grey['50'],\n    },\n    flex: {\n        flex: 1,\n    },\n    paper: {\n        padding: theme.spacing(5),\n        textAlign: 'center',\n    },\n}));\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Slide direction=\"up\" {...props} ref={ref} />;\n});\n\nconst gotoSteamProfile = (id) => {\n    let tab = window.open(`https://steamcommunity.com/profiles/${id}`, '_blank');\n    tab.opener = null;\n};\n\nconst ProfileStat = ({ title, score, delta, percentage }) => (\n    <>\n        <Tooltip placement=\"top\" title={score !== 0 ? `${score - delta}+${delta}` : ''} disableFocusListener disableTouchListener>\n            <Typography variant=\"h3\" gutterBottom>\n                {percentage !== 0 ? percentage : 0}%\n            </Typography>\n        </Tooltip>\n        <Typography variant=\"subtitle1\" gutterBottom>\n            {title}\n        </Typography>\n    </>\n);\n\nconst ProfileDialog = ({ active, profile, handleClickClose }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Dialog fullScreen open={active} onClose={handleClickClose} TransitionComponent={Transition}>\n                <AppBar position=\"sticky\">\n                    <Toolbar>\n                        <Tooltip placement=\"bottom\" title=\"Open Steam profile\" disableFocusListener disableTouchListener>\n                            {profile ? (\n                                <>\n                                    <Button color=\"inherit\" onClick={() => gotoSteamProfile(profile._id)}>\n                                        <Avatar src={profile.avatar} />\n                                    </Button>\n                                    <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                                        &nbsp;&nbsp;&nbsp;{profile.name}\n                                        {profile.country && (\n                                            <>\n                                                &nbsp;&nbsp;&nbsp;\n                                                <Flag\n                                                    code={profile.country}\n                                                    style={{ position: 'relative', top: '2px' }}\n                                                    height=\"15\"\n                                                    alt={profile.country}\n                                                />\n                                            </>\n                                        )}\n                                    </Typography>\n                                </>\n                            ) : (\n                                <>\n                                    <Skeleton variant=\"circle\" width={40} height={40} />\n                                    <Skeleton style={{ marginLeft: '10px' }} variant=\"text\" width={200} />\n                                    <Typography className={classes.flex} />\n                                </>\n                            )}\n                        </Tooltip>\n                        <Tooltip placement=\"bottom\" title=\"Close profile\" disableFocusListener disableTouchListener>\n                            <IconButton color=\"inherit\" onClick={handleClickClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                </AppBar>\n                {profile ? (\n                    <>\n                        <Grid container className={classes.stats}>\n                            <Grid item xs={false} md={1} lg={3} />\n                            <Grid item xs={12} md={10} lg={6}>\n                                {profile.entries.length !== 0 && (\n                                    <Grid container spacing={10}>\n                                        <Grid item xs={12} md={4} lg={4}>\n                                            <Paper className={classes.paper}>\n                                                <ProfileStat\n                                                    title=\"Single Player\"\n                                                    score={profile.sp}\n                                                    delta={profile.stats.sp.delta}\n                                                    percentage={profile.stats.sp.percentage}\n                                                />\n                                            </Paper>\n                                        </Grid>\n                                        <Grid item xs={12} md={4} lg={4}>\n                                            <Paper className={classes.paper}>\n                                                <ProfileStat\n                                                    title=\"Cooperative\"\n                                                    score={profile.mp}\n                                                    delta={profile.stats.mp.delta}\n                                                    percentage={profile.stats.mp.percentage}\n                                                />\n                                            </Paper>\n                                        </Grid>\n                                        <Grid item xs={12} md={4} lg={4}>\n                                            <Paper className={classes.paper}>\n                                                <ProfileStat\n                                                    title=\"Overall\"\n                                                    score={profile.overall}\n                                                    delta={profile.stats.overall.delta}\n                                                    percentage={profile.stats.overall.percentage}\n                                                />\n                                            </Paper>\n                                        </Grid>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>\n                        <Grid container className={classes.records}>\n                            <Grid item xs={false} md={1} lg={3} />\n                            <Grid item xs={12} md={10} lg={6}>\n                                <Paper style={{ marginBottom: '50px' }}>\n                                    <ProfileTable data={profile.entries} />\n                                </Paper>\n                                <Paper style={{ paddingTop: '10px', marginBottom: '50px' }}>\n                                    <RecordDeltaChart data={profile.entries} mode={1} title=\"Single Player\" color=\"#2E93fA\" />\n                                </Paper>\n                                <Paper style={{ paddingTop: '10px', marginBottom: '50px' }}>\n                                    <RecordDeltaChart data={profile.entries} mode={2} title=\"Cooperative\" color=\"#FF9800\" />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </>\n                ) : profile === undefined ? (\n                    <LinearProgress />\n                ) : (\n                    <Grid style={{ height: '100%' }} container className={classes.records}>\n                        <Grid item xs={false} md={1} lg={2} />\n                        <Grid item xs={12} md={10} lg={9}>\n                            <Paper>\n                                <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }}>\n                                    Profile not found :(\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                )}\n            </Dialog>\n        </>\n    );\n};\n\nexport default ProfileDialog;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport ScoresTable from '../components/ScoresTable';\nimport AppState from '../AppState';\nimport Api from '../Api';\nimport { useIsMounted } from '../Hooks';\nimport ProfileDialog from '../components/ProfileDialog';\n\nconst ScoreboardView = ({ boardType, profileId }) => {\n    const isMounted = useIsMounted();\n\n    const [board, setBoard] = React.useState([]);\n    const [profile, setProfile] = React.useState(undefined);\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n\n    const {\n        state: { records },\n    } = React.useContext(AppState);\n\n    const prepareProfile = (profile) => {\n        if (profile) {\n            profile.entries.forEach((e) => {\n                let map = records.find((r) => r.id === e._id);\n                e.name = map.name;\n                e.index = map.index;\n                e.delta = Math.abs(map.wr - e.score);\n                e.showcase = map.showcases.find((sc) => sc.player.id === profile._id);\n            });\n        }\n        return profile;\n    };\n\n    React.useEffect(() => {\n        if (profile === undefined && profileId) {\n            setDialogOpen(true);\n\n            Api.getProfile(profileId)\n                .then((profile) => isMounted.current && setProfile(prepareProfile(profile)))\n                .catch((err) => console.error(err));\n        } else if (board.length === 0) {\n            Api.getBoard(boardType)\n                .then((board) => isMounted.current && setBoard(board))\n                .catch((err) => console.error(err));\n        }\n    }, []);\n\n    const handleProfileOpen = (id) => () => {\n        setDialogOpen(true);\n\n        Api.getProfile(id)\n            .then((profile) => isMounted.current && setProfile(prepareProfile(profile)))\n            .catch((err) => console.error(err));\n    };\n\n    const handleProfileClose = () => {\n        setDialogOpen(false);\n\n        if (board.length === 0) {\n            Api.getBoard(boardType)\n                .then((board) => isMounted.current && setBoard(board))\n                .catch((err) => console.error(err));\n        }\n    };\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={false} md={1} lg={3} />\n                <Grid item xs={12} md={10} lg={6}>\n                    <Paper style={{ marginBottom: '50px' }}>\n                        {board.length === 0 && <LinearProgress />}\n                        <ScoresTable data={board} handleClickOpen={handleProfileOpen} />\n                    </Paper>\n                </Grid>\n            </Grid>\n            <ProfileDialog active={dialogOpen} profile={profile} handleClickClose={handleProfileClose} />\n        </>\n    );\n};\n\nexport default ScoreboardView;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst NotFoundView = () => {\n    return (\n        <Grid container>\n            <Grid item xs={false} md={1} lg={2} />\n            <Grid item xs={12} md={10} lg={9}>\n                <Paper>\n                    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }}>\n                        Page not found :(\n                    </Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\nimport teal from '@material-ui/core/colors/teal';\nimport AppBar from './components/AppBar';\nimport AboutView from './views/AboutView';\nimport RecordsView from './views/RecordsView';\nimport ScoreboardView from './views/ScoreboardView';\nimport Api from './Api';\nimport AppState, { AppReducer } from './AppState';\nimport NotFoundView from './views/NotFoundView';\n\nconst useStyles = makeStyles((theme) => ({\n    views: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(...AppReducer);\n\n    React.useEffect(() => {\n        Api.getRecords()\n            .then((data) => dispatch({ action: 'setRecords', data }))\n            .catch((err) => console.error(err));\n    }, []);\n\n    const theme = React.useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                primary: {\n                    light: teal[300],\n                    main: teal[500],\n                    dark: teal[700],\n                },\n                secondary: {\n                    light: '#fff',\n                    main: '#fff',\n                    dark: '#fff',\n                },\n                error: {\n                    main: red.A400,\n                },\n                type: state.darkMode.enabled ? 'dark' : 'light',\n            },\n            typography: {\n                useNextVariants: true,\n            },\n        });\n    }, [state.darkMode.enabled]);\n\n    const classes = useStyles();\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n    const handleTabChange = (_, currentTab) => {\n        //setCurrentTab(currentTab);\n    };\n\n    const tabs = ['/single-player', '/cooperative', '/overall', '/records', '/about'];\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppState.Provider value={context}>\n                <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/lp' : '/'}>\n                    <Route\n                        path=\"/\"\n                        render={({ location: { pathname } }) => (\n                            <>\n                                <AppBar currentTab={tabs.findIndex((x) => x === pathname)} onTabChange={handleTabChange} />\n                                {state.records.length !== 0 ? (\n                                    <div className={classes.views}>\n                                        <Switch>\n                                            <Redirect exact from=\"/\" to=\"/single-player\" />\n                                            <Redirect exact from=\"/sp\" to=\"/single-player\" />\n                                            <Redirect exact from=\"/mp\" to=\"/cooperative\" />\n                                            <Redirect exact from=\"/coop\" to=\"/cooperative\" />\n                                            <Redirect exact from=\"/ov\" to=\"/overall\" />\n                                            <Redirect exact from=\"/wrs\" to=\"/records\" />\n                                            <Route exact path=\"/single-player\" component={() => <ScoreboardView boardType=\"sp\" />} />\n                                            <Route exact path=\"/cooperative\" component={() => <ScoreboardView boardType=\"mp\" />} />\n                                            <Route exact path=\"/overall\" component={() => <ScoreboardView boardType=\"overall\" />} />\n                                            <Route exact path=\"/records\" component={RecordsView} />\n                                            <Route exact path=\"/about\" component={AboutView} />\n                                            <Route\n                                                exact\n                                                from=\"/@/:id\"\n                                                component={({ match: { params } }) => (\n                                                    <ScoreboardView boardType=\"sp\" profileId={params.id} />\n                                                )}\n                                            />\n                                            <Route component={NotFoundView} />\n                                        </Switch>\n                                    </div>\n                                ) : (\n                                    <LinearProgress />\n                                )}\n                            </>\n                        )}\n                    />\n                </BrowserRouter>\n            </AppState.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/registerServiceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}