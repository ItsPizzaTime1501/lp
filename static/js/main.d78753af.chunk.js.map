{"version":3,"sources":["components/tabs.js","components/appBar.js","utils/stableSort.js","components/profileTable.js","components/profileDialog.js","views/aboutView.js","components/recordsTable.js","views/recordsView.js","components/scoresTable.js","withRoot.js","withContext.js","views/scoreboardView.js","theme.js","app.js","client.js","contextProvider.js","registerServiceWorker.js","index.js"],"names":["SiteTabs","_this$props","this","props","currentTab","handleTabChange","react_default","a","createElement","Fragment","Tabs_default","value","onChange","variant","textColor","color","indicatorColor","Tab_default","label","React","Component","AppBarWithDrawer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","open","showDrawer","setState","gotoPage","page","window","homepage","pageLinks","text","link","_this2","classes","onTabChange","list","className","List_default","ListItem_default","button","key","onClick","ListItemText_default","primary","Divider_default","map","item","index","concat","root","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","aria-label","Menu_default","Typography_default","tabs","SwipeableDrawer_default","onClose","onOpen","tabIndex","role","onKeyDown","withStyles","theme","paddingBottom","spacing","unit","width","marginLeft","marginRight","stableSort","array","order","orderBy","desc","b","cmp","el","sort","rows","id","numeric","sortable","ProfileTableHead","createSortHandler","property","event","onRequestSort","TableHead_default","TableRow_default","row","TableCell_default","align","padding","disablePadding","sortDirection","Tooltip_default","title","placement","enterDelay","TableSortLabel_default","active","direction","ProfileTable","rowsPerPage","handleRequestSort","_","_this3","handleChangePage","handleChangeRowsPerPage","target","_this$props2","data","_this$state","UnknownScoreInfo","disableFocusListener","disableTouchListener","Link_default","style","cursor","Table_default","aria-labelledby","profileTable_ProfileTableHead","rowCount","length","TableBody_default","slice","record","score","delta","wrDelta","hover","rel","href","name","TablePagination_default","rowsPerPageOptions","component","count","labelDisplayedRows","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","overflowX","Transition","Slide_default","assign","ProfileDialog","gotoSteamProfile","opener","dialogOpen","handleClose","Dialog_default","fullScreen","TransitionComponent","Button_default","Avatar_default","src","avatar","flex","Close_default","entries","LinearProgress_default","Grid_default","container","stats","xs","md","lg","Paper_default","paper","sp","gutterBottom","percentage","coop","overall","records","profileTable","marginTop","textAlign","AboutView","description","tooltip","idx","openSourceLink","detectedCheaters","help","cheaters","aboutBox","dense","export_date","RecordsTableHead","RecordsTable","ev","gotoYouTube","query","replace","wr","_this4","ExcludedMapsInfo","helpLink","recordsTable_RecordsTableHead","excluded","ties","PlayArrow_default","RecordsView","searchTerm","setSearchTerm","filter","x","toUpperCase","startsWith","parseInt","searchBox","FormGroup_default","Input_default","placeholder","inputProps","disableUnderline","recordsTable","filterRecords","marginBottom","fa","add","faMedal","ScoresTableHead","ScoresTable","handleClickOpen","scoresTable_ScoresTableHead","profile","getProfile","getStats","rank","react_fontawesome_index_es","icon","playerCell","avatar_link","clickLink","profile_name","display","alignItems","AppContext","createContext","withContext","Consumer","context","downloadBoard","boardType","dialogOpener","scoresTable","Theme","createMuiTheme","palette","light","teal","main","dark","secondary","typography","useNextVariants","App","_this$props$boards","boards","currentProfile","cacheProfile","clearProfile","appBar","views","scoreboardView","recordsView","aboutView","profileDialog","PureComponent","withRoot","styles","CssBaseline_default","Client","baseApi","route","console","log","fetch","get","res","json","board","Error","ContextProvider","profiles","calcWrDelta","entry","Math","abs","findRecord","find","r","findProfile","p","_downloadBoard","asyncToGenerator","regenerator_default","mark","_callee","type","wrap","_context","prev","next","abrupt","sent","stop","_x","apply","arguments","api","perfectScores","playerCache","getProfiles","getRecords","initRecords","tied_records","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","mode","err","return","that","getBoard","_profile","_stats","round","prevState","objectSpread","defineProperty","profileId","getPlayer","sp_score","coop_score","overall_score","_iterator3","_iteratorNormalCompletion3","_step3","push","Provider","children","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","app","contextProvider","ReactDOM","render","document","querySelector","URL","process","origin","addEventListener","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d78753af.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nclass SiteTabs extends React.Component {\n    static propTypes = {\n        currentTab: PropTypes.number.isRequired,\n        handleTabChange: PropTypes.func.isRequired,\n    };\n\n    render() {\n        const { currentTab, handleTabChange } = this.props;\n\n        return (\n            <>\n                <Tabs\n                    value={currentTab}\n                    onChange={handleTabChange}\n                    variant=\"scrollable\"\n                    textColor=\"inherit\"\n                    color=\"inherit\"\n                    indicatorColor=\"secondary\"\n                >\n                    <Tab label=\"Single Player\" />\n                    <Tab label=\"Cooperative\" />\n                    <Tab label=\"Overall\" />\n                    <Tab label=\"Records\" />\n                    <Tab label=\"About\" />\n                </Tabs>\n            </>\n        );\n    }\n}\n\nexport default SiteTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport SiteTabs from '../components/tabs';\n\nconst styles = theme => ({\n    root: {\n        paddingBottom: theme.spacing.unit * 14,\n    },\n    list: {\n        width: theme.spacing.unit * 25,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n});\n\nclass AppBarWithDrawer extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        currentTab: PropTypes.number.isRequired,\n        onTabChange: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n\n        this.homepage = 'https://nekzor.github.io/';\n        this.pageLinks = [\n            { text: 'Glitches', link: 'glitches.html' },\n            { text: 'Least Portals', link: 'lp' },\n            { text: 'Demo Parser', link: 'parser.html' },\n            { text: 'Cvars', link: 'cvars' },\n        ];\n    }\n\n    state = {\n        open: false,\n    };\n\n    showDrawer = (state) => () => {\n        this.setState({ open: state });\n    }\n\n    gotoPage = (page) => () => {\n        window.open(this.homepage + page, '_self');\n    }\n\n    render() {\n        const { classes, currentTab, onTabChange } = this.props;\n\n        const list = (\n            <div className={classes.list}>\n                <List>\n                    <ListItem button key={0} onClick={this.gotoPage('index.html')}>\n                        <ListItemText primary={'nekzor.github.io'} />\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    {this.pageLinks.map((item, index) => (\n                        <ListItem button key={index} onClick={this.gotoPage(`${item.link}`)}>\n                            <ListItemText primary={item.text} />\n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n        );\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"fixed\">\n                    <Toolbar>\n                        <IconButton onClick={this.showDrawer(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\">Least Portals</Typography>\n                    </Toolbar>\n                    <SiteTabs currentTab={currentTab} handleTabChange={onTabChange} />\n                </AppBar>\n                <SwipeableDrawer open={this.state.open} onClose={this.showDrawer(false)} onOpen={this.showDrawer(true)}>\n                    <div\n                        tabIndex={0}\n                        role=\"button\"\n                        onClick={this.showDrawer(false)}\n                        onKeyDown={this.showDrawer(false)}\n                    >\n                        {list}\n                    </div>\n                </SwipeableDrawer>\n            </div>\n        )\n    };\n}\n\nexport default withStyles(styles)(AppBarWithDrawer);\n","const stableSort = (array, order, orderBy) => {\n    let desc = (a, b) => {\n        if (b[orderBy] < a[orderBy]) return -1;\n        if (b[orderBy] > a[orderBy]) return 1;\n        return 0;\n    };\n\n    let cmp = (order === 'desc')\n        ? (a, b) => desc(a, b)\n        : (a, b) => -desc(a, b);\n    \n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map(el => el[0]);\n};\n\nexport default stableSort;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nconst rows = [\n    { id: 'name', numeric: false, sortable: true, label: 'Map' },\n    { id: 'score', numeric: true, sortable: true, label: 'Portals' },\n    { id: 'wrDelta', numeric: true, sortable: true, label: 'ΔWR' },\n];\n\nclass ProfileTableHead extends React.Component {\n    static propTypes = {\n        onRequestSort: PropTypes.func.isRequired,\n        order: PropTypes.string.isRequired,\n        orderBy: PropTypes.string.isRequired,\n        rowCount: PropTypes.number.isRequired,\n    };\n\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { order, orderBy } = this.props;\n\n        return (\n            <TableHead>\n                <TableRow>\n                    {rows.map(\n                        row => (\n                            <TableCell\n                                key={row.id}\n                                align={row.numeric ? 'center' : 'center'}\n                                padding={row.disablePadding ? 'none' : 'default'}\n                                sortDirection={orderBy === row.id ? order : false}\n                            >\n                                {row.sortable === true &&\n                                    <Tooltip\n                                        title=\"Sort\"\n                                        placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                                        enterDelay={300}\n                                    >\n                                        <TableSortLabel\n                                            active={orderBy === row.id}\n                                            direction={order}\n                                            onClick={this.createSortHandler(row.id)}\n                                        >\n                                            {row.label}\n                                        </TableSortLabel>\n                                    </Tooltip>\n                                }\n                                {row.sortable === false && row.label}\n                            </TableCell>\n                        ),\n                        this,\n                    )}\n                </TableRow>\n            </TableHead>\n        );\n    }\n}\n\nconst styles = _ => ({\n    root: {\n        overflowX: 'auto',\n    },\n});\n\nclass ProfileTable extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        data: PropTypes.array.isRequired,\n    };\n\n    state = {\n        order: 'asc',\n        orderBy: 'index',\n        page: 0,\n        rowsPerPage: 100,\n    };\n\n    handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    };\n\n    handleChangePage = (_, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    render() {\n        const { classes, data } = this.props;\n        const { order, orderBy, rowsPerPage, page } = this.state;\n\n        const UnknownScoreInfo = () => (\n            <Tooltip\n                placement=\"right\"\n                title=\"Unknown score.\"\n                disableFocusListener\n                disableTouchListener\n            >\n                <Link style={{ cursor: 'help' }}>n/a</Link>\n            </Tooltip>\n        );\n\n        return (\n            <div className={classes.root}>\n                <Table aria-labelledby=\"tableTitle\">\n                    <ProfileTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={this.handleRequestSort}\n                        rowCount={data.length}\n                    />\n                    <TableBody>\n                        {stableSort(data, order, orderBy)\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map(record => {\n                                let score = record.score != null\n                                    ? record.score\n                                    : <UnknownScoreInfo />;\n                                let delta = record.score != null\n                                    ? (record.wrDelta === 0)\n                                        ? ''\n                                        : `+${record.wrDelta}`\n                                    : <UnknownScoreInfo />;\n\n                                return (\n                                    <TableRow hover tabIndex={-1} key={record.id}>\n                                        <TableCell align=\"center\">\n                                            <Link\n                                                target=\"_blank\"\n                                                rel=\"noopener\"\n                                                color=\"inherit\"\n                                                href={`https://steamcommunity.com/stats/Portal2/leaderboards/${record.id}`}\n                                            >\n                                                {record.name}\n                                            </Link>\n                                        </TableCell>\n                                        <TableCell align=\"center\">{score}</TableCell>\n                                        <TableCell align=\"center\">{delta}</TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 20, 50, 100]}\n                    component=\"div\"\n                    count={data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    labelDisplayedRows={() => ''}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfileTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport ProfileTable from './profileTable';\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    stats: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    records: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    flex: {\n        flex: 1,\n    },\n    paper: {\n        padding: theme.spacing.unit * 5,\n        textAlign: 'center',\n    },\n});\n\nconst Transition = (props) => {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nclass ProfileDialog extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        dialogOpen: PropTypes.bool.isRequired,\n        handleClose: PropTypes.func.isRequired,\n        data: PropTypes.object.isRequired,\n    };\n\n    gotoSteamProfile = (id) => {\n        let tab = window.open(`https://steamcommunity.com/profiles/${id}`, '_blank');\n        tab.opener = null;\n    };\n\n    render() {\n        const { classes, dialogOpen, handleClose, data } = this.props;\n\n        return (\n            <>\n                <Dialog\n                    fullScreen\n                    open={dialogOpen}\n                    onClose={handleClose}\n                    TransitionComponent={Transition}\n                >\n                    <AppBar position=\"sticky\">\n                        <Toolbar>\n                            <Tooltip placement=\"bottom\" title=\"Open Steam profile\" disableFocusListener disableTouchListener>\n                                <Button color=\"inherit\" onClick={() => this.gotoSteamProfile(data.id)}>\n                                    <Avatar src={data.avatar} />\n                                </Button>\n                            </Tooltip>\n                            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                                &nbsp;&nbsp;&nbsp;{data.name}\n                            </Typography>\n                            <Tooltip placement=\"bottom\" title=\"Close profile\" disableFocusListener disableTouchListener>\n                                <IconButton color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\n                                    <CloseIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Toolbar>\n                    </AppBar>\n                    {data.entries.length === 0 && <LinearProgress />}\n                    <Grid container className={classes.stats}>\n                        <Grid item xs={false} md={1} lg={3} />\n                        <Grid item xs={12} md={10} lg={6}>\n                            {data.entries.length !== 0\n                                && <Grid container spacing={24}>\n                                    <Grid item xs={12} md={4} lg={4}>\n                                        <Paper className={classes.paper}>\n                                            <Tooltip placement=\"top\" title={data.sp.score !== 0 ? `${data.sp.score - data.sp.delta}+${data.sp.delta}` : ''} disableFocusListener disableTouchListener>\n                                                <Typography variant=\"h3\" gutterBottom>{(data.sp.percentage !== 0) ? data.sp.percentage : 0}%</Typography>\n                                            </Tooltip>\n                                            <Typography variant=\"subtitle1\" gutterBottom>Single Player</Typography>\n                                        </Paper>\n                                    </Grid>\n                                    <Grid item xs={12} md={4} lg={4}>\n                                        <Paper className={classes.paper}>\n                                            <Tooltip placement=\"top\" title={data.coop.score !== 0 ? `${data.coop.score - data.coop.delta}+${data.coop.delta}` : ''} disableFocusListener disableTouchListener>\n                                                <Typography variant=\"h3\" gutterBottom>{(data.coop.percentage !== 0) ? data.coop.percentage : 0}%</Typography>\n                                            </Tooltip>\n                                            <Typography variant=\"subtitle1\" gutterBottom>Cooperative</Typography>\n                                        </Paper>\n                                    </Grid>\n                                    <Grid item xs={12} md={4} lg={4}>\n                                        <Paper className={classes.paper}>\n                                            <Tooltip placement=\"top\" title={data.overall.percentage !== 0 ? `${data.overall.score - data.overall.delta}+${data.overall.delta}` : ''} disableFocusListener disableTouchListener>\n                                                <Typography variant=\"h3\" gutterBottom>{(data.overall.percentage !== 0) ? data.overall.percentage : 0}%</Typography>\n                                            </Tooltip>\n                                            <Typography variant=\"subtitle1\" gutterBottom>Overall</Typography>\n                                        </Paper>\n                                    </Grid>\n                                </Grid>}\n                        </Grid>\n                    </Grid>\n                    <Grid container className={classes.records}>\n                        <Grid item xs={false} md={1} lg={3} />\n                        <Grid item xs={12} md={10} lg={6}>\n                            <Paper>\n                                <ProfileTable data={data.entries} />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfileDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    help: {\n        cursor: 'help',\n    },\n    aboutBox: {\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nclass AboutView extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        data: PropTypes.object.isRequired,\n    };\n\n    constructor() {\n        super();\n\n        this.description = [\n            'This leaderboard includes all legit players who care about least portal records in Portal 2.',\n            '',\n            'Ranking Requirements:',\n            '- Be in top 5000 on every single player or cooperative leaderboard.',\n            '- Tie as many records as possible or get at least very close to it.',\n            '- Do not cheat.'\n        ];\n        this.tooltip = 'Automatic ban system catches users who cheated at least once.';\n    }\n\n    render() {\n        const { classes, data } = this.props;\n\n        const description = this.description.map((text, idx) => (\n            <ListItem key={idx}>\n                <Typography variant=\"body1\">\n                    {text}\n                </Typography>\n            </ListItem>\n        ));\n\n        const openSourceLink = <Link rel=\"noopener\" href=\"https://github.com/NeKzor/lp\">GitHub</Link>;\n\n        const detectedCheaters = (\n            <Tooltip\n                placement=\"right\"\n                title={this.tooltip}\n                disableFocusListener\n                disableTouchListener\n            >\n                <Link className={classes.help}>{data.cheaters.length}</Link>\n            </Tooltip>\n        );\n\n        return (\n            <>\n                <Grid container>\n                    <Grid item xs={false} md={1} lg={3} />\n                    <Grid item xs={12} md={10} lg={6}>\n                        <Paper className={classes.aboutBox}>\n                            <List className={classes.list} dense>\n                                <ListItem><Typography component=\"h2\" variant=\"h5\">Who's the lp king?</Typography></ListItem>\n                                {description}\n                                <ListItem></ListItem>\n                                <ListItem><Typography variant=\"subtitle1\">Project is open source at {openSourceLink}.</Typography></ListItem>\n                                <ListItem><Typography variant=\"subtitle1\">Number of detected cheaters: {detectedCheaters}</Typography></ListItem>\n                                <ListItem><Typography variant=\"subtitle1\">Last Update: {data.export_date}</Typography></ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(AboutView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nconst rows = [\n    { id: 'name', numeric: false, sortable: true, label: 'Map' },\n    { id: 'wr', numeric: true, sortable: true, label: 'Portals' },\n    { id: 'ties', numeric: true, sortable: true, label: 'Ties' },\n    { id: 'video', numeric: true, sortable: false, label: 'Video' },\n];\n\nclass RecordsTableHead extends React.Component {\n    static propTypes = {\n        onRequestSort: PropTypes.func.isRequired,\n        order: PropTypes.string.isRequired,\n        orderBy: PropTypes.string.isRequired,\n        rowCount: PropTypes.number.isRequired,\n    };\n\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { order, orderBy } = this.props;\n\n        return (\n            <TableHead>\n                <TableRow>\n                    {rows.map(\n                        row => (\n                            <TableCell\n                                key={row.id}\n                                align={row.numeric ? 'center' : 'left'}\n                                padding={row.disablePadding ? 'none' : 'default'}\n                                sortDirection={orderBy === row.id ? order : false}\n                            >\n                                {row.sortable === true &&\n                                    <Tooltip\n                                        title=\"Sort\"\n                                        placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                                        enterDelay={300}\n                                    >\n                                        <TableSortLabel\n                                            active={orderBy === row.id}\n                                            direction={order}\n                                            onClick={this.createSortHandler(row.id)}\n                                        >\n                                            {row.label}\n                                        </TableSortLabel>\n                                    </Tooltip>\n                                }\n                                {row.sortable === false && row.label}\n                            </TableCell>\n                        ),\n                        this,\n                    )}\n                </TableRow>\n            </TableHead>\n        );\n    }\n}\n\nconst styles = _ => ({\n    root: {\n        overflowX: 'auto',\n    },\n    helpLink: {\n        cursor: 'help'\n    },\n});\n\nclass RecordsTable extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        data: PropTypes.array.isRequired,\n    };\n\n    state = {\n        order: 'asc',\n        orderBy: 'index',\n        page: 0,\n        rowsPerPage: 50,\n    };\n\n    handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    };\n\n    handleChangePage = (_, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = (ev) => {\n        this.setState({ rowsPerPage: ev.target.value });\n    };\n\n    gotoYouTube = (record) => () => {\n        let query = `Portal+2+${record.name.replace(/ /g, '+')}+in+${record.wr}+Portals`;\n        let tab = window.open(`https://www.youtube.com/results?search_query=${query}`, '_blank');\n        tab.opener = null;\n    };\n\n    render() {\n        const { classes, data } = this.props;\n        const { order, orderBy, rowsPerPage, page } = this.state;\n\n        const ExcludedMapsInfo = () => (\n            <Tooltip\n                placement=\"right\"\n                title=\"Disabled tracking records for this map.\"\n                disableFocusListener\n                disableTouchListener\n            >\n                <Link className={classes.helpLink}>n/a</Link>\n            </Tooltip>\n        );\n\n        return (\n            <div className={classes.root}>\n                <Table aria-labelledby=\"tableTitle\">\n                    <RecordsTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={this.handleRequestSort}\n                        rowCount={data.length}\n                    />\n                    <TableBody>\n                        {stableSort(data, order, orderBy)\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map(record => {\n                                return (\n                                    <TableRow hover tabIndex={-1} key={record.id}>\n                                        <TableCell>\n                                            <Link\n                                                target=\"_blank\"\n                                                rel=\"noopener\"\n                                                color=\"inherit\"\n                                                href={`https://steamcommunity.com/stats/Portal2/leaderboards/${record.id}`}\n                                            >\n                                                {record.name}\n                                            </Link>\n                                        </TableCell>\n                                        <TableCell align=\"center\">{record.wr}</TableCell>\n                                        <TableCell align=\"center\">\n                                            {(record.excluded === true)\n                                                ? <ExcludedMapsInfo />\n                                                : record.ties\n                                            }\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            <Tooltip placement=\"right\" title=\"Search record on YouTube\" disableFocusListener disableTouchListener>\n                                                <IconButton color=\"primary\" onClick={this.gotoYouTube(record)}>\n                                                    <PlayArrow />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[10, 20, 50, 100]}\n                    component=\"div\"\n                    count={data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    labelDisplayedRows={() => ''}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(RecordsTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport RecordsTable from '../components/recordsTable';\n\nconst styles = theme => ({\n    searchBox: {\n        padding: 10,\n        marginBottom: theme.spacing.unit * 3,\n    },\n});\n\nclass RecordsView extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        data: PropTypes.array.isRequired,\n    };\n\n    state = {\n        searchTerm: '',\n    };\n\n    filterRecords(records) {\n        return records.filter(x => {\n            return this.state.searchTerm.length === 0\n                || (x.name.toUpperCase().startsWith(this.state.searchTerm.toUpperCase()) || x.wr === parseInt(this.state.searchTerm));\n        });\n    }\n\n    setSearchTerm = (ev) => {\n        this.setState({ searchTerm: ev.target.value })\n    }\n\n    render() {\n        const { classes, data } = this.props;\n\n        return (\n            <>\n                <Grid container>\n                    <Grid item xs={false} md={1} lg={3} />\n                    <Grid item xs={12} md={10} lg={6}>\n                        <Paper className={classes.searchBox}>\n                            <FormGroup>\n                                <Input\n                                    placeholder=\"Search\"\n                                    inputProps={{ 'aria-label': 'Description' }}\n                                    onChange={this.setSearchTerm}\n                                    disableUnderline={true}\n                                />\n                            </FormGroup>\n                        </Paper>\n                        <Paper>\n                            <RecordsTable data={this.filterRecords(data)} />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(RecordsView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { library as fa } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMedal } from '@fortawesome/free-solid-svg-icons';\nimport Avatar from '@material-ui/core/Avatar';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nfa.add(faMedal);\n\nconst rows = [\n    { id: 'rank', numeric: true, sortable: false, label: 'Rank' },\n    { id: 'name', numeric: false, sortable: false, label: 'Player' },\n    { id: 'score', numeric: true, sortable: true, label: 'Portals' },\n];\n\nclass ScoresTableHead extends React.Component {\n    static propTypes = {\n        onRequestSort: PropTypes.func.isRequired,\n        order: PropTypes.string.isRequired,\n        orderBy: PropTypes.string.isRequired,\n        rowCount: PropTypes.number.isRequired,\n    };\n\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { order, orderBy } = this.props;\n\n        return (\n            <TableHead>\n                <TableRow>\n                    {rows.map(\n                        row => (\n                            <TableCell\n                                key={row.id}\n                                align={row.numeric ? 'center' : 'left'}\n                                sortDirection={orderBy === row.id ? order : false}\n                            >\n                                {row.sortable === true &&\n                                    <Tooltip\n                                        title=\"Sort\"\n                                        placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                                        enterDelay={300}\n                                    >\n                                        <TableSortLabel\n                                            active={orderBy === row.id}\n                                            direction={order}\n                                            onClick={this.createSortHandler(row.id)}\n                                        >\n                                            {row.label}\n                                        </TableSortLabel>\n                                    </Tooltip>\n                                }\n                                {row.sortable === false && row.label}\n                            </TableCell>\n                        )\n                    )}\n                </TableRow>\n            </TableHead>\n        );\n    }\n}\n\nconst styles = _ => ({\n    root: {\n        overflowX: 'auto',\n    },\n    playerCell: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    clickLink: {\n        cursor: 'pointer',\n    },\n});\n\nclass ScoresTable extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        handleClickOpen: PropTypes.func.isRequired,\n        data: PropTypes.array.isRequired,\n    };\n\n    state = {\n        order: 'asc',\n        orderBy: 'score',\n        page: 0,\n        rowsPerPage: 50,\n    };\n\n    handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    };\n\n    handleChangePage = (_, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = (ev) => {\n        this.setState({ rowsPerPage: ev.target.value });\n    };\n\n    render() {\n        const { classes, data, handleClickOpen } = this.props;\n        const { order, orderBy, rowsPerPage, page } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <Table>\n                    <ScoresTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={this.handleRequestSort}\n                        rowCount={data.length}\n                    />\n                    <TableBody>\n                        {stableSort(data, order, orderBy)\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map(item => {\n                                let profile = item.getProfile();\n                                let stats = item.getStats();\n                                return (\n                                    <TableRow hover tabIndex={-1} key={item.id}>\n                                        <TableCell align=\"center\">\n                                            {(item.rank === 1)\n                                                ? <FontAwesomeIcon title=\"Rank 1\" icon=\"medal\" color=\"#ffd700\" />\n                                                : (item.rank === 2)\n                                                    ? <FontAwesomeIcon title=\"Rank 2\" icon=\"medal\" color=\"#C0C0C0\" />\n                                                    : (item.rank === 3)\n                                                        ? <FontAwesomeIcon title=\"Rank 3\" icon=\"medal\" color=\"#cd7f32\" />\n                                                        : item.rank}\n                                        </TableCell>\n                                        <TableCell>\n                                            <div className={classes.playerCell}>\n\n                                                <Avatar src={profile && profile.avatar_link} />\n                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                                <Link className={classes.clickLink} onClick={() => handleClickOpen(item.id)} color=\"inherit\">\n                                                    {(profile && profile.profile_name) || item.id}\n                                                </Link>\n                                            </div>\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title={`${stats.percentage}% (${item.score - stats.delta}+${stats.delta})`}\n                                                disableFocusListener\n                                                disableTouchListener\n                                            >\n                                                <div>{item.score}</div>\n                                            </Tooltip>\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[10, 20, 50, 100]}\n                    component=\"div\"\n                    count={data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    labelDisplayedRows={() => ''}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ScoresTable);\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Theme from './theme';\n\nexport const withRoot = (Component) => (props) => (\n    <MuiThemeProvider theme={Theme}>\n        <CssBaseline />\n        <Component {...props} />\n    </MuiThemeProvider>\n);\n","import React from 'react';\n\nexport const AppContext = React.createContext();\n\nexport const withContext = Component => props => (\n    <AppContext.Consumer>\n        {context => <Component {...context} {...props} />}\n    </AppContext.Consumer>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport ScoresTable from '../components/scoresTable';\nimport { withContext } from '../withContext';\n\nclass ScoreboardView extends React.Component {\n    static propTypes = {\n        downloadBoard: PropTypes.func.isRequired,\n        data: PropTypes.array.isRequired,\n        boardType: PropTypes.string.isRequired,\n        dialogOpener: PropTypes.func.isRequired,\n    };\n\n    async componentDidMount() {\n        if (this.props.data.length === 0) {\n            await this.props.downloadBoard(this.props.boardType);\n        }\n    }\n\n    render() {\n        const { data, dialogOpener } = this.props;\n\n        return (\n            <>\n                <Grid container>\n                    <Grid item xs={false} md={1} lg={3} />\n                    <Grid item xs={12} md={10} lg={6}>\n                        <Paper>\n                            {data.length === 0 && <LinearProgress />}\n                            <ScoresTable data={data} handleClickOpen={dialogOpener} />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nexport default withContext(ScoreboardView);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\n\nconst Theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: teal[300],\n            main: teal[500],\n            dark: teal[700],\n        },\n        secondary: {\n            light: '#fff',\n            main: '#fff',\n            dark: '#fff',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nexport default Theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { withStyles } from '@material-ui/core';\nimport AppBar from './components/appBar';\nimport ProfileDialog from './components/profileDialog';\nimport AboutView from './views/aboutView';\nimport RecordsView from './views/recordsView';\nimport ScoreboardView from './views/scoreboardView';\nimport { withContext } from './withContext';\nimport { withRoot } from './withRoot';\n\nconst styles = theme => ({\n    views: {\n        marginTop: theme.spacing.unit * 3,\n    },\n});\n\nclass App extends React.PureComponent {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        records: PropTypes.array.isRequired,\n        cacheProfile: PropTypes.func.isRequired,\n        clearProfile: PropTypes.func.isRequired,\n    };\n\n    state = {\n        currentTab: 0,\n    };\n\n    handleTabChange = (_, currentTab) => {\n        this.setState({ currentTab });\n    };\n\n    render() {\n        const {\n            classes,\n            boards: {\n                sp,\n                coop,\n                overall,\n            },\n            records,\n            stats,\n            currentProfile,\n            cacheProfile,\n            clearProfile,\n        } = this.props;\n\n        const { currentTab } = this.state;\n\n        return (\n            <>\n                <AppBar currentTab={currentTab} onTabChange={this.handleTabChange} />\n                {records.length !== 0\n                    ? <div className={classes.views}>\n                            {currentTab === 0 && <ScoreboardView data={sp} boardType=\"sp\" dialogOpener={cacheProfile} />}\n                            {currentTab === 1 && <ScoreboardView data={coop} boardType=\"coop\" dialogOpener={cacheProfile} />}\n                            {currentTab === 2 && <ScoreboardView data={overall} boardType=\"overall\" dialogOpener={cacheProfile} />}\n                            {currentTab === 3 && <RecordsView data={records} />}\n                            {currentTab === 4 && <AboutView data={stats} />}\n                        </div>\n                    : <LinearProgress />\n                }\n                {currentProfile &&\n                    <ProfileDialog\n                        dialogOpen={currentProfile !== null}\n                        handleClose={clearProfile}\n                        data={currentProfile}\n                    />\n                }\n            </>\n        );\n    }\n}\n\nexport default withRoot(withContext(withStyles(styles)(App)));\n","class Client {\n    constructor() {\n        this.baseApi = 'https://raw.githubusercontent.com/NeKzor/lp/api';\n    }\n    async get(route) {\n        console.log(`Fetching ${route}`);\n        return await fetch(this.baseApi + route + '.json');\n    }\n    async getProfiles() {\n        let res = await this.get('/profiles');\n        return await res.json();\n    }\n    async getRecords() {\n        let res = await this.get('/wrs');\n        return await res.json();\n    }\n    async getStats() {\n        let res = await this.get('/stats');\n        return await res.json();\n    }\n    async getBoard(board) {\n        if (board !== 'sp' && board !== 'coop' && board !== 'overall')\n            throw new Error('Invalid board!');\n        let res = await this.get(`/boards/${board}`);\n        return await res.json();\n    }\n    async getPlayer(id) {\n        let res = await this.get(`/players/${id}`);\n        return await res.json();\n    }\n}\n\nexport default Client;\n","import React from 'react';\nimport { AppContext } from './withContext';\nimport Client from './client.js';\n\nclass ContextProvider extends React.Component {\n    state = {\n        profiles: [],\n        records: [],\n        stats: [],\n        currentProfile: null,\n        boards: {\n            sp: [],\n            coop: [],\n            overall: [],\n        },\n        calcWrDelta: (entry) => Math.abs(this.state.findRecord(entry.id).wr - entry.score),\n        findRecord: (id) => this.state.records.find(r => r.id === id),\n        findProfile: (id) => this.state.profiles.find(p => p.id === id),\n        cacheProfile: (id) => this.cacheProfile(id),\n        clearProfile: () => this.setState({ currentProfile: null }),\n        downloadBoard: async (type) => await this.downloadBoard(type),\n    };\n\n    constructor() {\n        super();\n        this.api = new Client();\n        this.perfectScores = {\n            sp: 0,\n            coop: 0,\n            overall: 0,\n        };\n        this.playerCache = {};\n    }\n\n    async componentDidMount() {\n        // Boards depend on profiles (name, avatar) and on records (perfect score)\n        let profiles = await this.api.getProfiles();\n        let records = await this.api.getRecords();\n\n        // Records and About pages depend on stats (ties, number of cheaters, last update)\n        let stats = await this.api.getStats();\n\n        // Set ties to records page and calculate perfect score for each board\n        this.initRecords(stats.tied_records, records);\n\n        this.setState({ records, stats, profiles });\n    }\n\n    initRecords(ties, records) {\n        for (let record of records) {\n            record.ties = ties[record.id];\n            if (!record.excluded) {\n                if (record.mode === 1) {\n                    this.perfectScores.sp += record.wr;\n                } else if (record.mode === 2) {\n                    this.perfectScores.coop += record.wr;\n                }\n                this.perfectScores.overall += record.wr;\n            } else {\n                record.ties = 0;\n            }\n        }\n    }\n\n    async downloadBoard(type) {\n        let that = this;\n\n        let board = await this.api.getBoard(type);\n        for (let item of board) {\n            item.getProfile = function () {\n                if (this._profile === undefined) {\n                    this._profile = that.state.profiles.find(p => p.id === this.id);\n                }\n                return this._profile;\n            };\n            if (type === 'sp') {\n                item.getStats = function () {\n                    if (this._stats === undefined) {\n                        this._stats = {\n                            delta: Math.abs(this.score - that.perfectScores.sp),\n                            percentage: Math.round(that.perfectScores.sp / this.score * 100)\n                        };\n                    }\n                    return this._stats;\n                };\n            } else if (type === 'coop') {\n                item.getStats = function () {\n                    if (this._stats === undefined) {\n                        this._stats = {\n                            delta: Math.abs(this.score - that.perfectScores.coop),\n                            percentage: Math.round(that.perfectScores.coop / this.score * 100)\n                        };\n                    }\n                    return this._stats;\n                };\n            } else if (type === 'overall') {\n                item.getStats = function () {\n                    if (this._stats === undefined) {\n                        this._stats = {\n                            delta: Math.abs(this.score - that.perfectScores.overall),\n                            percentage: Math.round(that.perfectScores.overall / this.score * 100)\n                        };\n                    }\n                    return this._stats;\n                };\n            } else {\n                throw new Error('Invalid board type!');\n            }\n        }\n\n        this.setState((prevState) => ({\n            boards: {\n                ...prevState.boards,\n                [type]: board\n            }\n        }), () => console.log('Updated state:', this.state));\n    }\n\n    async cacheProfile(profileId) {\n        let currentProfile = this.playerCache[profileId];\n        if (currentProfile === undefined) {\n            let profile = this.state.findProfile(profileId);\n            currentProfile = {\n                id: profileId,\n                name: profile.profile_name,\n                avatar: profile.avatar_link,\n                sp: 0,\n                coop: 0,\n                overall: 0,\n                entries: []\n            };\n\n            this.setState({ currentProfile });\n\n            let { entries, sp_score, coop_score, overall_score } = await this.api.getPlayer(profileId);\n\n            let records = [];\n            for (let entry of entries) {\n                records.push({\n                    id: entry.id,\n                    name: this.state.findRecord(entry.id).name,\n                    score: entry.score,\n                    wrDelta: this.state.calcWrDelta(entry)\n                });\n            }\n\n            currentProfile = {\n                ...currentProfile,\n                sp: {\n                    score: sp_score,\n                    delta: Math.abs(sp_score - this.perfectScores.sp),\n                    percentage: (sp_score !== 0) ? Math.round(this.perfectScores.sp / sp_score * 100) : 0,\n                },\n                coop: {\n                    score: coop_score,\n                    delta: Math.abs(coop_score - this.perfectScores.coop),\n                    percentage: (coop_score !== 0) ? Math.round(this.perfectScores.coop / coop_score * 100) : 0,\n                },\n                overall: {\n                    score: overall_score,\n                    delta: Math.abs(overall_score - this.perfectScores.overall),\n                    percentage: (sp_score !== 0 && coop_score !== 0) ? Math.round(this.perfectScores.overall / overall_score * 100) : 0,\n                },\n                entries: records,\n            };\n\n            this.setState({ currentProfile });\n\n            this.playerCache = {\n                ...this.playerCache,\n                [profileId]: currentProfile\n            };\n        } else {\n            console.log(`From cache: ${profileId}`);\n            this.setState({ currentProfile });\n        }\n    }\n\n    render() {\n        return (\n            <AppContext.Provider value={this.state}>\n                {this.props.children}\n            </AppContext.Provider>\n        );\n    }\n}\n\nexport default ContextProvider;\n","/* eslint-disable */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ',\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport ContextProvider from './contextProvider';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst app = (\n    <ContextProvider>\n        <App />\n    </ContextProvider>\n);\n\nReactDOM.render(app, document.querySelector('#root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}