{"version":3,"sources":["components/Tabs.js","components/AppBar.js","AppState.js","Hooks.js","views/AboutView.js","utils/stableSort.js","components/Showcase.js","components/RecordsTable.js","components/RecordChart.js","views/RecordsView.js","components/ProfileTable.js","components/RecordDeltaChart.js","components/ProfileDialog.js","components/ScoresTable.js","Api.js","views/ScoreboardView.js","views/NotFoundView.js","App.js","utils/registerServiceWorker.js","index.js"],"names":["SiteTabs","_ref","currentTab","react_default","a","createElement","Fragment","Tabs","value","variant","textColor","color","indicatorColor","Tab","label","component","Link","to","useStyles","makeStyles","theme","root","paddingBottom","spacing","list","width","menuButton","marginLeft","marginRight","pageLinks","text","link","gotoPage","page","window","open","AppBarWithDrawer","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setOpen","showDrawer","state","classes","className","List","ListItem","button","key","onClick","ListItemText","primary","Divider","map","item","index","concat","AppBar","position","Toolbar","IconButton","Menu_default","Typography","components_Tabs","SwipeableDrawer","onClose","onOpen","tabIndex","role","onKeyDown","inititalState","records","cheaters","darkMode","DarkMode","classCallCheck","this","enabled","localStorage","getItem","setItem","toString","AppReducer","action","data","console","log","expose","objectSpread","maps","toggle","Error","createContext","useIsMounted","ref","useRef","useEffect","current","help","cursor","aboutBox","padding","branches","noWrap","whiteSpace","MinTableCell","props","TableCell","assign","size","Padding","style","paddingTop","AboutView","isMounted","_React$useContext","useContext","AppState","_React$useContext$sta","dispatch","gitHub","setGitHub","anyErrors","err","error","undefined","Promise","all","branch","fetch","then","results","res","json","sha","author","message","commit","date","catch","detectedCheaters","Tooltip","placement","title","disableFocusListener","disableTouchListener","length","Grid","container","xs","md","lg","Paper","AboutView_Padding","CircularProgress","progress","overflowX","Table","TableHead","TableRow","TableBody","idx","AboutView_MinTableCell","align","rel","href","moment","from","html_url","login","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","stableSort","array","order","orderBy","desc","b","cmp","el","sort","card","margin","media","height","Showcase","id","avatar","Avatar","alt","player","name","src","Card","CardHeader","subheader","opener","enterDelay","CardMedia","image","split","rows","numeric","sortable","RecordsTableHead","onRequestSort","disablePadding","sortDirection","TableSortLabel","active","direction","property","event","helpLink","showcase","backgroundColor","palette","type","grey","RecordsTable","_ref2","rowsPerPage","setState","_React$useState3","_React$useState4","curRecord","setCurRecord","ExcludedMapsInfo","RecordsTable_RecordsTableHead","_","rowCount","record","hover","target","wr","excluded","ties","colSpan","border","Collapse","in","timeout","unmountOnExit","showcases","Hidden","smDown","components_Showcase","chartOptions","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","stroke","show","colors","yaxis","max","fill","opacity","tooltip","y","formatter","val","RecordChart","mode","sorted","filter","m","series","useTheme","options","xaxis","categories","labels","offsetY","fontSize","chart","background","common","white","react_apexcharts_min_default","searchBox","marginBottom","RecordsView","searchTerm","setSearchTerm","components_RecordChart","Input","placeholder","ev","disableUnderline","components_RecordsTable","x","toUpperCase","startsWith","parseInt","filterRecords","ProfileTableHead","ProfileTable","UnknownScoreInfo","ProfileTable_ProfileTableHead","score","delta","_id","RecordDeltaChart","Math","apply","toConsumableArray","tickAmount","stats","flex","paper","textAlign","Transition","forwardRef","Slide","ProfileStat","oldScore","percentage","gutterBottom","ProfileDialog","profile","handleClickClose","Dialog","fullScreen","TransitionComponent","Button","country","react_world_flags_default","code","top","Skeleton","Close_default","entries","ProfileDialog_ProfileStat","components_ProfileTable","components_RecordDeltaChart","LinearProgress","fa","add","faMedal","ScoresTableHead","playerCell","display","alignItems","clickLink","ScoresTable","handleClickOpen","ScoresTable_ScoresTableHead","rank","react_fontawesome_index_es","icon","scoreOld","src_Api","Api","baseApi","route","status","request","ok","board","ScoreboardView","boardType","profileId","setBoard","setProfile","_React$useState5","_React$useState6","dialogOpen","setDialogOpen","prepareProfile","_profile$entries","forEach","entry","find","abs","sc","player2","missing","push","getProfile","getBoard","components_ScoresTable","components_ProfileDialog","NotFoundView","views","marginTop","App","_React$useReducer","useReducer","_React$useReducer2","getRecords","useMemo","createMuiTheme","light","teal","main","dark","secondary","red","A400","typography","useNextVariants","context","tabs","ThemeProvider","CssBaseline","Provider","react_router_dom","basename","react_router","path","render","pathname","location","components_AppBar","findIndex","exact","views_ScoreboardView","params","match","Boolean","hostname","ReactDOM","src_App","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b130a7e1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nconst SiteTabs = ({ currentTab }) => {\n    return (\n        <>\n            <Tabs\n                value={currentTab !== -1 ? currentTab : 0}\n                variant=\"scrollable\"\n                textColor=\"inherit\"\n                color=\"inherit\"\n                indicatorColor=\"secondary\"\n            >\n                <Tab label=\"Single Player\" component={Link} to=\"/single-player\" />\n                <Tab label=\"Cooperative\" component={Link} to=\"/cooperative\" />\n                <Tab label=\"Overall\" component={Link} to=\"/overall\" />\n                <Tab label=\"Records\" component={Link} to=\"/records\" />\n                <Tab label=\"About\" component={Link} to=\"/about\" />\n            </Tabs>\n        </>\n    );\n};\n\nexport default SiteTabs;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SiteTabs from './Tabs';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: theme.spacing(14),\n    },\n    list: {\n        width: theme.spacing(25),\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n}));\n\nconst pageLinks = [\n    { text: 'Glitches', link: 'glitches.html' },\n    { text: 'Least Portals', link: 'lp' },\n    { text: 'Demo Parser', link: 'parser.html' },\n    { text: 'Cvars', link: 'cvars' },\n];\nconst homepage = 'https://nekzor.github.io/';\n\nconst gotoPage = (page) => () => {\n    window.open(homepage + page, '_self');\n};\n\nconst AppBarWithDrawer = ({ currentTab }) => {\n    const [open, setOpen] = React.useState(false);\n\n    const showDrawer = (state) => () => {\n        setOpen(state);\n    };\n\n    const classes = useStyles();\n\n    const list = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key={0} onClick={gotoPage('index.html')}>\n                    <ListItemText primary={'nekzor.github.io'} />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {pageLinks.map((item, index) => (\n                    <ListItem button key={index} onClick={gotoPage(`${item.link}`)}>\n                        <ListItemText primary={item.text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton onClick={showDrawer(true)} className={classes.menuButton} color=\"inherit\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        Least Portals\n                    </Typography>\n                </Toolbar>\n                <SiteTabs currentTab={currentTab} />\n            </AppBar>\n            <SwipeableDrawer open={open} onClose={showDrawer(false)} onOpen={showDrawer(true)}>\n                <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\n                    {list}\n                </div>\n            </SwipeableDrawer>\n        </div>\n    );\n};\n\nexport default AppBarWithDrawer;\n","import React from 'react';\n\nclass DarkMode {\n    constructor() {\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\n    }\n    toggle() {\n        this.enabled = !this.enabled;\n        localStorage.setItem('dark_mode', this.enabled.toString());\n        return this;\n    }\n}\n\nconst inititalState = {\n    records: [],\n    cheaters: [],\n    darkMode: new DarkMode(),\n};\n\nexport const AppReducer = [\n    (state, { action, data }) => {\n        console.log('[DISPATCH] ' + action);\n        switch (action) {\n            case 'setRecords':\n                window.expose = () => data.cheaters;\n                return {\n                    ...state,\n                    records: data.maps || [],\n                    cheaters: data.cheaters || [],\n                };\n            case 'toggleDarkMode':\n                return {\n                    ...state,\n                    darkMode: state.darkMode.toggle(),\n                };\n            default:\n                throw new Error('Unknown action type.');\n        }\n    },\n    inititalState,\n];\n\nexport default React.createContext(inititalState);\n","import React from 'react';\n\nexport const useIsMounted = () => {\n    const ref = React.useRef(false);\n    React.useEffect(() => {\n        ref.current = true;\n        return () => (ref.current = false);\n    }, []);\n    return ref;\n};\n\nexport const useRenders = (debug) => {\n    const ref = React.useRef(0);\n    console.log(debug + ' renders: ', ++ref.current);\n};\n\nexport const useTitle = (title) => {\n    React.useEffect(() => {\n        document.title = title + ' - ' + document.location.host;\n    }, [title]);\n};\n","import React from 'react';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    help: {\n        cursor: 'help',\n    },\n    aboutBox: {\n        padding: theme.spacing(3),\n    },\n}));\n\nconst branches = ['master', 'api', 'gh-pages'];\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />;\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\n\nconst AboutView = () => {\n    const isMounted = useIsMounted();\n\n    const {\n        state: { cheaters, darkMode },\n        dispatch,\n    } = React.useContext(AppState);\n\n    const [gitHub, setGitHub] = React.useState([]);\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        const anyErrors = (err) => {\n            console.error(err);\n            if (isMounted.current) {\n                setGitHub(undefined);\n            }\n        };\n\n        Promise.all(branches.map((branch) => fetch('https://api.github.com/repos/NeKzor/lp/commits/' + branch)))\n            .then((results) => {\n                Promise.all(results.map((res) => res.json()))\n                    .then((branches) => {\n                        if (isMounted.current) {\n                            setGitHub(\n                                branches.map((branch) => ({\n                                    sha: branch.sha,\n                                    author: branch.author,\n                                    message: branch.commit.message,\n                                    date: branch.commit.author.date,\n                                })),\n                            );\n                        }\n                    })\n                    .catch(anyErrors);\n            })\n            .catch(anyErrors);\n    }, [isMounted]);\n\n    const toggleDarkMode = () => {\n        dispatch({ action: 'toggleDarkMode' });\n    };\n\n    const detectedCheaters = (\n        <Tooltip\n            placement=\"right\"\n            title=\"Automatic ban system catches users who cheated at least once.\"\n            disableFocusListener\n            disableTouchListener\n        >\n            <Link className={classes.help}>{cheaters.length}</Link>\n        </Tooltip>\n    );\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={false} md={1} lg={3} />\n                <Grid item xs={12} md={10} lg={6}>\n                    <Paper className={classes.aboutBox}>\n                        <Typography component=\"h2\" variant=\"h3\">\n                            Who's the lp king?\n                        </Typography>\n                        <br />\n                        <Typography variant=\"body1\">\n                            This leaderboard includes all legit players who care about least portal records in Portal 2.\n                        </Typography>\n\n                        <Padding />\n\n                        <Typography component=\"h2\" variant=\"h5\">\n                            Ranking Requirements\n                        </Typography>\n                        <br />\n                        <Typography variant=\"body1\">- Be in top 5000 on every single player or cooperative leaderboard.</Typography>\n                        <Typography variant=\"body1\">- Tie as many records as possible or get at least very close to it.</Typography>\n                        <Typography variant=\"body1\">- Don't be one of the {detectedCheaters} cheaters.</Typography>\n\n                        <Padding />\n\n                        <Typography variant=\"h5\">Last Update</Typography>\n                        <br />\n                        {gitHub === undefined ? (\n                            <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\n                        ) : gitHub.length === 0 ? (\n                            <CircularProgress className={classes.progress} />\n                        ) : (\n                            <div style={{ overflowX: 'auto' }}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Branch</Typography>\n                                            </TableCell>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Date</Typography>\n                                            </TableCell>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Author</Typography>\n                                            </TableCell>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Commit</Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {gitHub.map((commit, idx) => {\n                                            const branch = branches[idx];\n                                            return (\n                                                <TableRow tabIndex={-1} key={idx} style={noWrap}>\n                                                    <MinTableCell align=\"left\">\n                                                        <Link\n                                                            color=\"inherit\"\n                                                            rel=\"noopener\"\n                                                            href={'https://github.com/NeKzor/lp/tree/' + branch}\n                                                        >\n                                                            {branch}\n                                                        </Link>\n                                                    </MinTableCell>\n                                                    <MinTableCell align=\"left\" style={noWrap}>\n                                                        <Tooltip title={moment(commit.date).toString()}>\n                                                            <span>{moment(commit.date).from()}</span>\n                                                        </Tooltip>\n                                                    </MinTableCell>\n                                                    <MinTableCell align=\"left\">\n                                                        {commit.author ? (\n                                                            <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\n                                                                {commit.author.login}\n                                                            </Link>\n                                                        ) : (\n                                                            'n/a'\n                                                        )}\n                                                    </MinTableCell>\n                                                    <MinTableCell align=\"left\" style={noWrap}>\n                                                        <Tooltip title={commit.message}>\n                                                            <Link\n                                                                color=\"inherit\"\n                                                                rel=\"noopener\"\n                                                                href={'https://github.com/NeKzor/lp/commit/' + commit.sha}\n                                                            >\n                                                                {commit.sha}\n                                                            </Link>\n                                                        </Tooltip>\n                                                    </MinTableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        )}\n\n                        <Padding />\n\n                        <Typography variant=\"h5\">Theme Settings</Typography>\n                        <br />\n                        <FormGroup row>\n                            <FormControlLabel\n                                control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\n                                label=\"Dark Mode\"\n                            />\n                        </FormGroup>\n\n                        <Padding />\n\n                        <Tooltip title=\"Source Code\">\n                            <Link rel=\"noopener\" href=\"https://github.com/NeKzor/lp\">\n                                github.com/NeKzor/lp\n                            </Link>\n                        </Tooltip>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default AboutView;\n","const stableSort = (array, order, orderBy) => {\n    let desc = (a, b) => {\n        if (b[orderBy] < a[orderBy]) return -1;\n        if (b[orderBy] > a[orderBy]) return 1;\n        return 0;\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\n\nexport default stableSort;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(2),\n    },\n    media: {\n        height: 190,\n    },\n}));\n\nconst watch = (id) => () => {\n    let tab = window.open(`https://youtu.be/${id}`, '_blank');\n    tab.opener = null;\n};\n\nconst Showcase = ({ data }) => {\n    const classes = useStyles();\n\n    const avatar = (\n        <Avatar alt={data.player.name} src={data.player.avatar}>\n            {!data.player.avatar ? data.player.name[0] : undefined}\n        </Avatar>\n    );\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader avatar={avatar} title={data.player.name} subheader={data.date} />\n            <Tooltip\n                title=\"Watch on YouTube\"\n                onClick={watch(data.media)}\n                style={{ cursor: 'pointer' }}\n                placement=\"top\"\n                enterDelay={1000}\n                disableFocusListener\n                disableTouchListener\n            >\n                <CardMedia className={classes.media} image={`https://i.ytimg.com/vi/${data.media.split('?')[0]}/sddefault.jpg`} />\n            </Tooltip>\n        </Card>\n    );\n};\n\nexport default Showcase;\n","import React from 'react';\nimport Collapse from '@material-ui/core/Collapse';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport stableSort from '../utils/stableSort';\nimport Showcase from './Showcase';\n\nconst rows = [\n    { id: 'index', numeric: false, sortable: true, label: 'Map' },\n    { id: 'wr', numeric: true, sortable: true, label: 'Portals' },\n    { id: 'ties', numeric: true, sortable: true, label: 'Ties' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map(\n                    (row) => (\n                        <TableCell\n                            key={row.id}\n                            align={row.numeric ? 'center' : 'left'}\n                            padding={row.disablePadding ? 'none' : 'default'}\n                            sortDirection={orderBy === row.id ? order : false}\n                        >\n                            {row.sortable === true && (\n                                <Tooltip title=\"Sort\" placement={row.numeric ? 'bottom-end' : 'bottom-start'} enterDelay={300}>\n                                    <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                        {row.label}\n                                    </TableSortLabel>\n                                </Tooltip>\n                            )}\n                            {row.sortable === false && row.label}\n                        </TableCell>\n                    ),\n                    this,\n                )}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        overflowX: 'auto',\n    },\n    helpLink: {\n        cursor: 'help',\n    },\n    showcase: {\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.grey['A400'] : theme.palette.grey['50'],\n        paddingBottom: 0,\n        paddingTop: 0,\n    },\n}));\n\nconst RecordsTable = ({ data }) => {\n    const [state, setState] = React.useState({\n        order: 'asc',\n        orderBy: 'index',\n        page: 0,\n        rowsPerPage: 100,\n    });\n    const [curRecord, setCurRecord] = React.useState(0);\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (state.orderBy === property && state.order === 'desc') {\n            order = 'asc';\n        }\n\n        setState({ order, orderBy });\n    };\n\n    const classes = useStyles();\n\n    const ExcludedMapsInfo = () => (\n        <Tooltip placement=\"right\" title=\"Disabled tracking records for this map.\" disableFocusListener disableTouchListener>\n            <Link className={classes.helpLink}>n/a</Link>\n        </Tooltip>\n    );\n\n    const handleRowClick = (id) => () => {\n        setCurRecord(curRecord !== id ? id : 0);\n    };\n\n    const { order, orderBy } = state;\n\n    return (\n        <div className={classes.root}>\n            <Table>\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.length} />\n                <TableBody>\n                    {stableSort(data, order, orderBy).map((record) => {\n                        return (\n                            <React.Fragment key={record.id}>\n                                <TableRow hover tabIndex={-1} onClick={handleRowClick(record.id)} style={{ cursor: 'pointer' }}>\n                                    <TableCell size=\"small\">\n                                        <Link\n                                            target=\"_blank\"\n                                            rel=\"noopener\"\n                                            color=\"inherit\"\n                                            href={`https://steamcommunity.com/stats/Portal2/leaderboards/${record.id}`}\n                                        >\n                                            {record.name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell size=\"small\" align=\"center\">\n                                        {record.wr}\n                                    </TableCell>\n                                    <TableCell size=\"small\" align=\"center\">\n                                        {record.excluded === true ? <ExcludedMapsInfo /> : record.ties}\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell\n                                        size=\"small\"\n                                        className={classes.showcase}\n                                        colSpan={3}\n                                        style={{ border: record.id !== curRecord ? 0 : undefined }}\n                                    >\n                                        <Collapse in={record.id === curRecord} timeout=\"auto\" unmountOnExit>\n                                            <Grid container>\n                                                {record.showcases.length === 1 && (\n                                                    <>\n                                                        <Hidden smDown>\n                                                            <Grid item md={2} lg={2} />\n                                                        </Hidden>\n                                                        <Grid item xs={12} md={8} lg={8}>\n                                                            <Showcase data={record.showcases[0]} />\n                                                        </Grid>\n                                                    </>\n                                                )}\n                                                {record.showcases.length > 1 &&\n                                                    record.showcases.map((showcase, idx) => (\n                                                        <Grid key={idx} item xs={12} md={6} lg={6}>\n                                                            <Showcase data={showcase} />\n                                                        </Grid>\n                                                    ))}\n                                            </Grid>\n                                        </Collapse>\n                                    </TableCell>\n                                </TableRow>\n                            </React.Fragment>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport ReactApexCharts from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\n\nconst chartOptions = {\n    plotOptions: {\n        bar: {\n            horizontal: false,\n            columnWidth: '100%',\n            endingShape: 'rounded',\n        },\n    },\n    dataLabels: {\n        enabled: false,\n    },\n    stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent'],\n    },\n    yaxis: {\n        title: {\n            text: 'Portals',\n        },\n        max: 12,\n    },\n    fill: {\n        opacity: 1,\n    },\n    tooltip: {\n        y: {\n            formatter: function(val) {\n                return val + ' portal' + (val === 1 ? '' : 's');\n            },\n        },\n    },\n};\n\nconst RecordChart = ({ data, mode, title, color }) => {\n    const sorted = data.filter((m) => m.mode === mode).sort((a, b) => a.index - b.index);\n\n    const series = [\n        {\n            name: 'World Record',\n            data: sorted.map((m) => m.wr),\n        },\n    ];\n\n    const theme = useTheme();\n\n    const options = {\n        ...chartOptions,\n        xaxis: {\n            categories: sorted.map((m) => m.name),\n            labels: {\n                show: false,\n            },\n        },\n        title: {\n            text: title,\n            align: 'center',\n            offsetY: 10,\n            style: {\n                fontSize: 24,\n            },\n        },\n        colors: [color],\n        chart: {\n            background: theme.palette.type === 'dark' ? theme.palette.grey['800'] : theme.palette.common.white,\n        },\n        theme: {\n            mode: theme.palette.type,\n        },\n    };\n\n    return <ReactApexCharts options={options} series={series} type=\"bar\" height=\"350\" />;\n};\n\nexport default RecordChart;\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordsTable from '../components/RecordsTable';\nimport RecordChart from '../components/RecordChart';\nimport AppState from '../AppState';\n\nconst useStyles = makeStyles((theme) => ({\n    searchBox: {\n        padding: 10,\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nconst RecordsView = () => {\n    const {\n        state: { records },\n    } = React.useContext(AppState);\n\n    const [searchTerm, setSearchTerm] = React.useState('');\n\n    const filterRecords = (records) => {\n        return records.filter((x) => {\n            return searchTerm.length === 0 || x.name.toUpperCase().startsWith(searchTerm.toUpperCase()) || x.wr === parseInt(searchTerm);\n        });\n    };\n\n    const handleInputChange = (ev) => {\n        setSearchTerm(ev.target.value);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={false} md={1} lg={3} />\n                <Grid item xs={12} md={10} lg={6}>\n                    <Paper style={{ paddingTop: '5px', marginBottom: '24px' }}>\n                        <RecordChart data={records} mode={1} title=\"Single Player\" color=\"#2E93fA\" />\n                    </Paper>\n                    <Paper style={{ paddingTop: '5px', marginBottom: '24px' }}>\n                        <RecordChart data={records} mode={2} title=\"Cooperative\" color=\"#FF9800\" />\n                    </Paper>\n                    <Paper className={classes.searchBox}>\n                        <FormGroup>\n                            <Input placeholder=\"Search\" onChange={handleInputChange} disableUnderline={true} />\n                        </FormGroup>\n                    </Paper>\n                    <Paper style={{ marginBottom: '50px' }}>\n                        <RecordsTable data={filterRecords(records)} />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default RecordsView;\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nconst rows = [\n    { id: 'index', numeric: false, sortable: true, label: 'Map' },\n    { id: 'score', numeric: true, sortable: true, label: 'Portals' },\n    { id: 'delta', numeric: true, sortable: true, label: 'ΔWR' },\n];\n\nconst ProfileTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map(\n                    (row) => (\n                        <TableCell\n                            key={row.id}\n                            align={row.numeric ? 'center' : 'center'}\n                            padding={row.disablePadding ? 'none' : 'default'}\n                            sortDirection={orderBy === row.id ? order : false}\n                        >\n                            {row.sortable === true && (\n                                <Tooltip title=\"Sort\" placement={row.numeric ? 'bottom-end' : 'bottom-start'} enterDelay={300}>\n                                    <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                        {row.label}\n                                    </TableSortLabel>\n                                </Tooltip>\n                            )}\n                            {row.sortable === false && row.label}\n                        </TableCell>\n                    ),\n                    this,\n                )}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst ProfileTable = ({ data }) => {\n    const [state, setState] = React.useState({\n        order: 'asc',\n        orderBy: 'index',\n    });\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (state.orderBy === property && state.order === 'desc') {\n            order = 'asc';\n        }\n\n        setState({ order, orderBy });\n    };\n\n    const classes = useStyles();\n    const { order, orderBy } = state;\n\n    const UnknownScoreInfo = () => (\n        <Tooltip placement=\"right\" title=\"Unknown score.\" disableFocusListener disableTouchListener>\n            <Link style={{ cursor: 'help' }}>n/a</Link>\n        </Tooltip>\n    );\n\n    return (\n        <div className={classes.root}>\n            <Table>\n                <ProfileTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.length} />\n                <TableBody>\n                    {stableSort(data, order, orderBy).map((record) => {\n                        let score =\n                            record.score !== undefined ? (\n                                record.showcase ? (\n                                    <Tooltip placement=\"right\" title=\"Watch on YouTube\" disableFocusListener disableTouchListener>\n                                        <Link target=\"_blank\" rel=\"noopener\" href={`https://youtu.be/${record.showcase.media}`}>\n                                            <b>{record.score}</b>\n                                        </Link>\n                                    </Tooltip>\n                                ) : (\n                                    record.score\n                                )\n                            ) : (\n                                <UnknownScoreInfo />\n                            );\n                        let delta = record.score !== undefined ? record.delta === 0 ? '' : `+${record.delta}` : <UnknownScoreInfo />;\n\n                        return (\n                            <TableRow hover tabIndex={-1} key={record._id}>\n                                <TableCell size=\"small\" align=\"center\">\n                                    <Link\n                                        target=\"_blank\"\n                                        rel=\"noopener\"\n                                        color=\"inherit\"\n                                        href={`https://steamcommunity.com/stats/Portal2/leaderboards/${record._id}`}\n                                    >\n                                        {record.name}\n                                    </Link>\n                                </TableCell>\n                                <TableCell size=\"small\" align=\"center\">\n                                    {score}\n                                </TableCell>\n                                <TableCell size=\"small\" align=\"center\">\n                                    {delta}\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default ProfileTable;\n","import React from 'react';\nimport ReactApexCharts from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\n\nconst chartOptions = {\n    plotOptions: {\n        bar: {\n            horizontal: false,\n            columnWidth: '100%',\n            endingShape: 'rounded',\n        },\n    },\n    dataLabels: {\n        enabled: false,\n    },\n    stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent'],\n    },\n    yaxis: {\n        title: {\n            text: 'Portals',\n        },\n    },\n    fill: {\n        opacity: 1,\n    },\n    tooltip: {\n        y: {\n            formatter: function(val) {\n                return val + ' portal' + (val === 1 ? '' : 's');\n            },\n        },\n    },\n};\n\nconst RecordDeltaChart = ({ data, mode, title, color }) => {\n    const sorted = data.filter((m) => m.mode === mode).sort((a, b) => a.index - b.index);\n    const max = Math.max(1, ...sorted.map((m) => m.score));\n\n    const series = [\n        {\n            name: 'WR Delta',\n            data: sorted.map((m) => m.delta),\n        },\n    ];\n\n    const theme = useTheme();\n\n    const options = {\n        ...chartOptions,\n        xaxis: {\n            categories: sorted.map((m) => m.name),\n            labels: {\n                show: false,\n            },\n        },\n        yaxis: {\n            ...chartOptions.yaxis,\n            max: max + (max % 2),\n            tickAmount: (max + (max % 2)) / 2,\n        },\n        title: {\n            text: title,\n            align: 'center',\n            offsetY: 10,\n            style: {\n                fontSize: 24,\n            },\n        },\n        colors: [color],\n        chart: {\n            background: theme.palette.type === 'dark' ? theme.palette.grey['800'] : theme.palette.common.white,\n        },\n        theme: {\n            mode: theme.palette.type,\n        },\n    };\n\n    return <ReactApexCharts options={options} series={series} type=\"bar\" height=\"350\" />;\n};\n\nexport default RecordDeltaChart;\n","import React from 'react';\nimport Flag from 'react-world-flags';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport ProfileTable from './ProfileTable';\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordDeltaChart from './RecordDeltaChart';\n\nconst useStyles = makeStyles((theme) => ({\n    stats: {\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        background: theme.palette.type === 'dark' ? theme.palette.grey['A400'] : theme.palette.grey['50'],\n    },\n    records: {\n        paddingTop: theme.spacing(3),\n        background: theme.palette.type === 'dark' ? theme.palette.grey['A400'] : theme.palette.grey['50'],\n    },\n    flex: {\n        flex: 1,\n    },\n    paper: {\n        padding: theme.spacing(5),\n        textAlign: 'center',\n    },\n}));\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Slide direction=\"up\" {...props} ref={ref} />;\n});\n\nconst gotoSteamProfile = (id) => {\n    let tab = window.open(`https://steamcommunity.com/profiles/${id}`, '_blank');\n    tab.opener = null;\n};\n\nconst ProfileStat = ({ title, type, data }) => {\n    const score = data[type];\n    const oldScore = data[type + 'Old'];\n    const delta = data.stats[type].delta;\n    const percentage = data.stats[type].percentage;\n    return (\n        <>\n            <Tooltip\n                placement=\"top\"\n                title={score === 0 ? '' :\n                    <div>\n                        {`${score - delta}+${delta}`}\n                        {score !== oldScore && (\n                            <>\n                                <br />\n                                {oldScore + ' 🠊 ' + score}\n                            </>\n                        )}\n                    </div>\n                }\n                disableFocusListener\n                disableTouchListener\n            >\n                <Typography variant=\"h3\" gutterBottom>\n                    {percentage !== 0 ? percentage : 0}%\n                </Typography>\n            </Tooltip>\n            <Typography variant=\"subtitle1\" gutterBottom>\n                {title}\n            </Typography>\n        </>\n    );\n};\n\nconst ProfileDialog = ({ active, profile, handleClickClose }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Dialog fullScreen open={active} onClose={handleClickClose} TransitionComponent={Transition}>\n                <AppBar position=\"sticky\">\n                    <Toolbar>\n                        <Tooltip placement=\"bottom\" title=\"Open Steam profile\" disableFocusListener disableTouchListener>\n                            {profile ? (\n                                <>\n                                    <Button color=\"inherit\" onClick={() => gotoSteamProfile(profile._id)}>\n                                        <Avatar src={profile.avatar} />\n                                    </Button>\n                                    <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                                        &nbsp;&nbsp;&nbsp;{profile.name}\n                                        {profile.country && (\n                                            <>\n                                                &nbsp;&nbsp;&nbsp;\n                                                <Flag\n                                                    code={profile.country}\n                                                    style={{ position: 'relative', top: '2px' }}\n                                                    height=\"15\"\n                                                    alt={profile.country}\n                                                />\n                                            </>\n                                        )}\n                                    </Typography>\n                                </>\n                            ) : (\n                                <>\n                                    <Skeleton variant=\"circle\" width={40} height={40} />\n                                    <Skeleton style={{ marginLeft: '10px' }} variant=\"text\" width={200} />\n                                    <Typography className={classes.flex} />\n                                </>\n                            )}\n                        </Tooltip>\n                        <Tooltip placement=\"bottom\" title=\"Close profile\" disableFocusListener disableTouchListener>\n                            <IconButton color=\"inherit\" onClick={handleClickClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                </AppBar>\n                {profile ? (\n                    <>\n                        <Grid container className={classes.stats}>\n                            <Grid item xs={false} md={1} lg={3} />\n                            <Grid item xs={12} md={10} lg={6}>\n                                {profile.entries.length !== 0 && (\n                                    <Grid container spacing={10}>\n                                        <Grid item xs={12} md={4} lg={4}>\n                                            <Paper className={classes.paper}>\n                                                <ProfileStat title=\"Single Player\" type=\"sp\" data={profile} />\n                                            </Paper>\n                                        </Grid>\n                                        <Grid item xs={12} md={4} lg={4}>\n                                            <Paper className={classes.paper}>\n                                                <ProfileStat title=\"Cooperative\" type=\"mp\" data={profile} />\n                                            </Paper>\n                                        </Grid>\n                                        <Grid item xs={12} md={4} lg={4}>\n                                            <Paper className={classes.paper}>\n                                                <ProfileStat title=\"Overall\" type=\"overall\" data={profile} />\n                                            </Paper>\n                                        </Grid>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>\n                        <Grid container className={classes.records}>\n                            <Grid item xs={false} md={1} lg={3} />\n                            <Grid item xs={12} md={10} lg={6}>\n                                <Paper style={{ marginBottom: '50px' }}>\n                                    <ProfileTable data={profile.entries} />\n                                </Paper>\n                                <Paper style={{ paddingTop: '10px', marginBottom: '50px' }}>\n                                    <RecordDeltaChart data={profile.entries} mode={1} title=\"Single Player\" color=\"#2E93fA\" />\n                                </Paper>\n                                <Paper style={{ paddingTop: '10px', marginBottom: '50px' }}>\n                                    <RecordDeltaChart data={profile.entries} mode={2} title=\"Cooperative\" color=\"#FF9800\" />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </>\n                ) : profile === undefined ? (\n                    <LinearProgress />\n                ) : (\n                    <Grid style={{ height: '100%' }} container className={classes.records}>\n                        <Grid item xs={false} md={1} lg={2} />\n                        <Grid item xs={12} md={10} lg={9}>\n                            <Paper>\n                                <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }}>\n                                    Profile not found :(\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                )}\n            </Dialog>\n        </>\n    );\n};\n\nexport default ProfileDialog;\n","import React from 'react';\nimport Flag from 'react-world-flags';\nimport { library as fa } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMedal } from '@fortawesome/free-solid-svg-icons';\nimport Avatar from '@material-ui/core/Avatar';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nfa.add(faMedal);\n\nconst rows = [\n    { id: 'rank', numeric: true, sortable: false, label: 'Rank' },\n    { id: 'name', numeric: false, sortable: false, label: 'Player' },\n    { id: 'score', numeric: true, sortable: true, label: 'Portals' },\n];\n\nconst ScoresTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell key={row.id} align={row.numeric ? 'center' : 'left'} sortDirection={orderBy === row.id ? order : false}>\n                        {row.sortable === true && (\n                            <Tooltip title=\"Sort\" placement={row.numeric ? 'bottom-end' : 'bottom-start'} enterDelay={300}>\n                                <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        overflowX: 'auto',\n    },\n    playerCell: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    clickLink: {\n        cursor: 'pointer',\n    },\n}));\n\nconst ScoresTable = ({ data, handleClickOpen }) => {\n    const [state, setState] = React.useState({\n        order: 'asc',\n        orderBy: 'score',\n    });\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (state.orderBy === property && state.order === 'desc') {\n            order = 'asc';\n        }\n\n        setState({ order, orderBy });\n    };\n\n    const classes = useStyles();\n    const { order, orderBy } = state;\n\n    return (\n        <div className={classes.root}>\n            <Table>\n                <ScoresTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.length} />\n                <TableBody>\n                    {stableSort(data, order, orderBy).map((item) => {\n                        return (\n                            <TableRow hover tabIndex={-1} key={item._id}>\n                                <TableCell size=\"small\" align=\"center\">\n                                    {item.rank === 1 ? (\n                                        <FontAwesomeIcon title=\"Rank 1\" icon=\"medal\" color=\"#ffd700\" />\n                                    ) : item.rank === 2 ? (\n                                        <FontAwesomeIcon title=\"Rank 2\" icon=\"medal\" color=\"#C0C0C0\" />\n                                    ) : item.rank === 3 ? (\n                                        <FontAwesomeIcon title=\"Rank 3\" icon=\"medal\" color=\"#cd7f32\" />\n                                    ) : (\n                                        item.rank\n                                    )}\n                                </TableCell>\n                                <TableCell size=\"small\">\n                                    <div className={classes.playerCell}>\n                                        <Avatar src={item.avatar} />\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                        <Link className={classes.clickLink} onClick={handleClickOpen(item._id)} color=\"inherit\">\n                                            {item.name}\n                                        </Link>\n                                        {item.country && (\n                                            <>\n                                                &nbsp;&nbsp;&nbsp;\n                                                <Flag code={item.country} height=\"12\" alt={item.country} />\n                                            </>\n                                        )}\n                                    </div>\n                                </TableCell>\n                                <TableCell size=\"small\" align=\"center\">\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            <div>\n                                                {`${item.stats.percentage}% (${item.score - item.stats.delta}+${item.stats.delta})`}\n                                                {item.scoreOld !== item.score && (\n                                                    <>\n                                                        <br />\n                                                        {item.scoreOld + ' 🠊 ' + item.score}\n                                                    </>\n                                                )}\n                                            </div>\n                                        }\n                                        disableFocusListener\n                                        disableTouchListener\n                                    >\n                                        <div>{item.score}</div>\n                                    </Tooltip>\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default ScoresTable;\n","class Api {\n    constructor() {\n        this.baseApi = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : 'https://raw.githubusercontent.com/NeKzor/lp/api';\n    }\n    async request(route) {\n        let res = await fetch(route);\n        console.log(`[GET] ${route} (${res.status})`);\n        return res;\n    }\n    async getRecords() {\n        let res = await this.request(`${this.baseApi}/records.json`);\n        return res.ok ? (await res.json()).data : {};\n    }\n    async getBoard(board) {\n        if (board !== 'sp' && board !== 'mp' && board !== 'overall') throw new Error('Invalid board!');\n\n        let res = await this.request(`${this.baseApi}/${board}.json`);\n        return res.ok ? (await res.json()).data : {};\n    }\n    async getProfile(id) {\n        let res = await this.request(`${this.baseApi}/profile/${id}.json`);\n        return res.ok ? (await res.json()).data : null;\n    }\n}\n\nexport default new Api();\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport ProfileDialog from '../components/ProfileDialog';\nimport ScoresTable from '../components/ScoresTable';\nimport Api from '../Api';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst ScoreboardView = ({ boardType, profileId }) => {\n    const isMounted = useIsMounted();\n\n    const [board, setBoard] = React.useState([]);\n    const [profile, setProfile] = React.useState(undefined);\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n\n    const {\n        state: { records },\n    } = React.useContext(AppState);\n\n    const prepareProfile = (profile) => {\n        if (profile) {\n            profile.entries.forEach((entry) => {\n                let map = records.find((record) => record.id === entry._id);\n                entry.name = map.name;\n                entry.index = map.index;\n                entry.delta = Math.abs(map.wr - entry.score);\n                entry.showcase = map.showcases.find((sc) => sc.player.id === profile._id || (sc.player2 && sc.player2.id === profile._id));\n            });\n\n            let missing = [];\n            records.forEach((record) => {\n                let entry = profile.entries.find((entry) => entry._id === record.id);\n                if (!entry) {\n                    missing.push({\n                        _id: record.id,\n                        name: record.name,\n                        index: record.index,\n                    });\n                }\n            });\n\n            profile.entries.push(...missing);\n        }\n        return profile;\n    };\n\n    React.useEffect(() => {\n        if (profile === undefined && profileId) {\n            setDialogOpen(true);\n\n            Api.getProfile(profileId)\n                .then((profile) => isMounted.current && setProfile(prepareProfile(profile)))\n                .catch((err) => console.error(err));\n        } else if (board.length === 0) {\n            Api.getBoard(boardType)\n                .then((board) => isMounted.current && setBoard(board))\n                .catch((err) => console.error(err));\n        }\n    }, []);\n\n    const handleProfileOpen = (id) => () => {\n        setDialogOpen(true);\n\n        Api.getProfile(id)\n            .then((profile) => isMounted.current && setProfile(prepareProfile(profile)))\n            .catch((err) => console.error(err));\n    };\n\n    const handleProfileClose = () => {\n        setDialogOpen(false);\n\n        if (board.length === 0) {\n            Api.getBoard(boardType)\n                .then((board) => isMounted.current && setBoard(board))\n                .catch((err) => console.error(err));\n        }\n    };\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={false} md={1} lg={3} />\n                <Grid item xs={12} md={10} lg={6}>\n                    <Paper style={{ marginBottom: '50px' }}>\n                        {board.length === 0 && <LinearProgress />}\n                        <ScoresTable data={board} handleClickOpen={handleProfileOpen} />\n                    </Paper>\n                </Grid>\n            </Grid>\n            <ProfileDialog active={dialogOpen} profile={profile} handleClickClose={handleProfileClose} />\n        </>\n    );\n};\n\nexport default ScoreboardView;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst NotFoundView = () => {\n    return (\n        <Grid container>\n            <Grid item xs={false} md={1} lg={2} />\n            <Grid item xs={12} md={10} lg={9}>\n                <Paper>\n                    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }}>\n                        Page not found :(\n                    </Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\nimport teal from '@material-ui/core/colors/teal';\nimport AppBar from './components/AppBar';\nimport AboutView from './views/AboutView';\nimport RecordsView from './views/RecordsView';\nimport ScoreboardView from './views/ScoreboardView';\nimport Api from './Api';\nimport AppState, { AppReducer } from './AppState';\nimport NotFoundView from './views/NotFoundView';\n\nconst useStyles = makeStyles((theme) => ({\n    views: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(...AppReducer);\n\n    React.useEffect(() => {\n        Api.getRecords()\n            .then((data) => dispatch({ action: 'setRecords', data }))\n            .catch((err) => console.error(err));\n    }, []);\n\n    const theme = React.useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                primary: {\n                    light: teal[300],\n                    main: teal[500],\n                    dark: teal[700],\n                },\n                secondary: {\n                    light: '#fff',\n                    main: '#fff',\n                    dark: '#fff',\n                },\n                error: {\n                    main: red.A400,\n                },\n                type: state.darkMode.enabled ? 'dark' : 'light',\n            },\n            typography: {\n                useNextVariants: true,\n            },\n        });\n    }, [state.darkMode.enabled]);\n\n    const classes = useStyles();\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n    const tabs = ['/single-player', '/cooperative', '/overall', '/records', '/about'];\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppState.Provider value={context}>\n                <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/lp' : '/'}>\n                    <Route\n                        path=\"/\"\n                        render={({ location: { pathname } }) => (\n                            <>\n                                <AppBar currentTab={tabs.findIndex((x) => x === pathname)} />\n                                {state.records.length !== 0 ? (\n                                    <div className={classes.views}>\n                                        <Switch>\n                                            <Redirect exact from=\"/\"     to=\"/single-player\" />\n                                            <Redirect exact from=\"/sp\"   to=\"/single-player\" />\n                                            <Redirect exact from=\"/mp\"   to=\"/cooperative\" />\n                                            <Redirect exact from=\"/coop\" to=\"/cooperative\" />\n                                            <Redirect exact from=\"/ov\"   to=\"/overall\" />\n                                            <Redirect exact from=\"/wrs\"  to=\"/records\" />\n                                            <Route exact path=\"/single-player\" component={() => <ScoreboardView boardType=\"sp\" />} />\n                                            <Route exact path=\"/cooperative\"   component={() => <ScoreboardView boardType=\"mp\" />} />\n                                            <Route exact path=\"/overall\"       component={() => <ScoreboardView boardType=\"overall\" />} />\n                                            <Route exact path=\"/records\"       component={RecordsView} />\n                                            <Route exact path=\"/about\"         component={AboutView} />\n                                            <Route\n                                                exact\n                                                from=\"/@/:id\"\n                                                component={({ match: { params } }) => (\n                                                    <ScoreboardView boardType=\"sp\" profileId={params.id} />\n                                                )}\n                                            />\n                                            <Route component={NotFoundView} />\n                                        </Switch>\n                                    </div>\n                                ) : (\n                                    <LinearProgress />\n                                )}\n                            </>\n                        )}\n                    />\n                </BrowserRouter>\n            </AppState.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/registerServiceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}