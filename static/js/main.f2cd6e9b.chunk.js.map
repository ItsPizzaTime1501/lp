{"version":3,"sources":["components/Tabs.js","components/AppBar.js","AppState.js","Hooks.js","views/AboutView.js","utils/stableSort.js","components/Showcase.js","components/RecordsTable.js","components/RecordChart.js","views/RecordsView.js","components/ProfileTable.js","components/RecordDeltaChart.js","components/ProfileDialog.js","components/ScoresTable.js","Api.js","views/ScoreboardView.js","views/NotFoundView.js","App.js","utils/registerServiceWorker.js","index.js"],"names":["SiteTabs","currentTab","Tabs","value","variant","textColor","color","indicatorColor","Tab","label","component","Link","to","useStyles","makeStyles","theme","root","paddingBottom","spacing","list","width","menuButton","marginLeft","marginRight","pageLinks","text","link","gotoPage","page","window","open","AppBarWithDrawer","React","useState","setOpen","showDrawer","state","classes","className","List","ListItem","button","key","onClick","ListItemText","primary","Divider","map","item","index","AppBar","position","Toolbar","IconButton","Typography","SwipeableDrawer","onClose","onOpen","tabIndex","role","onKeyDown","inititalState","records","cheaters","darkMode","constructor","this","enabled","localStorage","getItem","toggle","setItem","toString","AppReducer","action","data","console","log","expose","maps","Error","createContext","useIsMounted","ref","useRef","useEffect","current","help","cursor","aboutBox","padding","branches","repo","branch","noWrap","whiteSpace","MinTableCell","props","TableCell","size","Padding","style","paddingTop","AboutView","isMounted","useContext","AppState","dispatch","gitHub","setGitHub","anyErrors","err","error","undefined","Promise","all","fetch","then","results","res","json","sha","author","commit","message","date","catch","detectedCheaters","Tooltip","placement","title","disableFocusListener","disableTouchListener","length","Grid","container","xs","md","lg","Paper","CircularProgress","progress","overflowX","Table","TableHead","TableRow","TableBody","idx","align","rel","href","moment","from","html_url","login","name","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","stableSort","array","order","orderBy","desc","a","b","cmp","el","sort","card","margin","media","height","Showcase","avatar","Avatar","alt","player","src","Card","CardHeader","subheader","id","opener","enterDelay","CardMedia","image","split","rows","numeric","sortable","RecordsTableHead","onRequestSort","disablePadding","sortDirection","TableSortLabel","active","direction","property","event","helpLink","showcase","backgroundColor","palette","type","grey","RecordsTable","rowsPerPage","setState","curRecord","setCurRecord","ExcludedMapsInfo","_","rowCount","record","Fragment","hover","target","wr","excluded","ties","colSpan","border","Collapse","in","timeout","unmountOnExit","showcases","Hidden","smDown","chartOptions","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","stroke","show","colors","yaxis","max","fill","opacity","tooltip","y","formatter","val","RecordChart","mode","sorted","filter","m","series","useTheme","options","xaxis","categories","labels","offsetY","fontSize","chart","background","common","white","searchBox","marginBottom","RecordsView","searchTerm","setSearchTerm","Input","placeholder","ev","disableUnderline","x","toUpperCase","startsWith","parseInt","filterRecords","ProfileTableHead","ProfileTable","UnknownScoreInfo","score","delta","_id","RecordDeltaChart","Math","tickAmount","stats","flex","paper","textAlign","Transition","forwardRef","Slide","ProfileStat","oldScore","percentage","gutterBottom","ProfileDialog","profile","handleClickClose","Dialog","fullScreen","TransitionComponent","Button","gotoSteamProfile","country","code","top","Skeleton","entries","LinearProgress","fa","add","faMedal","ScoresTableHead","playerCell","display","alignItems","clickLink","ScoresTable","handleClickOpen","rank","icon","scoreOld","baseApi","request","route","status","getRecords","ok","getBoard","board","getProfile","ScoreboardView","boardType","profileId","setBoard","setProfile","dialogOpen","setDialogOpen","prepareProfile","useCallback","forEach","entry","find","abs","sc","player2","missing","push","Api","NotFoundView","views","marginTop","App","useReducer","useMemo","createMuiTheme","light","teal","main","dark","secondary","red","A400","typography","useNextVariants","context","tabs","ThemeProvider","CssBaseline","Provider","basename","path","render","location","pathname","findIndex","exact","match","params","Boolean","hostname","ReactDOM","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2cd6e9b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nconst SiteTabs = ({ currentTab }) => {\n    return (\n        <>\n            <Tabs\n                value={currentTab !== -1 ? currentTab : 0}\n                variant=\"scrollable\"\n                textColor=\"inherit\"\n                color=\"inherit\"\n                indicatorColor=\"secondary\"\n            >\n                <Tab label=\"Single Player\" component={Link} to=\"/single-player\" />\n                <Tab label=\"Cooperative\" component={Link} to=\"/cooperative\" />\n                <Tab label=\"Overall\" component={Link} to=\"/overall\" />\n                <Tab label=\"Records\" component={Link} to=\"/records\" />\n                <Tab label=\"About\" component={Link} to=\"/about\" />\n            </Tabs>\n        </>\n    );\n};\n\nexport default SiteTabs;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SiteTabs from './Tabs';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: theme.spacing(14),\n    },\n    list: {\n        width: theme.spacing(25),\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n}));\n\nconst pageLinks = [\n    { text: 'Glitches', link: 'glitches.html' },\n    { text: 'Least Portals', link: 'lp' },\n    { text: 'Demo Parser', link: 'parser.html' },\n    { text: 'Cvars', link: 'cvars' },\n];\nconst homepage = 'https://nekzor.github.io/';\n\nconst gotoPage = (page) => () => {\n    window.open(homepage + page, '_self');\n};\n\nconst AppBarWithDrawer = ({ currentTab }) => {\n    const [open, setOpen] = React.useState(false);\n\n    const showDrawer = (state) => () => {\n        setOpen(state);\n    };\n\n    const classes = useStyles();\n\n    const list = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key={0} onClick={gotoPage('index.html')}>\n                    <ListItemText primary={'nekzor.github.io'} />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {pageLinks.map((item, index) => (\n                    <ListItem button key={index} onClick={gotoPage(`${item.link}`)}>\n                        <ListItemText primary={item.text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton onClick={showDrawer(true)} className={classes.menuButton} color=\"inherit\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        Least Portals\n                    </Typography>\n                </Toolbar>\n                <SiteTabs currentTab={currentTab} />\n            </AppBar>\n            <SwipeableDrawer open={open} onClose={showDrawer(false)} onOpen={showDrawer(true)}>\n                <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\n                    {list}\n                </div>\n            </SwipeableDrawer>\n        </div>\n    );\n};\n\nexport default AppBarWithDrawer;\n","import React from 'react';\n\nclass DarkMode {\n    constructor() {\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\n    }\n    toggle() {\n        this.enabled = !this.enabled;\n        localStorage.setItem('dark_mode', this.enabled.toString());\n        return this;\n    }\n}\n\nconst inititalState = {\n    records: [],\n    cheaters: [],\n    darkMode: new DarkMode(),\n};\n\nexport const AppReducer = [\n    (state, { action, data }) => {\n        console.log('[DISPATCH] ' + action);\n        switch (action) {\n            case 'setRecords':\n                window.expose = () => data.cheaters;\n                return {\n                    ...state,\n                    records: data.maps || [],\n                    cheaters: data.cheaters || [],\n                };\n            case 'toggleDarkMode':\n                return {\n                    ...state,\n                    darkMode: state.darkMode.toggle(),\n                };\n            default:\n                throw new Error('Unknown action type.');\n        }\n    },\n    inititalState,\n];\n\nexport default React.createContext(inititalState);\n","import React from 'react';\n\nexport const useIsMounted = () => {\n    const ref = React.useRef(false);\n    React.useEffect(() => {\n        ref.current = true;\n        return () => (ref.current = false);\n    }, []);\n    return ref;\n};\n\nexport const useRenders = (debug) => {\n    const ref = React.useRef(0);\n    console.log(debug + ' renders: ', ++ref.current);\n};\n\nexport const useTitle = (title) => {\n    React.useEffect(() => {\n        document.title = title + ' - ' + document.location.host;\n    }, [title]);\n};\n","import React from 'react';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    help: {\n        cursor: 'help',\n    },\n    aboutBox: {\n        padding: theme.spacing(3),\n    },\n}));\n\nconst branches = [\n    { repo: 'NeKzor/lp', branch: 'master' },\n    { repo: 'NeKzBot/lp', branch: 'api' },\n    { repo: 'NeKzor/lp', branch: 'gh-pages' },\n];\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />;\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\n\nconst AboutView = () => {\n    const isMounted = useIsMounted();\n\n    const {\n        state: { cheaters, darkMode },\n        dispatch,\n    } = React.useContext(AppState);\n\n    const [gitHub, setGitHub] = React.useState([]);\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        const anyErrors = (err) => {\n            console.error(err);\n            if (isMounted.current) {\n                setGitHub(undefined);\n            }\n        };\n\n        Promise.all(branches.map(({ repo, branch }) => fetch(`https://api.github.com/repos/${repo}/commits/${branch}`)))\n            .then((results) => {\n                Promise.all(results.map((res) => res.json()))\n                    .then((branches) => {\n                        if (isMounted.current) {\n                            setGitHub(\n                                branches.map((branch) => ({\n                                    sha: branch.sha,\n                                    author: branch.author ? branch.author : branch.commit.author,\n                                    message: branch.commit.message,\n                                    date: branch.commit.author.date,\n                                })),\n                            );\n                        }\n                    })\n                    .catch(anyErrors);\n            })\n            .catch(anyErrors);\n    }, [isMounted]);\n\n    const toggleDarkMode = () => {\n        dispatch({ action: 'toggleDarkMode' });\n    };\n\n    const detectedCheaters = (\n        <Tooltip\n            placement=\"right\"\n            title=\"Automatic ban system catches users who cheated at least once.\"\n            disableFocusListener\n            disableTouchListener\n        >\n            <Link className={classes.help}>{cheaters.length}</Link>\n        </Tooltip>\n    );\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={false} md={1} lg={3} />\n                <Grid item xs={12} md={10} lg={6}>\n                    <Paper className={classes.aboutBox}>\n                        <Typography component=\"h2\" variant=\"h3\">\n                            Who's the lp king?\n                        </Typography>\n                        <br />\n                        <Typography variant=\"body1\">\n                            This leaderboard includes all legit players who care about least portal records in Portal 2.\n                        </Typography>\n\n                        <Padding />\n\n                        <Typography component=\"h2\" variant=\"h5\">\n                            Ranking Requirements\n                        </Typography>\n                        <br />\n                        <Typography variant=\"body1\">- Be in top 5000 on every single player or cooperative leaderboard.</Typography>\n                        <Typography variant=\"body1\">- Tie as many records as possible or get at least very close to it.</Typography>\n                        <Typography variant=\"body1\">- Don't be one of the {detectedCheaters} cheaters.</Typography>\n\n                        <Padding />\n\n                        <Typography variant=\"h5\">Last Update</Typography>\n                        <br />\n                        {gitHub === undefined ? (\n                            <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\n                        ) : gitHub.length === 0 ? (\n                            <CircularProgress className={classes.progress} />\n                        ) : (\n                            <div style={{ overflowX: 'auto' }}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Branch</Typography>\n                                            </TableCell>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Date</Typography>\n                                            </TableCell>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Author</Typography>\n                                            </TableCell>\n                                            <TableCell padding=\"default\">\n                                                <Typography variant=\"body1\">Commit</Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {gitHub.map((commit, idx) => {\n                                            const { repo, branch } = branches[idx];\n                                            return (\n                                                <TableRow tabIndex={-1} key={idx} style={noWrap}>\n                                                    <MinTableCell align=\"left\">\n                                                        <Link\n                                                            color=\"inherit\"\n                                                            rel=\"noopener\"\n                                                            href={`https://github.com/${repo}/tree/${branch}`}\n                                                        >\n                                                            {branch}\n                                                        </Link>\n                                                    </MinTableCell>\n                                                    <MinTableCell align=\"left\" style={noWrap}>\n                                                        <Tooltip title={moment(commit.date).toString()}>\n                                                            <span>{moment(commit.date).from()}</span>\n                                                        </Tooltip>\n                                                    </MinTableCell>\n                                                    <MinTableCell align=\"left\">\n                                                        {commit.author.html_url ? (\n                                                            <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\n                                                                {commit.author.login}\n                                                            </Link>\n                                                        ) : (\n                                                            commit.author.name || 'n/a'\n                                                        )}\n                                                    </MinTableCell>\n                                                    <MinTableCell align=\"left\" style={noWrap}>\n                                                        <Tooltip title={commit.message}>\n                                                            <Link\n                                                                color=\"inherit\"\n                                                                rel=\"noopener\"\n                                                                href={`https://github.com/${repo}/commit/${commit.sha}`}\n                                                            >\n                                                                {commit.sha}\n                                                            </Link>\n                                                        </Tooltip>\n                                                    </MinTableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        )}\n\n                        <Padding />\n\n                        <Typography variant=\"h5\">Theme Settings</Typography>\n                        <br />\n                        <FormGroup row>\n                            <FormControlLabel\n                                control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\n                                label=\"Dark Mode\"\n                            />\n                        </FormGroup>\n\n                        <Padding />\n\n                        <Tooltip title=\"Source Code\">\n                            <Link rel=\"noopener\" href=\"https://github.com/NeKzor/lp\">\n                                github.com/NeKzor/lp\n                            </Link>\n                        </Tooltip>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default AboutView;\n","const stableSort = (array, order, orderBy) => {\n    let desc = (a, b) => {\n        if (b[orderBy] < a[orderBy]) return -1;\n        if (b[orderBy] > a[orderBy]) return 1;\n        return 0;\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\n\nexport default stableSort;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(2),\n    },\n    media: {\n        height: 190,\n    },\n}));\n\nconst watch = (id) => () => {\n    let tab = window.open(`https://youtu.be/${id}`, '_blank');\n    tab.opener = null;\n};\n\nconst Showcase = ({ data }) => {\n    const classes = useStyles();\n\n    const avatar = (\n        <Avatar alt={data.player.name} src={data.player.avatar}>\n            {!data.player.avatar ? data.player.name[0] : undefined}\n        </Avatar>\n    );\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader avatar={avatar} title={data.player.name} subheader={data.date} />\n            <Tooltip\n                title=\"Watch on YouTube\"\n                onClick={watch(data.media)}\n                style={{ cursor: 'pointer' }}\n                placement=\"top\"\n                enterDelay={1000}\n                disableFocusListener\n                disableTouchListener\n            >\n                <CardMedia className={classes.media} image={`https://i.ytimg.com/vi/${data.media.split('?')[0]}/sddefault.jpg`} />\n            </Tooltip>\n        </Card>\n    );\n};\n\nexport default Showcase;\n","import React from 'react';\nimport Collapse from '@material-ui/core/Collapse';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport stableSort from '../utils/stableSort';\nimport Showcase from './Showcase';\n\nconst rows = [\n    { id: 'index', numeric: false, sortable: true, label: 'Map' },\n    { id: 'wr', numeric: true, sortable: true, label: 'Portals' },\n    { id: 'ties', numeric: true, sortable: true, label: 'Ties' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map(\n                    (row) => (\n                        <TableCell\n                            key={row.id}\n                            align={row.numeric ? 'center' : 'left'}\n                            padding={row.disablePadding ? 'none' : 'default'}\n                            sortDirection={orderBy === row.id ? order : false}\n                        >\n                            {row.sortable === true && (\n                                <Tooltip title=\"Sort\" placement={row.numeric ? 'bottom-end' : 'bottom-start'} enterDelay={300}>\n                                    <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                        {row.label}\n                                    </TableSortLabel>\n                                </Tooltip>\n                            )}\n                            {row.sortable === false && row.label}\n                        </TableCell>\n                    ),\n                    this,\n                )}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        overflowX: 'auto',\n    },\n    helpLink: {\n        cursor: 'help',\n    },\n    showcase: {\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.grey['A400'] : theme.palette.grey['50'],\n        paddingBottom: 0,\n        paddingTop: 0,\n    },\n}));\n\nconst RecordsTable = ({ data }) => {\n    const [state, setState] = React.useState({\n        order: 'asc',\n        orderBy: 'index',\n        page: 0,\n        rowsPerPage: 100,\n    });\n    const [curRecord, setCurRecord] = React.useState(0);\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (state.orderBy === property && state.order === 'desc') {\n            order = 'asc';\n        }\n\n        setState({ order, orderBy });\n    };\n\n    const classes = useStyles();\n\n    const ExcludedMapsInfo = () => (\n        <Tooltip placement=\"right\" title=\"Disabled tracking records for this map.\" disableFocusListener disableTouchListener>\n            <Link className={classes.helpLink}>n/a</Link>\n        </Tooltip>\n    );\n\n    const handleRowClick = (id) => () => {\n        setCurRecord(curRecord !== id ? id : 0);\n    };\n\n    const { order, orderBy } = state;\n\n    return (\n        <div className={classes.root}>\n            <Table>\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.length} />\n                <TableBody>\n                    {stableSort(data, order, orderBy).map((record) => {\n                        return (\n                            <React.Fragment key={record.id}>\n                                <TableRow hover tabIndex={-1} onClick={handleRowClick(record.id)} style={{ cursor: 'pointer' }}>\n                                    <TableCell size=\"small\">\n                                        <Link\n                                            target=\"_blank\"\n                                            rel=\"noopener\"\n                                            color=\"inherit\"\n                                            href={`https://steamcommunity.com/stats/Portal2/leaderboards/${record.id}`}\n                                        >\n                                            {record.name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell size=\"small\" align=\"center\">\n                                        {record.wr}\n                                    </TableCell>\n                                    <TableCell size=\"small\" align=\"center\">\n                                        {record.excluded === true ? <ExcludedMapsInfo /> : record.ties}\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell\n                                        size=\"small\"\n                                        className={classes.showcase}\n                                        colSpan={3}\n                                        style={{ border: record.id !== curRecord ? 0 : undefined }}\n                                    >\n                                        <Collapse in={record.id === curRecord} timeout=\"auto\" unmountOnExit>\n                                            <Grid container>\n                                                {record.showcases.length === 1 && (\n                                                    <>\n                                                        <Hidden smDown>\n                                                            <Grid item md={2} lg={2} />\n                                                        </Hidden>\n                                                        <Grid item xs={12} md={8} lg={8}>\n                                                            <Showcase data={record.showcases[0]} />\n                                                        </Grid>\n                                                    </>\n                                                )}\n                                                {record.showcases.length > 1 &&\n                                                    record.showcases.map((showcase, idx) => (\n                                                        <Grid key={idx} item xs={12} md={6} lg={6}>\n                                                            <Showcase data={showcase} />\n                                                        </Grid>\n                                                    ))}\n                                            </Grid>\n                                        </Collapse>\n                                    </TableCell>\n                                </TableRow>\n                            </React.Fragment>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport ReactApexCharts from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\n\nconst chartOptions = {\n    plotOptions: {\n        bar: {\n            horizontal: false,\n            columnWidth: '100%',\n            endingShape: 'rounded',\n        },\n    },\n    dataLabels: {\n        enabled: false,\n    },\n    stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent'],\n    },\n    yaxis: {\n        title: {\n            text: 'Portals',\n        },\n        max: 12,\n    },\n    fill: {\n        opacity: 1,\n    },\n    tooltip: {\n        y: {\n            formatter: function(val) {\n                return val + ' portal' + (val === 1 ? '' : 's');\n            },\n        },\n    },\n};\n\nconst RecordChart = ({ data, mode, title, color }) => {\n    const sorted = data.filter((m) => m.mode === mode).sort((a, b) => a.index - b.index);\n\n    const series = [\n        {\n            name: 'World Record',\n            data: sorted.map((m) => m.wr),\n        },\n    ];\n\n    const theme = useTheme();\n\n    const options = {\n        ...chartOptions,\n        xaxis: {\n            categories: sorted.map((m) => m.name),\n            labels: {\n                show: false,\n            },\n        },\n        title: {\n            text: title,\n            align: 'center',\n            offsetY: 10,\n            style: {\n                fontSize: 24,\n            },\n        },\n        colors: [color],\n        chart: {\n            background: theme.palette.type === 'dark' ? theme.palette.grey['800'] : theme.palette.common.white,\n        },\n        theme: {\n            mode: theme.palette.type,\n        },\n    };\n\n    return <ReactApexCharts options={options} series={series} type=\"bar\" height=\"350\" />;\n};\n\nexport default RecordChart;\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordsTable from '../components/RecordsTable';\nimport RecordChart from '../components/RecordChart';\nimport AppState from '../AppState';\n\nconst useStyles = makeStyles((theme) => ({\n    searchBox: {\n        padding: 10,\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nconst RecordsView = () => {\n    const {\n        state: { records },\n    } = React.useContext(AppState);\n\n    const [searchTerm, setSearchTerm] = React.useState('');\n\n    const filterRecords = (records) => {\n        return records.filter((x) => {\n            return searchTerm.length === 0 || x.name.toUpperCase().startsWith(searchTerm.toUpperCase()) || x.wr === parseInt(searchTerm);\n        });\n    };\n\n    const handleInputChange = (ev) => {\n        setSearchTerm(ev.target.value);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={false} md={1} lg={3} />\n                <Grid item xs={12} md={10} lg={6}>\n                    <Paper style={{ paddingTop: '5px', marginBottom: '24px' }}>\n                        <RecordChart data={records} mode={1} title=\"Single Player\" color=\"#2E93fA\" />\n                    </Paper>\n                    <Paper style={{ paddingTop: '5px', marginBottom: '24px' }}>\n                        <RecordChart data={records} mode={2} title=\"Cooperative\" color=\"#FF9800\" />\n                    </Paper>\n                    <Paper className={classes.searchBox}>\n                        <FormGroup>\n                            <Input placeholder=\"Search\" onChange={handleInputChange} disableUnderline={true} />\n                        </FormGroup>\n                    </Paper>\n                    <Paper style={{ marginBottom: '50px' }}>\n                        <RecordsTable data={filterRecords(records)} />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default RecordsView;\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nconst rows = [\n    { id: 'index', numeric: false, sortable: true, label: 'Map' },\n    { id: 'score', numeric: true, sortable: true, label: 'Portals' },\n    { id: 'delta', numeric: true, sortable: true, label: 'ΔWR' },\n];\n\nconst ProfileTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map(\n                    (row) => (\n                        <TableCell\n                            key={row.id}\n                            align={row.numeric ? 'center' : 'center'}\n                            padding={row.disablePadding ? 'none' : 'default'}\n                            sortDirection={orderBy === row.id ? order : false}\n                        >\n                            {row.sortable === true && (\n                                <Tooltip title=\"Sort\" placement={row.numeric ? 'bottom-end' : 'bottom-start'} enterDelay={300}>\n                                    <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                        {row.label}\n                                    </TableSortLabel>\n                                </Tooltip>\n                            )}\n                            {row.sortable === false && row.label}\n                        </TableCell>\n                    ),\n                    this,\n                )}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst ProfileTable = ({ data }) => {\n    const [state, setState] = React.useState({\n        order: 'asc',\n        orderBy: 'index',\n    });\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (state.orderBy === property && state.order === 'desc') {\n            order = 'asc';\n        }\n\n        setState({ order, orderBy });\n    };\n\n    const classes = useStyles();\n    const { order, orderBy } = state;\n\n    const UnknownScoreInfo = () => (\n        <Tooltip placement=\"right\" title=\"Unknown score.\" disableFocusListener disableTouchListener>\n            <Link style={{ cursor: 'help' }}>n/a</Link>\n        </Tooltip>\n    );\n\n    return (\n        <div className={classes.root}>\n            <Table>\n                <ProfileTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.length} />\n                <TableBody>\n                    {stableSort(data, order, orderBy).map((record) => {\n                        let score =\n                            record.score !== undefined ? (\n                                record.showcase ? (\n                                    <Tooltip placement=\"right\" title=\"Watch on YouTube\" disableFocusListener disableTouchListener>\n                                        <Link target=\"_blank\" rel=\"noopener\" href={`https://youtu.be/${record.showcase.media}`}>\n                                            <b>{record.score}</b>\n                                        </Link>\n                                    </Tooltip>\n                                ) : (\n                                    record.score\n                                )\n                            ) : (\n                                <UnknownScoreInfo />\n                            );\n                        let delta = record.score !== undefined ? record.delta === 0 ? '' : `+${record.delta}` : <UnknownScoreInfo />;\n\n                        return (\n                            <TableRow hover tabIndex={-1} key={record._id}>\n                                <TableCell size=\"small\" align=\"center\">\n                                    <Link\n                                        target=\"_blank\"\n                                        rel=\"noopener\"\n                                        color=\"inherit\"\n                                        href={`https://steamcommunity.com/stats/Portal2/leaderboards/${record._id}`}\n                                    >\n                                        {record.name}\n                                    </Link>\n                                </TableCell>\n                                <TableCell size=\"small\" align=\"center\">\n                                    {score}\n                                </TableCell>\n                                <TableCell size=\"small\" align=\"center\">\n                                    {delta}\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default ProfileTable;\n","import React from 'react';\nimport ReactApexCharts from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\n\nconst chartOptions = {\n    plotOptions: {\n        bar: {\n            horizontal: false,\n            columnWidth: '100%',\n            endingShape: 'rounded',\n        },\n    },\n    dataLabels: {\n        enabled: false,\n    },\n    stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent'],\n    },\n    yaxis: {\n        title: {\n            text: 'Portals',\n        },\n    },\n    fill: {\n        opacity: 1,\n    },\n    tooltip: {\n        y: {\n            formatter: function(val) {\n                return val + ' portal' + (val === 1 ? '' : 's');\n            },\n        },\n    },\n};\n\nconst RecordDeltaChart = ({ data, mode, title, color }) => {\n    const sorted = data.filter((m) => m.mode === mode).sort((a, b) => a.index - b.index);\n    const max = Math.max(1, ...sorted.map((m) => m.score));\n\n    const series = [\n        {\n            name: 'WR Delta',\n            data: sorted.map((m) => m.delta),\n        },\n    ];\n\n    const theme = useTheme();\n\n    const options = {\n        ...chartOptions,\n        xaxis: {\n            categories: sorted.map((m) => m.name),\n            labels: {\n                show: false,\n            },\n        },\n        yaxis: {\n            ...chartOptions.yaxis,\n            max: max + (max % 2),\n            tickAmount: (max + (max % 2)) / 2,\n        },\n        title: {\n            text: title,\n            align: 'center',\n            offsetY: 10,\n            style: {\n                fontSize: 24,\n            },\n        },\n        colors: [color],\n        chart: {\n            background: theme.palette.type === 'dark' ? theme.palette.grey['800'] : theme.palette.common.white,\n        },\n        theme: {\n            mode: theme.palette.type,\n        },\n    };\n\n    return <ReactApexCharts options={options} series={series} type=\"bar\" height=\"350\" />;\n};\n\nexport default RecordDeltaChart;\n","import React from 'react';\nimport Flag from 'react-world-flags';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport ProfileTable from './ProfileTable';\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordDeltaChart from './RecordDeltaChart';\n\nconst useStyles = makeStyles((theme) => ({\n    stats: {\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        background: theme.palette.type === 'dark' ? theme.palette.grey['A400'] : theme.palette.grey['50'],\n    },\n    records: {\n        paddingTop: theme.spacing(3),\n        background: theme.palette.type === 'dark' ? theme.palette.grey['A400'] : theme.palette.grey['50'],\n    },\n    flex: {\n        flex: 1,\n    },\n    paper: {\n        padding: theme.spacing(5),\n        textAlign: 'center',\n    },\n}));\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Slide direction=\"up\" {...props} ref={ref} />;\n});\n\nconst gotoSteamProfile = (id) => {\n    let tab = window.open(`https://steamcommunity.com/profiles/${id}`, '_blank');\n    tab.opener = null;\n};\n\nconst ProfileStat = ({ title, type, data }) => {\n    const score = data[type];\n    const oldScore = data[type + 'Old'];\n    const delta = data.stats[type].delta;\n    const percentage = data.stats[type].percentage;\n    return (\n        <>\n            <Tooltip\n                placement=\"top\"\n                title={\n                    score === 0 ? (\n                        ''\n                    ) : (\n                        <div>\n                            {`${score - delta}+${delta}`}\n                            {score !== oldScore && (\n                                <>\n                                    <br />\n                                    {oldScore + ' 🠊 ' + score}\n                                </>\n                            )}\n                        </div>\n                    )\n                }\n                disableFocusListener\n                disableTouchListener\n            >\n                <Typography variant=\"h3\" gutterBottom>\n                    {percentage !== 0 ? percentage : 0}%\n                </Typography>\n            </Tooltip>\n            <Typography variant=\"subtitle1\" gutterBottom>\n                {title}\n            </Typography>\n        </>\n    );\n};\n\nconst ProfileDialog = ({ active, profile, handleClickClose }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Dialog fullScreen open={active} onClose={handleClickClose} TransitionComponent={Transition}>\n                <AppBar position=\"sticky\">\n                    <Toolbar>\n                        <Tooltip placement=\"bottom\" title=\"Open Steam profile\" disableFocusListener disableTouchListener>\n                            {profile ? (\n                                <>\n                                    <Button color=\"inherit\" onClick={() => gotoSteamProfile(profile._id)}>\n                                        <Avatar src={profile.avatar} />\n                                    </Button>\n                                    <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                                        &nbsp;&nbsp;&nbsp;{profile.name}\n                                        {profile.country && (\n                                            <>\n                                                &nbsp;&nbsp;&nbsp;\n                                                <Flag\n                                                    code={profile.country}\n                                                    style={{ position: 'relative', top: '2px' }}\n                                                    height=\"15\"\n                                                    alt={profile.country}\n                                                />\n                                            </>\n                                        )}\n                                    </Typography>\n                                </>\n                            ) : (\n                                <>\n                                    <Skeleton variant=\"circle\" width={40} height={40} />\n                                    <Skeleton style={{ marginLeft: '10px' }} variant=\"text\" width={200} />\n                                    <Typography className={classes.flex} />\n                                </>\n                            )}\n                        </Tooltip>\n                        <Tooltip placement=\"bottom\" title=\"Close profile\" disableFocusListener disableTouchListener>\n                            <IconButton color=\"inherit\" onClick={handleClickClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                </AppBar>\n                {profile ? (\n                    <>\n                        <Grid container className={classes.stats}>\n                            <Grid item xs={false} md={1} lg={3} />\n                            <Grid item xs={12} md={10} lg={6}>\n                                {profile.entries.length !== 0 && (\n                                    <Grid container spacing={10}>\n                                        <Grid item xs={12} md={4} lg={4}>\n                                            <Paper className={classes.paper}>\n                                                <ProfileStat title=\"Single Player\" type=\"sp\" data={profile} />\n                                            </Paper>\n                                        </Grid>\n                                        <Grid item xs={12} md={4} lg={4}>\n                                            <Paper className={classes.paper}>\n                                                <ProfileStat title=\"Cooperative\" type=\"mp\" data={profile} />\n                                            </Paper>\n                                        </Grid>\n                                        <Grid item xs={12} md={4} lg={4}>\n                                            <Paper className={classes.paper}>\n                                                <ProfileStat title=\"Overall\" type=\"overall\" data={profile} />\n                                            </Paper>\n                                        </Grid>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>\n                        <Grid container className={classes.records}>\n                            <Grid item xs={false} md={1} lg={3} />\n                            <Grid item xs={12} md={10} lg={6}>\n                                <Paper style={{ marginBottom: '50px' }}>\n                                    <ProfileTable data={profile.entries} />\n                                </Paper>\n                                <Paper style={{ paddingTop: '10px', marginBottom: '50px' }}>\n                                    <RecordDeltaChart data={profile.entries} mode={1} title=\"Single Player\" color=\"#2E93fA\" />\n                                </Paper>\n                                <Paper style={{ paddingTop: '10px', marginBottom: '50px' }}>\n                                    <RecordDeltaChart data={profile.entries} mode={2} title=\"Cooperative\" color=\"#FF9800\" />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </>\n                ) : profile === undefined ? (\n                    <LinearProgress />\n                ) : (\n                    <Grid style={{ height: '100%' }} container className={classes.records}>\n                        <Grid item xs={false} md={1} lg={2} />\n                        <Grid item xs={12} md={10} lg={9}>\n                            <Paper>\n                                <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }}>\n                                    Profile not found :(\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                )}\n            </Dialog>\n        </>\n    );\n};\n\nexport default ProfileDialog;\n","import React from 'react';\nimport Flag from 'react-world-flags';\nimport { library as fa } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMedal } from '@fortawesome/free-solid-svg-icons';\nimport Avatar from '@material-ui/core/Avatar';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport stableSort from '../utils/stableSort';\n\nfa.add(faMedal);\n\nconst rows = [\n    { id: 'rank', numeric: true, sortable: false, label: 'Rank' },\n    { id: 'name', numeric: false, sortable: false, label: 'Player' },\n    { id: 'score', numeric: true, sortable: true, label: 'Portals' },\n];\n\nconst ScoresTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell key={row.id} align={row.numeric ? 'center' : 'left'} sortDirection={orderBy === row.id ? order : false}>\n                        {row.sortable === true && (\n                            <Tooltip title=\"Sort\" placement={row.numeric ? 'bottom-end' : 'bottom-start'} enterDelay={300}>\n                                <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        overflowX: 'auto',\n    },\n    playerCell: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    clickLink: {\n        cursor: 'pointer',\n    },\n}));\n\nconst ScoresTable = ({ data, handleClickOpen }) => {\n    const [state, setState] = React.useState({\n        order: 'asc',\n        orderBy: 'score',\n    });\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (state.orderBy === property && state.order === 'desc') {\n            order = 'asc';\n        }\n\n        setState({ order, orderBy });\n    };\n\n    const classes = useStyles();\n    const { order, orderBy } = state;\n\n    return (\n        <div className={classes.root}>\n            <Table>\n                <ScoresTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.length} />\n                <TableBody>\n                    {stableSort(data, order, orderBy).map((item) => {\n                        return (\n                            <TableRow hover tabIndex={-1} key={item._id}>\n                                <TableCell size=\"small\" align=\"center\">\n                                    {item.rank === 1 ? (\n                                        <FontAwesomeIcon title=\"Rank 1\" icon=\"medal\" color=\"#ffd700\" />\n                                    ) : item.rank === 2 ? (\n                                        <FontAwesomeIcon title=\"Rank 2\" icon=\"medal\" color=\"#C0C0C0\" />\n                                    ) : item.rank === 3 ? (\n                                        <FontAwesomeIcon title=\"Rank 3\" icon=\"medal\" color=\"#cd7f32\" />\n                                    ) : (\n                                        item.rank\n                                    )}\n                                </TableCell>\n                                <TableCell size=\"small\">\n                                    <div className={classes.playerCell}>\n                                        <Avatar src={item.avatar} />\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                        <Link className={classes.clickLink} onClick={handleClickOpen(item._id)} color=\"inherit\">\n                                            {item.name}\n                                        </Link>\n                                        {item.country && (\n                                            <>\n                                                &nbsp;&nbsp;&nbsp;\n                                                <Flag code={item.country} height=\"12\" alt={item.country} />\n                                            </>\n                                        )}\n                                    </div>\n                                </TableCell>\n                                <TableCell size=\"small\" align=\"center\">\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            <div>\n                                                {`${item.stats.percentage}% (${item.score - item.stats.delta}+${item.stats.delta})`}\n                                                {item.scoreOld !== item.score && (\n                                                    <>\n                                                        <br />\n                                                        {item.scoreOld + ' 🠊 ' + item.score}\n                                                    </>\n                                                )}\n                                            </div>\n                                        }\n                                        disableFocusListener\n                                        disableTouchListener\n                                    >\n                                        <div>{item.score}</div>\n                                    </Tooltip>\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default ScoresTable;\n","class Api {\n    constructor() {\n        this.baseApi =\n            process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : 'https://raw.githubusercontent.com/NeKzBot/lp/api';\n    }\n    async request(route) {\n        let res = await fetch(route);\n        console.log(`[GET] ${route} (${res.status})`);\n        return res;\n    }\n    async getRecords() {\n        let res = await this.request(`${this.baseApi}/records.json`);\n        return res.ok ? (await res.json()).data : {};\n    }\n    async getBoard(board) {\n        if (board !== 'sp' && board !== 'mp' && board !== 'overall') throw new Error('Invalid board!');\n\n        let res = await this.request(`${this.baseApi}/${board}.json`);\n        return res.ok ? (await res.json()).data : {};\n    }\n    async getProfile(id) {\n        let res = await this.request(`${this.baseApi}/profile/${id}.json`);\n        return res.ok ? (await res.json()).data : null;\n    }\n}\n\nexport default new Api();\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport ProfileDialog from '../components/ProfileDialog';\nimport ScoresTable from '../components/ScoresTable';\nimport Api from '../Api';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst ScoreboardView = ({ boardType, profileId }) => {\n    const isMounted = useIsMounted();\n\n    const [board, setBoard] = React.useState([]);\n    const [profile, setProfile] = React.useState(undefined);\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n\n    const {\n        state: { records },\n    } = React.useContext(AppState);\n\n    const prepareProfile = React.useCallback((profile) => {\n        if (profile) {\n            profile.entries.forEach((entry) => {\n                let map = records.find((record) => record.id === entry._id);\n                entry.name = map.name;\n                entry.index = map.index;\n                entry.delta = Math.abs(map.wr - entry.score);\n                entry.showcase = map.showcases.find((sc) => sc.player.id === profile._id || (sc.player2 && sc.player2.id === profile._id));\n            });\n\n            let missing = [];\n            records.forEach((record) => {\n                let entry = profile.entries.find((entry) => entry._id === record.id);\n                if (!entry) {\n                    missing.push({\n                        _id: record.id,\n                        name: record.name,\n                        index: record.index,\n                    });\n                }\n            });\n\n            profile.entries.push(...missing);\n        }\n        return profile;\n    }, [records]);\n\n    React.useEffect(() => {\n        if (profile === undefined && profileId) {\n            setDialogOpen(true);\n\n            Api.getProfile(profileId)\n                .then((profile) => isMounted.current && setProfile(prepareProfile(profile)))\n                .catch((err) => console.error(err));\n        } else if (board.length === 0) {\n            Api.getBoard(boardType)\n                .then((board) => isMounted.current && setBoard(board))\n                .catch((err) => console.error(err));\n        }\n    }, [board.length, boardType, isMounted, prepareProfile, profile, profileId]);\n\n    const handleProfileOpen = (id) => () => {\n        setDialogOpen(true);\n        setProfile(undefined);\n\n        Api.getProfile(id)\n            .then((profile) => isMounted.current && setProfile(prepareProfile(profile)))\n            .catch((err) => console.error(err));\n    };\n\n    const handleProfileClose = () => {\n        setDialogOpen(false);\n\n        if (board.length === 0) {\n            Api.getBoard(boardType)\n                .then((board) => isMounted.current && setBoard(board))\n                .catch((err) => console.error(err));\n        }\n    };\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={false} md={1} lg={3} />\n                <Grid item xs={12} md={10} lg={6}>\n                    <Paper style={{ marginBottom: '50px' }}>\n                        {board.length === 0 && <LinearProgress />}\n                        <ScoresTable data={board} handleClickOpen={handleProfileOpen} />\n                    </Paper>\n                </Grid>\n            </Grid>\n            <ProfileDialog active={dialogOpen} profile={profile} handleClickClose={handleProfileClose} />\n        </>\n    );\n};\n\nexport default ScoreboardView;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst NotFoundView = () => {\n    return (\n        <Grid container>\n            <Grid item xs={false} md={1} lg={2} />\n            <Grid item xs={12} md={10} lg={9}>\n                <Paper>\n                    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }}>\n                        Page not found :(\n                    </Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\nimport teal from '@material-ui/core/colors/teal';\nimport AppBar from './components/AppBar';\nimport AboutView from './views/AboutView';\nimport RecordsView from './views/RecordsView';\nimport ScoreboardView from './views/ScoreboardView';\nimport Api from './Api';\nimport AppState, { AppReducer } from './AppState';\nimport NotFoundView from './views/NotFoundView';\n\nconst useStyles = makeStyles((theme) => ({\n    views: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(...AppReducer);\n\n    React.useEffect(() => {\n        Api.getRecords()\n            .then((data) => dispatch({ action: 'setRecords', data }))\n            .catch((err) => console.error(err));\n    }, []);\n\n    const theme = React.useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                primary: {\n                    light: teal[300],\n                    main: teal[500],\n                    dark: teal[700],\n                },\n                secondary: {\n                    light: '#fff',\n                    main: '#fff',\n                    dark: '#fff',\n                },\n                error: {\n                    main: red.A400,\n                },\n                type: state.darkMode.enabled ? 'dark' : 'light',\n            },\n            typography: {\n                useNextVariants: true,\n            },\n        });\n    }, [state.darkMode.enabled]);\n\n    const classes = useStyles();\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n    const tabs = ['/single-player', '/cooperative', '/overall', '/records', '/about'];\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppState.Provider value={context}>\n                <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/lp' : '/'}>\n                    <Route\n                        path=\"/\"\n                        render={({ location: { pathname } }) => (\n                            <>\n                                <AppBar currentTab={tabs.findIndex((x) => x === pathname)} />\n                                {state.records.length !== 0 ? (\n                                    <div className={classes.views}>\n                                        <Switch>\n                                            <Redirect exact from=\"/\"     to=\"/single-player\" />\n                                            <Redirect exact from=\"/sp\"   to=\"/single-player\" />\n                                            <Redirect exact from=\"/mp\"   to=\"/cooperative\" />\n                                            <Redirect exact from=\"/coop\" to=\"/cooperative\" />\n                                            <Redirect exact from=\"/ov\"   to=\"/overall\" />\n                                            <Redirect exact from=\"/wrs\"  to=\"/records\" />\n                                            <Route exact path=\"/single-player\" component={() => <ScoreboardView boardType=\"sp\" />} />\n                                            <Route exact path=\"/cooperative\"   component={() => <ScoreboardView boardType=\"mp\" />} />\n                                            <Route exact path=\"/overall\"       component={() => <ScoreboardView boardType=\"overall\" />} />\n                                            <Route exact path=\"/records\"       component={RecordsView} />\n                                            <Route exact path=\"/about\"         component={AboutView} />\n                                            <Route\n                                                exact\n                                                from=\"/@/:id\"\n                                                component={({ match: { params } }) => (\n                                                    <ScoreboardView boardType=\"sp\" profileId={params.id} />\n                                                )}\n                                            />\n                                            <Route component={NotFoundView} />\n                                        </Switch>\n                                    </div>\n                                ) : (\n                                    <LinearProgress />\n                                )}\n                            </>\n                        )}\n                    />\n                </BrowserRouter>\n            </AppState.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/registerServiceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}